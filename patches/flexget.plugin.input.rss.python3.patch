--- plugins/input/rss.py.orig	2020-02-07 16:45:08.801942517 +0300
+++ plugins/input/rss.py	2020-05-07 23:01:54.717933739 +0300
@@ -18,6 +18,9 @@
 from flexget.utils.cached_input import cached
 from flexget.utils.pathscrub import pathscrub
 from flexget.utils.tools import decode_html
+from bs4 import BeautifulSoup
+from urllib.request import urlopen
+from urllib.request import urlretrieve
 
 logger = logger.bind(name='rss')
 feedparser.registerDateHandler(lambda date_string: dateutil.parser.parse(date_string).timetuple())
@@ -228,6 +231,20 @@
 
         logger.debug('Requesting task `{}` url `{}`', task.name, config['url'])
 
+        #Jambula: Extract podcast poster URL from RSS feed
+        if task.name == 'internet_tv':
+          logger.verbose('Extracting podcast poster URL from RSS feed if available')
+          url = config['url'] 
+          # Set RSS feed page
+          rss_feed_page = urlopen(url)
+          # Extract image links using BeautifulSoup
+          soup = BeautifulSoup(rss_feed_page, "html5lib")
+          image_links = []
+          for img in soup.findAll(['itunes:image']):
+              image_links.append(img.get('href'))
+          # Get first poster image URL
+          podcast_poster_url = image_links[0]
+
         # Used to identify which etag/modified to use
         url_hash = hashlib.md5(config['url'].encode('utf-8')).hexdigest()
 
@@ -439,6 +456,10 @@
             # TODO: confusing? refactor into class member ...
 
             def add_entry(ea):
+                # Add Jambula Fields for RSS feeds
+                if task.name == 'internet_tv':
+                  ea['rss_poster_url'] = podcast_poster_url 
+
                 ea['title'] = entry.title
 
                 # fields dict may be modified during this loop, so loop over a copy (fields.items())
