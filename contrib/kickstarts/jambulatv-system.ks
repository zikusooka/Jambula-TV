###########################################################
#  JambulaTV v7.0 kickstart   -  Jambula Labs 2013-2024   #
#                                                         #
#  IMPORTANT:  Do not add any '#' hash/pound after %post  #
#             line, unless you enjoy killing your entire  #
#             day(s) or weekends!!!                       #
###########################################################

install
url --url=$tree
lang en_US.UTF-8
keyboard --vckeymap=us --xlayouts='us','us'
xconfig --startxonboot --defaultdesktop=LXDE
network --bootproto=static --device=link --noipv6 --hostname=JambulaTV.Series7 --ip=192.168.0.250 --netmask=255.255.255.0 --gateway=0.0.0.0 --nameserver=1.0.0.1,208.67.222.222,8.26.56.26
timezone Africa/Kampala
# Generate encrypted passwd: perl -e 'print crypt($ARGV[0], "MYSALT")' MYPASSWORD
rootpw Ja6hs6tnTmvmg --iscrypted
selinux --disabled
auth --enableshadow --passalgo=sha512
firewall --enabled --service=ssh
firstboot --disable
logging --host=192.168.0.101 --port=514 --level=info #debug,warning,error,critical
vnc 
#poweroff
repo --name=Jambula.F20 --baseurl=http://192.168.0.101/cblr/repo_mirror/Jambula.F20/ --cost=1

######################
#  DISK INFORMATION  #
######################
# Ignore specified disks
ignoredisk --only-use=sda

# Partitions
%include http://192.168.0.101/cblr/pub/kickstarts/includes/jambulatv_07/partitions_default

# Boot options
bootloader --location=mbr --timeout=5 --boot-drive=sda --append=""
#
# Use these boot kernel options to fix computers that freeze occassionally
# For other options: https://www.kernel.org/doc/Documentation/kernel-parameters.txt
# --append="acpi=off noapic"

# Default user
user --name=jambula --gecos=MyJambula --groups=audio,video,cdrom,games,pulse,pulse-access --homedir=/JambulaTV --password=jambulatv --plaintext

# Packages
%packages --excludedocs --nobase
%include http://192.168.0.101/cblr/pub/jambulatv-packages.ks
%end


# Pre-Installation Scripts 
%pre --interpreter=/bin/bash
# Load pcspkr module
modprobe -v --first-time pcspkr

%end


# Post-Installation Scripts (nochroot) - use nochroot for copying install files
%post --nochroot --log=/mnt/sysimage/root/ks-postinstall.log

# Variables
rootfs=/mnt/sysimage
rootdir=$rootfs/root
mountpnt=$rootfs/mnt
optdir=$rootfs/opt
sourcesdir=$optdir/JambulaTV
nfs_server_ip=192.168.0.101
nfs_project_dir=$rootdir/JambulaTV

# Mount NFS shares at install server
#mount -o nolock $nfs_server_ip:$nfs_project_dir $mountpnt
# Copy JambulaTV project to sources directory
#rsync -avz $mountpnt/ $sourcesdir/
# Un mount
#umount -f $mountpnt

%end


# Post-Installation Scripts (chroot) - use chroot for other setup tasks
%post --log=/root/ks-postinstall.log

# Change foreground virtual terminal
chvt 3

# Remove alsa libs - forced
rpm -e --nodeps alsa-lib

# Modify sshd_config file 
sed -i "s:#UseDNS yes:UseDNS no:g" /etc/ssh/sshd_config

# Generate sshkeys
mkdir /root/.ssh
ssh-keygen -t rsa -f /root/.ssh/id_rsa -N ""

# Add bash aliases for root user
cat >> /root/.bashrc << EOT
# Prompt
PS1="[\u@\h]\nAt \@ in (\w) # "
EOT

# Add bash aliases for all system users
cat >> /etc/bashrc << EOT
# Aliases - generated by kickstart
alias ls='ls -lhrt --color=always'
alias df='df -h'
alias vi='vim'
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
alias grep='grep --color=always'
# Git
alias gc="git add -A . && git commit -a -m \\$@"   
alias ga="git add -A . && git commit --amend"   
alias gs="clear && git status"   
alias gl="clear && git log"
alias glf="clear && git log--name-only --follow requirements_all.txt \\$@"
alias gd="clear && git diff"
alias gt="clear && git tag -l"
alias gb="clear && git branch"
alias gss="clear && git stash save"
alias gsl="clear && git stash list"
alias gsp="clear && git stash pop"
#
# Git functions - generated by kickstart
gdt () {
clear && git describe --tags --abbrev=0 \\$(git rev-list --tags --max-count=1)
}
EOT

# Git config
cat > /root/.gitconfig << EOT
[user]
	email = tv@jambulatv.net
	name = Jambula Labs
[core]
	editor = vim
EOT

# Bash copy more than 50 lines - .vimrc
cat > /root/.vimrc << EOF
set history=1000 " Keep history upto 1000
set viminfo='20,\"1000 " Yank and paste upto 1000 lines
EOF

# Set display to :0
echo "export DISPLAY=:0.0" > /etc/profile.d/display.sh

# Clean tmp files - systemd-44-24.fc17 fills up /tmp very quickly
echo "d /tmp 1777 root root 24h
d /var/tmp 1777 root root 1d" > /etc/tmpfiles.d/tmp.conf

# Configure systemd's journal
echo "# JambulaTV
[Journal]
SystemMaxUse=100M 
ForwardToSyslog=no" > /etc/systemd/journald.conf
#
# Allow default user to systemd-journal group so they can query using journalctl
usermod -a -G systemd-journal jambula

# Add missing lxde pcmanfm.conf
mkdir /usr/share/lxde/pcmanfm
cp -v /etc/xdg/pcmanfm/default/pcmanfm.conf /usr/share/lxde/pcmanfm/

# Create a Desktop directory for LXDE
mkdir /JambulaTV/Desktop

# Change permisions on /JambulaTV directory - Give default user access
chown -R jambula:jambula /JambulaTV

# Start mandatory services as a result of what is disabled below
# systemctl enable network.service
chkconfig network on
# Disable services that take a lot longer
systemctl mask dnf-makecache.service
systemctl mask firewalld.service
systemctl mask NetworkManager-dispatcher.service 
systemctl mask NetworkManager-wait-online.service
systemctl mask NetworkManager.service
systemctl mask sendmail.service
systemctl mask sm-client.service
# Switch to init 3 - Graphics not working at start for our Asrock 3150ITX Intel boards
systemctl set-default multi-user.target

# Quit plymouth only after mysqld.service - Makes handoff to kodi less rougher
sed -i "s:After=rc-local.service:After=mysqld.service rc-local.service:" /usr/lib/systemd/system/plymouth-quit.service

# Create Repository for Local Patching
cat > /etc/yum.repos.d/jambula.repo << EOF 
[jambula]
name=Jambula Repository
baseurl=http://192.168.0.101/cblr/repo_mirror/Jambula.F20
enabled=1
gpgcheck=0
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
EOF

# Delete Anaconda Kickstart
rm -f /root/anaconda-ks.cfg

# Remove install logs
rm -f /root/install.log*

# Enable PC speaker module at boot time
echo "alias platform:pcspkr pcspkr" > /etc/modprobe.d/beep.conf

# Add some tools
# --------------
# 1) spinner
# Create spinner tool for long running commands
cat > /usr/bin/spinner <<SPINNER
#!/bin/bash -e

# spinner

# Display a spinner for long running commands
# (this script leaves no trail of the spinner at finishing)

# Usage:
# spinner [long-running-command]

# tl;dr
# \`stdout\` will be whatever the output of your command is and
# \`stderr\` will be the spinner spinning around round oud und nd d
# So you can pipe stuff without problem ;)

# Execute your stuffs in a background job
eval "\\${@:-sleep 1}" &

# Point fd#3 to fd#1 (Save it for later use), then point fd#1 to fd#2
# PD: This does not interfere with the variable for the PID i.e. \\$!
exec 3>&1 >&2

PID=\\$!
SPINNER_PARTS="/-\|"
ACC=1

printf " "
while ps a | awk '{print \\$1}' | grep -q "\\${PID}"; do
    printf "\b%s" "\\${SPINNER_PARTS:ACC++%\\${#SPINNER_PARTS}:1}"
    sleep .15
done
printf "\b"

exec >&3 3>&-
SPINNER
#
# Make script executable
chmod 755 /usr/bin/spinner

# Notify using beeps
beep -f 65.4064 -l 100 -n -f 130.813 -l 100 -n -f 261.626 -l 100 -n -f 523.2
beep -f 523.251 -l 100 -D 100 -n -f 391.995 -l 100 -D 100 -n -f 329.628 -l 10
beep -f 600 -l 155 -n -f 800 -l 155 -n -f 500 -l 155 -n -f 400 -l 155 -n -f 400 -l 1

beep -f 65.4064 -l 100 -n -f 130.813 -l 100 -n -f 261.626 -l 100 -n -f 523.2
beep -f 523.251 -l 100 -D 100 -n -f 391.995 -l 100 -D 100 -n -f 329.628 -l 10
beep -f 600 -l 155 -n -f 800 -l 155 -n -f 500 -l 155 -n -f 400 -l 155 -n -f 400 -l 1

%end
