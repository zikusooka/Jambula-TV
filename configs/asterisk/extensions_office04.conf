; @ Jambula Labs, Copyright (c) 2016-2017. All Rights Reserved.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Jambula-PBX Office 04 Service - One (1) Person Office
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


[globals](+)
; Office Hours
WEEKDAYS = 7:30-17:59
WEEKENDS = 8:30-12:59


[office04]
; Log incoming Caller ID
exten => 099,1,NoOp(asterisk,${JABBER_CALL_JID},${CALLERID(all)} is calling)
;
; Get Status of normal XMPP user
same => n,Set(JabberStatus=${JABBER_STATUS(asterisk,${JABBER_CALL_JID})})
;
same => n,NoOp()
same => n,NoOp(***************************************)
same => n,NoOp(*** Jabber JID : ${JABBER_CALL_JID} ***)
same => n,NoOp(*** Jabber Status : ${JabberStatus} ***)
same => n,NoOp(***************************************)
;
same => n,GotoIf($["${JabberStatus}" = "1"]?xmpp_notify,099,1:ring_osd_notify,099,1)

[xmpp_notify]
; Send incoming call xmpp message to connected Jabber user 
exten => 099,1,JabberSend(asterisk,${JABBER_CALL_JID},${CALLERID(all)} is calling)
same => n,Set(JabberResponse=${JABBER_RECEIVE(asterisk,${JABBER_CALL_JID},${JABBER_RECEIVE_TIMOUT})})
same => n,NoOp(Selected Jabber option = ${JabberResponse})
; Jabber recieve options
same => n,GotoIf($["${JabberResponse}" = "p"]?151,1)
same => n,GoTo(holidays,099,1)

[ring_osd_notify]
; Send incoming call notice: audio ring and on-screen-display at JambulaTV
exten => 099,1,System([ -e ${INCOMING_RINGTONE} ] && mplayer -loop 3 -ao pulse ${INCOMING_RINGTONE} &)
same => n,System([ -e ${OSD_SCRIPT} ] && ${OSD_SCRIPT} ${OSD_SCRIPT_OPTS} "Incoming Call from: ${CALLERID(all)}")
same => n,GoTo(holidays,099,1)

[holidays]
; check whether we are closed on public holidays 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  
exten => 099,1,GotoIfTime(*|*|1|jan?closed,100,1)  ; New Years 
same => n,GotoIfTime(*|*|26|jan?closed,100,1)  ; NRM 
same => n,GotoIfTime(*|*|8|mar?closed,100,1)  ; Womens
same => n,GotoIfTime(*|*|1|may?closed,100,1)  ; Labour
same => n,GotoIfTime(*|*|3|jun?closed,100,1)  ; Martyrs
same => n,GotoIfTime(*|*|9|oct?closed,100,1)  ; Independence
same => n,GotoIfTime(*|*|25|dec?closed,100,1)  ; Christmas
same => n,GotoIfTime(*|*|26|dec?closed,100,1)  ; Boxing
;
; check times; i.e. whether we are open or closed on working days
same => n,GotoIfTime(${WEEKDAYS}|mon-fri|*|*?open,100,1)
same => n,GotoIfTime(${WEEKENDS}|sat|*|*?open,100,1)
same => n,Goto(closed,100,1)

[open]
exten => 100,1,Answer()
same => n,Background(silence/1)

; Play welcome message depending on time of day
same => n,GotoIfTime(0:00-11:59|*|*|*?open_morning,1)
same => n,GotoIfTime(12:00-15:59|*|*|*?open_afternoon,1)
same => n,GotoIfTime(16:00-23:59|*|*|*?open_evening,1)

; Greetings
;;;;;;;;;;;
; Morning Greeting
exten => open_morning,1,Background(good_morning)
same => n,Goto(150,1)
; Afternoon Greeting
exten => open_afternoon,1,Background(good_afternoon)
same => n,Goto(150,1)
; Evening Greeting
exten => open_evening,1,Background(good_evening)
same => n,Goto(150,1)

; Introduction
exten => 150,1,Background(hold4consultant)
same => n,Background(intro1) ; You've reached our company
same => n,Background(ivr123-rachel) ; To reach sales, service ...
same => n,Background(intro3)
same => n,Goto(151,1) 

; Initial Background prompt - OPEN TIMES
exten => 1,1,Goto(151,1)
exten => 2,1,Goto(151,1)
exten => 3,1,Goto(151,1)
; AExReminder Service Testing
exten => 4,1,GoTo(aexreminder-service,4444,1)
exten => 5,1,Goto(aexhome-automation,5555,1)

;If Invalid input is recieved
exten => i,1,Playback(pbx-invalid)
; A timeout and "invalid extension rule"
exten => t,1,Goto(151,1)
;
;
; Phone Call Flow: From Customer Service -> Sales -> Admin 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Try initial person
exten => 151,1,Dial(${INITIAL_PERSON},${RINGTIME},${DIALOPTIONS})
exten => 151,n,Background(hold4consultant)
exten => 151,n,MusicOnHold(${MOH_CLASS_1},${MOH_DURATION})
; Try everyone
exten => 151,1,Dial(${EVERYONE},${RINGTIME},${DIALOPTIONS})
exten => 151,n,GotoIf($["${DIALSTATUS}" = "CONGESTION"]?unavail1)
; Try last Person
exten => 151,n(unavail1),Dial(${ADMIN_FINANCE},${RINGTIME},${DIALOPTIONS})

;Go to voicemail if no one picks up
exten => 151,n,Playback(leave_vmail)
exten => 151,n,Goto(goodbye,199,1)
[goodbye]
exten => 199,1,NoOp(Today is ${DATE})
same => n,GotoIfTime(*|mon|*|*?monday,1)
same => n,GotoIfTime(*|tue|*|*?tuesday,1)
same => n,GotoIfTime(*|wed|*|*?wednesday,1)
same => n,GotoIfTime(*|thu|*|*?thursday,1)
same => n,GotoIfTime(*|fri|*|*?friday,1)
same => n,GotoIfTime(*|sat|*|*?saturday,1)
same => n,GotoIfTime(*|sun|*|*?sunday,1)
exten => monday,1,Background(happy_monday)
same => n,VoiceMail(${VMAIL_HOME}@${VMCONTEXT},s)
same => n,Hangup()
exten => tuesday,1,Background(happy_tuesday)
same => n,VoiceMail(${VMAIL_HOME}@${VMCONTEXT},s)
same => n,Hangup()
exten => wednesday,1,Background(happy_wednesday)
same => n,VoiceMail(${VMAIL_HOME}@${VMCONTEXT},s)
same => n,Hangup()
exten => thursday,1,Background(happy_thursday)
same => n,VoiceMail(${VMAIL_HOME}@${VMCONTEXT},s)
same => n,Hangup()
exten => friday,1,Background(happy_friday)
same => n,VoiceMail(${VMAIL_HOME}@${VMCONTEXT},s)
same => n,Hangup()
exten => saturday,1,Background(happy_saturday)
same => n,VoiceMail(${VMAIL_HOME}@${VMCONTEXT},s)
same => n,Hangup()
exten => sunday,1,Background(happy_sunday)
same => n,VoiceMail(${VMAIL_HOME}@${VMCONTEXT},s)
same => n,Hangup()

[closed]
exten => 100,1,Wait(1)
same => n,Answer()
same => n,Background(silence/1)
; Play welcome message depending on time of day
same => n,GotoIfTime(0:00-11:59|*|*|*?closed_morning,1)
same => n,GotoIfTime(12:00-15:59|*|*|*?closed_afternoon,1)
same => n,GotoIfTime(16:00-23:59|*|*|*?closed_evening,1)
;
exten => closed_morning,1,Background(good-morning)
exten => closed_morning,n,GoTo(closed_dialplan,greeting,1)
;
exten => closed_afternoon,1,Background(good-afternoon)
exten => closed_afternoon,n,GoTo(closed_dialplan,greeting,1)
;
exten => closed_evening,1,Background(good-evening)
exten => closed_evening,n,GoTo(closed_dialplan,greeting,1)

[closed_dialplan]
exten => greeting,1,Set(CHANNEL(musicclass)=${MOH_CLASS_5})
same => n,MusicOnHold((${MOH_CLASS_5}),25) 
same => n,Background(thank-you-for-calling) 
same => n,Background(silence/1)
same => n,Background(why-no-answer-mystery) 
same => n,Background(silence/1)
same => n,Background(pls-try-call-later) 
same => n,Background(or) 
same => n,Background(enter-ext-of-person) 
same => n,Background(silence/1)
same => n,WaitExten(7,m(${MOH_CLASS_5})) 
same => n,MusicOnHold((${MOH_CLASS_5}),110) 
same => n,Playback(leave_vmail)
same => n,Goto(goodbye,199,1)

; Initial Background prompt - CLOSED TIMES
; if they bypass closed prompt, ring phones like in open
exten => 1,1,Goto(stdexten,601,1)
exten => 2,1,Goto(stdexten,602,1)
exten => 3,1,Goto(stdexten,603,1)

; AExReminder Service Testing
exten => 4,1,GoTo(aexreminder-service,4444,1)
; AExHome Automation
exten => 5,1,Goto(aexhome-automation,5555,1)

;If Invalid input is recieved
exten => i,1,Playback(pbx-invalid)
; A timeout and "invalid extension rule"
exten => t,1,Goto(closed,100,1)


#include extensions_aexhome_automation.conf
