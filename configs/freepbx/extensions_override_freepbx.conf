; @ Jambula Labs, Copyright (c) 2016-2017. All Rights Reserved.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Jambula-PBX - Main Extensions.conf file
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[general]
static = yes
writeprotect = no
autofallthrough = no  ;default=yes
extenpatternmatchnew = yes  ;default=no
clearglobalvars = no
priorityjumping = yes
userscontext = default


[globals]
#include /etc/JambulaTV/freepbx/globals_custom.conf



;;;;;;;;;;;;;;;;;;;;;
;;  MAIN DIALPLAN  ;;
;;;;;;;;;;;;;;;;;;;;;

[default]
include => stdexten

;;;;;;;;;;;;;;;;;;;;;;
;;  Jambula GoSubs  ;;
;;;;;;;;;;;;;;;;;;;;;;

; Status of SIP/IAX2 Exten Phones
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[check-exten-phone-status]
include => stdexten
exten => extphonestatus,1,Dial(${TECHNOLOGY1}/${ARG1},${GLOBAL(RINGTIME)},${DIALOPTIONS})
exten => extphonestatus,n,NoOp(The current status of ${ARG1} is ${DIALSTATUS})
;:Jump based on status 
exten => extphonestatus,n,GotoIf($["${DIALSTATUS}" = "NOANSWER"]?noanswer) 
exten => extphonestatus,n,GotoIf($["${DIALSTATUS}" = "CHANUNAVAIL"]?chanunavail) 
exten => extphonestatus,n,GotoIf($["${DIALSTATUS}" = "CONGESTION"]?congestion) 
exten => extphonestatus,n,GotoIf($["${DIALSTATUS}" = "CANCEL"]?cancel) 
exten => extphonestatus,n,GotoIf($["${DIALSTATUS}" = "BUSY"]?busy) 

; NOANSWER
exten => extphonestatus,n(noanswer),VoiceMail(${ARG1},u)	
exten => extphonestatus,n,Hangup()	

;BUSY
exten => extphonestatus,n(busy),VoiceMail(${ARG1},b)	
exten =  extphonestatus,n,Hangup()

;CHANUNAVAIL; 
exten => extphonestatus,n(chanunavail),VoiceMail(${ARG1},u)	
exten =  extphonestatus,n,Hangup()

;CONGESTION
exten => extphonestatus,n(congestion),Congestion()  ; Congestion Tones
exten =  extphonestatus,n,Hangup()

;OTHERS
exten => extphonestatus,n,Goto(noanswer)	; Treat anything else as no answer

;VOICEMAIL
exten => a,1,VoicemailMain(${ARG1})  ; If they press *, send 2 VoicemailMain



; Status of Mobile Trunk Phones
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[check-mobile-trunk-status]
exten => mobiletrunkstatus,1,Set(MOBILE_PHONE_GROUP=${ARG1})
exten => mobiletrunkstatus,n,NoOp(Group = ${MOBILE_PHONE_GROUP})
exten => mobiletrunkstatus,n,Set(EXTENSION_DIALED=${ARG2})
; Determine the mobile device name/ID using the group number
exten => mobiletrunkstatus,n,Set(MOBILE_PHONE_DEVICE=${SHELL(test -f /var/lib/asterisk/agi-bin/active_mobile_device.sh && /var/lib/asterisk/agi-bin/active_mobile_device.sh ${MOBILE_PHONE_GROUP})}); 
exten => mobiletrunkstatus,n,NoOp(Mobile device is ->${MOBILE_PHONE_DEVICE}<-)

; Find the status of mobile device wanting to be used
exten => mobiletrunkstatus,n,MobileStatus(${MOBILE_PHONE_DEVICE},MOBILE_PHONE_STATUS)
exten => mobiletrunkstatus,n,NoOp(                     ========================================)
exten => mobiletrunkstatus,n,NoOp(Dialing ${EXTENSION_DIALED} ::: The current status of the mobile trunk [ ${MOBILE_PHONE_GROUP} ] device is ${MOBILE_PHONE_STATUS})
exten => mobiletrunkstatus,n,NoOp(                     ========================================)



; Jump based on status 
exten => mobiletrunkstatus,n,GotoIf($["${MOBILE_PHONE_STATUS}" = "1"]?disconnected) 
exten => mobiletrunkstatus,n,GotoIf($["${MOBILE_PHONE_STATUS}" = "2"]?connected_free) 
exten => mobiletrunkstatus,n,GotoIf($["${MOBILE_PHONE_STATUS}" = "3"]?connected_busy) 


; Mobile device is not connected
exten => mobiletrunkstatus,n(disconnected),Playback(im-sorry&cannot-complete-temp-error&silence/1&ha/phone&is&disconnected&silence/1&please-contact-tech-supt)
exten => mobiletrunkstatus,n,Congestion(5)

;Mobile device is connected and available
;exten => mobiletrunkstatus,n(connected_free),Playback(ha/phone&is&available&silence/1&pls-hold-while-try)	
exten => mobiletrunkstatus,n(connected_free),Playback(ha/phone&is&available&silence/1)	
; Authenticate user before proceeding
;exten => mobiletrunkstatus,n,Authenticate(${TRUNK_ACCESS_CODES_FILE},,6)
; Dial mobile phone number
exten => mobiletrunkstatus,n,Dial(${TECHNOLOGY3}/g${MOBILE_PHONE_GROUP}/${EXTENSION_DIALED},45)

;Mobile device is connected but busy
exten => mobiletrunkstatus,n(connected_busy),Playback(im-sorry&but&currently&ha/phone&is-in-use&silence/1&please-try-again-later)
exten => mobiletrunkstatus,n,Busy(5)
;; End of GoSub labels



;;;;;;;;;;;;;;;;;;;;;;;;
;;  JAMBULA CONTEXTS  ;;
;;;;;;;;;;;;;;;;;;;;;;;;

; FreePBX contexts -> Include to allow Outbound calls using Chan_Mobile here
[ext-local]
include => stdexten

[from-internal]
include => stdexten


[stdexten]
include => inbound-motif
include => outbound-motif
include => outbound-sip-international
include => default
;include => outbound-landline-local
include => outbound-mobile-local
include => parkedcalls
include => guestexten
include => trunk
include => ext-local ; IMPORTANT to allow stdexten to work with FreePBX exts
;
; Standard SIP -Phones
; The following taken care of in FreePBX functions for dialplan
exten => 601,1,Gosub(check-exten-phone-status,extphonestatus,1(${EXTEN}))
exten => 602,1,Gosub(check-exten-phone-status,extphonestatus,1(${EXTEN}))
exten => 603,1,Gosub(check-exten-phone-status,extphonestatus,1(${EXTEN}))
exten => 604,1,Gosub(check-exten-phone-status,extphonestatus,1(${EXTEN}))
exten => 605,1,Gosub(check-exten-phone-status,extphonestatus,1(${EXTEN}))
exten => 606,1,Gosub(check-exten-phone-status,extphonestatus,1(${EXTEN}))
exten => 607,1,Gosub(check-exten-phone-status,extphonestatus,1(${EXTEN}))
exten => 608,1,Gosub(check-exten-phone-status,extphonestatus,1(${EXTEN}))
exten => 609,1,Gosub(check-exten-phone-status,extphonestatus,1(${EXTEN}))
exten => 610,1,Gosub(check-exten-phone-status,extphonestatus,1(${EXTEN}))
;
; Non-existent extensions i.e. wrong stdexten number
exten => s,1,Playback(you-dialed-wrong-number&please-try-again)
exten => s,n,Hangup()

; For testing DialPlan - Instead of wasting Air-time
exten => 600,1,Wait(1)
exten => 600,n,Goto(inbound-calls,s,1)
;exten => 600,n,Goto(tv-channel-settings,CHANNEL_01,1)
;exten => 600,n,Goto(calendar_events_notify,6666,1)

; Paging
exten => 650,1,Page(Console/JambulaTV)
;exten => 650,1,Dial(Console/JambulaTV,20,A(beep))
exten => 650,n,Wait(4)
exten => 650,n,NoOp("JambulaTV: Paging Services")
exten => 650,n,Hangup()
; TODO: Integrate muting of whats already playing
; When user hangs up, unmute the music:
; exten => h,1,System(/usr/bin/amixer -c 1 sset PCM unmute)
; When user dials page, mute the music:
; exten => 650,1,System(/usr/bin/amixer -c 1 sset PCM mute)

; For testing - echo
exten => 690,1,Answer()
;exten => 690,n,Playback(welcome)
exten => 690,n,Dial(Mobile/GSM_PHONE_03)
exten => 690,n,Playback(demo-echotest)
exten => 690,n,Echo()
exten => 690,n,Playback(demo-echodone)
exten => 690,n,Playback(vm-goodbye)
exten => 690,n,Hangup()


; Other Features in standard extension i.e. stdexten
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Conference using confbridge - Dahdi not needed
exten => 750,1,Answer()
same => n,confBridge(751)


; VoiceMail Main menu
exten => 800,1,VoiceMailMain(${CALLERID(num)},s)
exten => 800,n,Hangup

exten => 801,1,VoiceMailMain(${VMAIL_HOME},sag2)
exten => 801,n,Hangup

; Listen to Music
exten => 850,1,Answer()
exten => 850,n,MusicOnHold(${MOH_CLASS_1})


; Send SMS using Mobile phone in dialplan
exten => 870,1,MobileSendSMS(${MOBILE_TRUNK_DEVICE_PRIMARY},${MOBILE_TRUNK_PHONE_NO_PRIMARY},This message sent via the Jambula-PBX!)
exten => 870,n,Hangup()

; Send SMS using Jabber ; Ask for SMS No
exten => 871,1,JabberSend(asterisk,${JABBER_SMS_JID},Enter the SMS Destination Phone Number)
exten => 871,n,Set(JABBER_OPTION_SMS_No=${JABBER_RECEIVE(asterisk,${JABBER_SMS_JID},${JABBER_RECEIVE_TIMOUT})})
exten => 871,n,Wait(20)
exten => 871,n,NoOp(SMS Phone Number = ${JABBER_OPTION_SMS_no})


; Ask for SMS Text
exten => 871,n,JabberSend(asterisk,${JABBER_SMS_JID},Enter the SMS Text Mesage)
exten => 871,n,Set(JABBER_OPTION_SMS_Text=${JABBER_RECEIVE(asterisk,${JABBER_SMS_JID},${JABBER_RECEIVE_TIMOUT})})

exten => 871,n,Wait(20)

exten => 871,n,NoOp(SMS Message Text = ${JABBER_OPTION_SMS_Text})

; Jabber Send Message using Mobile
exten => 871,n,MobileSendSMS(MOTO-L6,${JABBER_OPTION_SMS_no},${JABBER_OPTION_SMS_Text})
exten => 871,n,Hangup()


; Google Speech Recognition Engine ; 
; Note: Add #include extensions_google_speech.conf at bottom
exten => 875,1,Goto(google-speech-recog,876,1)


; Remove this after testing
exten => 886,1,GoTo(sys_admin,s,1)


; Remote SysAdmin Controls
;;;;;;;;;;;;;;;;;;;;;;;;;;;
[sys_admin]
exten => s,1,Wait(3)
;same => n,Set(SWIFT_VOICE=Allison)
same => n,Swift(This is the Systems Administration Panel)
same => n,read(SELECTED_OPTION,please-enter-your&digits&followed-by&hash,,,,)
same => n,Verbose(Selected option is ${SELECTED_OPTION})
; Menu of choices
same => n,GotoIf($["${SELECTED_OPTION}" = "1"]?aexhome-automation,5555,1)
same => n,GotoIf($["${SELECTED_OPTION}" = "2"]?885,1)
;
; Invalid + Timeouts
exten => i,1,Playback(pbx-invalid)
exten => t,1,Hangup()


; reverse SSH testing testing
exten => 885,1,Answer()
same => n,system(ssh -f ${AEXBOX_SSH_SERVER} sleep 60 &)
same => n,Swift(A Reverse SSH tunnel has been created at ${AEXBOX_SSH_SERVER})
same => n,Hangup()






;;==================;;
;;  INCOMING CALLS  ;;
;;==================;;


[inbound-calls]
include => stdexten



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Check Identity of Caller ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; To add number to database:
; database put BYPASS_ALLWAYS 07523318100 1
;
; To delete number from database:
; database del BYPASS_ALLWAYS 07523318100 
; pbxoff_anytime
;;;;;;;;;;;;;;;;
exten => s,1,Set(NUMBER=${DB(BYPASS_ALLWAYS/${CALLERID(num)})})
exten => s,n,Set(XGF=${DB(PBXON_XGF/${CALLERID(num)})})

; Set caller ID number just in-case I need to reference
exten => s,n,Set(CALLERID_NUMBER=${CALLERID(num)})
; Set caller name if it exists in our contacts DB
exten => s,n,Set(CALLERID_NAME=${DB(cidname/${CALLERID(num)})})

; Get Caller ID Number and Name
exten => s,n,GotoIf($["${CALLERID_NAME}" = ""]?unknown:known)
exten => s,n(unknown),Set(CALLERID(name)=${CALLERID_NUMBER})
exten => s,n(known),Set(CALLERID(name)=${CALLERID_NAME})

; Log Caller's Identity on console
exten => s,n,NoOp(Incoming Call from: *** ${CALLERID(all)} ***)


; Filter out people you dont't want to deal with
exten => s,n,GotoIf($["${NUMBER}" = "1"]?pbxoff_always,s,1)
exten => s,n,GotoIf($["${XGF}" = "1"]?pbxon_xgf,s,1)

exten => s,n,GotoIf($["${CALLERID_NUMBER}" = "${ADMINISTRATOR_1_PHONE_NO}"]?sys_admin,s,1)


; Branch out to customized dialplans e.g. office; Home; or Vaction etc
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Check Globals to specify which diaplan flow:
exten => s,n,NoOp(Branching to extensions_${DIALPLAN_NAME}.conf)
exten => s,n,Goto(${DIALPLAN_NAME},099,1)






;; Recieve SMS
;;;;;;;;;;;;;;;
exten => sms,1,JabberSend(asterisk,${JABBER_SMS_JID},${CALLERID(name)} <SMS>: ${SMSRC} ${SMSTXT})
exten => sms,2,Hangup()


; Google Voice Calls
;;;;;;;;;;;;;;;;;;;;
[inbound-motif]
exten => s,1,NoOp()
 same => n,Wait(1)
 same => n,Set(google_cid=${CALLERID(name)})
 same => n,Set(nice_cid=${CUT(google_cid,@,1)})
 same => n,Set(CALLERID(all)=${nice_cid})
 same => n,NoOp(CALL FROM = ${CALLERID(all)})
 same => n,Answer()
 same => n,SendDTMF(1)
 same => n,Goto(inbound-calls,s,1)

; Outbound
[outbound-motif]
exten => _1NXXXXXXXXX,1,Dial(Motif/google/${EXTEN}@voice.google.com,,${DIALOPTIONS})

; Outbound Calls via UTL LandLine
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[outbound-landline-local]
exten => _0XX.,1,Dial(DAHDI/1/${EXTEN})
exten => _9XX.,1,Dial(DAHDI/1/${EXTEN})
exten => _3XX.,1,Dial(DAHDI/1/${EXTEN})
exten => _7XX.,1,Dial(DAHDI/1/${EXTEN})
exten => _2XX.,1,Dial(DAHDI/1/${EXTEN})
exten => _1XX.,1,Dial(DAHDI/1/${EXTEN})



; Outbound Calls via Mobile Lines
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[outbound-mobile-local]

; Mobile Networks
;;;;;;;;;;;;;;;;;;

; Airtel (formerly Warid)
exten => _070[0-6]X.,1,NoOp(**** AIRTEL [formerly Warid] ****)
exten => _070[0-6]X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_ATL},${EXTEN}))
; UTL
exten => _071[0-9]X.,1,NoOp(**** UTL ****)
exten => _071[0-9]X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_UTL},${EXTEN}))
; Smile
exten => _0720X.,1,NoOp(**** SMILE ****)
exten => _0720X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_SML},${EXTEN}))
; Afrimax
exten => _0723X.,1,NoOp(**** AFRIMAX ****)
exten => _0723X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_AFM},${EXTEN}))
; K2 - Sabassaja Kabaka Awangale!
exten => _073[0-4]X.,1,NoOp(**** K2  ****)
exten => _073[0-4]X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${PHONE_K2},${EXTEN}))
; Smart
exten => _074[0-4]X.,1,NoOp(**** SMART  ****)
exten => _074[0-4]X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${PHONE_SMT},${EXTEN}))
; Airtel
exten => _075[0-9]X.,1,NoOp(**** AIRTEL ****)
exten => _075[0-9]X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_ATL},${EXTEN}))
; iTEL
exten => _076[0-4]X.,1,NoOp(**** iTEL ****)
exten => _076[0-4]X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${PHONE_ITL},${EXTEN}))
; MTN 
exten => _077[0-9]X.,1,NoOp(**** MTN ****)
exten => _077[0-9]X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_MTN},${EXTEN}))
exten => _078[0-9]X.,1,NoOp(**** MTN ****)
exten => _078[0-9]X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_MTN},${EXTEN}))
; Africell 
exten => _079[0-4]X.,1,NoOp(**** AFRICELL [Formerly Orange] ****)
exten => _079[0-4]X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_AFC},${EXTEN}))

; Fixed Networks
;;;;;;;;;;;;;;;;

; Airtel (formerly Warid)
exten => _020[0-1]X.,1,NoOp(**** Airtel [Formerly Warid] (Fixed) ****)
exten => _020[0-1]X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_ATL},${EXTEN}))
; Infocom
exten => _020240X.,1,NoOp(**** Infocom (Fixed) ****)
exten => _020240X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_IFC},${EXTEN}))
; Smile
exten => _0202[5-9]X.,1,NoOp(**** Smile (Fixed) ****)
exten => _0202[5-9]X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_SML},${EXTEN}))
; Afrimax
exten => _02030[0-4]X.,1,NoOp(**** Afrimax (Fixed) ****)
exten => _02030[0-4]X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_AFM},${EXTEN}))
; iWay
exten => _0203[2-3]X.,1,NoOp(**** iWay (Fixed) ****)
exten => _0203[2-3]X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_IWY},${EXTEN}))
; Africell (formerly Orange)
exten => _0205X.,1,NoOp(**** Africell [Formerly Orange] (Fixed) ****)
exten => _0205X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_AFC},${EXTEN}))
; Roke
exten => _0205[0-4]X.,1,NoOp(**** Roke (Fixed) ****)
exten => _0205[0-4]X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_RKE},${EXTEN}))
; DataNet
exten => _020600[0-2]X.,1,NoOp(**** DataNet (Fixed) ****)
exten => _020600[0-2]X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_DNT},${EXTEN}))
; SimbaNet
exten => _02063[0-4]X.,1,NoOp(**** SimbaNet (Fixed) ****)
exten => _02063[0-4]X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_SBN},${EXTEN}))
; Airtel
exten => _0207X.,1,NoOp(**** Airtel (Fixed) ****)
exten => _0207X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_ATL},${EXTEN}))
; One Solution 
exten => _0208[0-3]X.,1,NoOp(**** One Solution (Fixed) ****)
exten => _0208[0-3]X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_OSL},${EXTEN}))
; MTN 
exten => _03X.,1,NoOp(**** MTN (Fixed) ****)
exten => _03X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_MTN},${EXTEN}))
; UTL
exten => _04X.,1,NoOp(**** UTL (Fixed) ****)
exten => _04X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_UTL},${EXTEN}))

; Other Mobile codes
;;;;;;;;;;;;;;;;;;;;

; Toll free phone numbers
exten => _08001X.,1,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_UTL},${EXTEN}))
exten => _08002X.,1,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_MTN},${EXTEN}))
exten => _08003X.,1,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_ATL},${EXTEN}))
exten => _0800707X.,1,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_ATL},${EXTEN}))
exten => _0800777X.,1,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_ATL},${EXTEN}))
exten => _0800900X.,1,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_AFC},${EXTEN}))
; Local rate numbers
exten => _08101X.,1,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_UTL},${EXTEN}))
exten => _08102X.,1,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_MTN},${EXTEN}))
exten => _08103X.,1,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_ATL},${EXTEN}))
; Single charge numbers
exten => _08201X.,1,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_UTL},${EXTEN}))
exten => _08202X.,1,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_MTN},${EXTEN}))
exten => _08203X.,1,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_ATL},${EXTEN}))
exten => _0820777X.,1,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_ATL},${EXTEN}))
exten => _08207781X.,1,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_ATL},${EXTEN}))
; Premium rate services
exten => _0901X.,1,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_UTL},${EXTEN}))
exten => _0902X.,1,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_MTN},${EXTEN}))
exten => _0903X.,1,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_ATL},${EXTEN}))
exten => _0907777X.,1,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_ATL},${EXTEN}))
exten => _09090004X.,1,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_AFC},${EXTEN}))

; Help Lines
;;;;;;;;;;;;
; Customer service (100) for all operators
exten => 100,1,NoOp(***  Customer Support Services ***)
same => n,NoOp(**********************************)
same => n,Swift(For Hair Tell press One)
same => n,Swift(For Hafree Sell press Two)
same => n,Swift(For Em Tea N press Three)
same => n,Swift(For Smart press Four)
same => n,Swift(For You Tea El  press Five)
same => n,Swift(For Voda phone press Six)
same => n,read(SELECTED_OPTION,please-enter-your&digits&followed-by&hash,,,,)
same => n,Verbose(Selected option is ${SELECTED_OPTION})
; Menu of choices
same => n,GotoIf($["${SELECTED_OPTION}" = "1"]?101,1)
same => n,GotoIf($["${SELECTED_OPTION}" = "2"]?102,1)
same => n,GotoIf($["${SELECTED_OPTION}" = "3"]?103,1)
same => n,GotoIf($["${SELECTED_OPTION}" = "4"]?104,1)
same => n,GotoIf($["${SELECTED_OPTION}" = "5"]?105,1)
same => n,GotoIf($["${SELECTED_OPTION}" = "6"]?106,1)
;
;Airtel
exten => 101,1,NoOp(**** AIRTEL: Customer Support Services ****)
same => n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_ATL},${EXTEN}))
;AfriCell
exten => 102,1,NoOp(**** AFRICELL: Customer Support Services ****)
same => n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_AFC},${EXTEN}))
;MTN
exten => 103,1,NoOp(**** MTN: Customer Support Services ****)
same => n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_MTN},${EXTEN}))
;Smart
exten => 104,1,NoOp(**** SMART: Customer Support Services ****)
same => n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_SMT},${EXTEN}))
;UTL
exten => 105,1,NoOp(**** UTL: Customer Support Services ****)
same => n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_UTL},${EXTEN}))
;Vodafone
exten => 106,1,NoOp(**** VODAFONE: Customer Support Services ****)
same => n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_VDF},${EXTEN}))
;
; Invalid + Timeouts
exten => i,1,Playback(pbx-invalid)
exten => t,1,Hangup()


; Recharge (130)
; Check Balance (131)
; Voicemail deposit (121)
; Voicemail retrieval (123)
; Independent network codes: Reserved for Operator use (140-189)
; Special services codes (190-198) e.g. 197 registration status

; Emergency numbers
;;;;;;;;;;;;;;;;;;;

; Police
exten => _999,1,Set(AVAILABLE_PHONE_GROUP=${SHELL(test -f /var/lib/asterisk/agi-bin/available_mobile_group.sh && /var/lib/asterisk/agi-bin/available_mobile_group.sh)})
exten => _999,n,NoOp(Emergency:::POLICE::: Group = ${AVAILABLE_PHONE_GROUP})
exten => _999,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${AVAILABLE_PHONE_GROUP},${EXTEN}))
; Fire
exten => _112,1,Set(AVAILABLE_PHONE_GROUP=${SHELL(test -f /var/lib/asterisk/agi-bin/available_mobile_group.sh && /var/lib/asterisk/agi-bin/available_mobile_group.sh)})
exten => _112,n,NoOp(Emergency:::FIRE::: Group = ${AVAILABLE_PHONE_GROUP})
exten => _112,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${AVAILABLE_PHONE_GROUP},${EXTEN}))
; Child Helpline
exten => _116,1,Set(AVAILABLE_PHONE_GROUP=${SHELL(test -f /var/lib/asterisk/agi-bin/available_mobile_group.sh && /var/lib/asterisk/agi-bin/available_mobile_group.sh)})
exten => _116,n,NoOp(Emergency:::CHILD::: Group = ${AVAILABLE_PHONE_GROUP})
exten => _116,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${AVAILABLE_PHONE_GROUP},${EXTEN}))
; Ambulance and Medical
exten => _911,1,Set(AVAILABLE_PHONE_GROUP=${SHELL(test -f /var/lib/asterisk/agi-bin/available_mobile_group.sh && /var/lib/asterisk/agi-bin/available_mobile_group.sh)})
exten => _911,n,NoOp(Emergency:::AMBULANCE::: Group = ${AVAILABLE_PHONE_GROUP})
exten => _911,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${AVAILABLE_PHONE_GROUP},${EXTEN}))

; International numbers
;;;;;;;;;;;;;;;;;;;;;;;;

; All countries
exten => _000X.,1,NoOp(**** International ****)
exten => _000X.,n,Authenticate(${TRUNK_ACCESS_CODES_FILE_INTERNATIONAL},,6)
exten => _000X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_INTERNATIONAL},${EXTEN}))
;
exten => _+X.,1,NoOp(**** International ****)
exten => _+X.,n,Authenticate(${TRUNK_ACCESS_CODES_FILE_INTERNATIONAL},,6)
exten => _+X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_INTERNATIONAL},${EXTEN}))
; Burundi
exten => _003X.,1,NoOp(**** Burundi ****)
exten => _003X.,n,Authenticate(${TRUNK_ACCESS_CODES_FILE_INTERNATIONAL},,6)
exten => _003X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_BURUNDI},${EXTEN}))
; Rwanda
exten => _004X.,1,NoOp(**** Rwanda ****)
exten => _004X.,n,Authenticate(${TRUNK_ACCESS_CODES_FILE_INTERNATIONAL},,6)
exten => _004X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_RWANDA},${EXTEN}))
;Kenya
exten => _005X.,1,NoOp(**** Kenya ****)
exten => _005X.,n,Authenticate(${TRUNK_ACCESS_CODES_FILE_INTERNATIONAL},,6)
exten => _005X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_KENYA},${EXTEN}))
; Uganda
exten => _006X.,1,NoOp(**** Uganda ****)
exten => _006X.,n,Authenticate(${TRUNK_ACCESS_CODES_FILE_INTERNATIONAL},,6)
exten => _006X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_UGANDA},${EXTEN}))
; Tanzania
exten => _007X.,1,NoOp(**** Burundi ****)
exten => _007X.,n,Authenticate(${TRUNK_ACCESS_CODES_FILE_INTERNATIONAL},,6)
exten => _007X.,n,Gosub(check-mobile-trunk-status,mobiletrunkstatus,1(${GROUP_TANZANIA},${EXTEN}))


; Congestion Tone + Hangup
;;;;;;;;;;;;;;;;;;;;;;;;;;
exten => _0XX.,n,Congestion
exten => _0XX.,n,Hangup()


[outbound-sip-international]
; Outbound Calls via flowroute
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
exten => _1NXXXXXXXXX,1,Dial(SIP/${EXTEN}@flowroute)
;Send NANPA (USA) as 11 digit
exten => _011.,1,Dial(SIP/${EXTEN:3}@flowroute)
;dialing format - SIP/{countrycode}{number}@flowroute



; Allow some callers access without going throught the PBX system
[pbxoff_always]
exten => s,1,Wait(120)
exten => s,n,Hangup()

[pbxon_blacklist]
exten => s,1,Playback(privacy-you-are-blacklisted)
exten => s,n,Hangup()

[pbxon_xgf]
exten => s,1,Answer()
exten => s,n,Playback(silence/2)
exten => s,n,MusicOnHold(${MOH_CLASS_5})
;exten => s,n,Playback(privacy-you-are-blacklisted)
;exten => s,n,Playback(lots-o-monkeys)
exten => s,n,Hangup()



[guestexten]
; Visitors go thru main IVR
;exten => _6X.,1,Goto(stdexten,s,1)

; Outgoing to guest using IAX2/SIP
exten => _9X.,1,Dial(${TECHNOLOGY1}/${EXTEN},45)
exten => _9X.,n,VoiceMail(${EXTEN},u)
exten => _9X.,n,Hangup()

; Main IVR
;exten => 600,1,Goto(stdexten,s,1)

;::::::::::::::
; TRUNK LINES :
;:::::::::::::;
;
[trunk]
include => stdexten

; To: Intraline
;;;;;;;;;;;;;;;;
exten => _3X.,1,Dial(IAX2/${TRUNK_USER}:${TRUNK_PASS}@${INTRALINE_IP}/${EXTEN})
exten => _3X.,n,Congestion()
exten => _3X.,n,Hangup()
;
exten => _600.,1,Dial(IAX2/${TRUNK_USER}:${TRUNK_PASS}@${INTRALINE_IP}/${EXTEN})
exten => _600.,n,Congestion()
exten => _600.,n,Hangup()
;
exten => _800.,1,Dial(IAX2/${TRUNK_USER}:${TRUNK_PASS}@${INTRALINE_IP}/${EXTEN})
exten => _800.,n,Congestion()
exten => _800.,n,Hangup()



;;;;;;;;;;;;;;;
;;  INCLUDE  ;;
;;;;;;;;;;;;;;;
; Jambula exec dialplan for this site
#exec /var/lib/asterisk/agi-bin/include_config.sh

; Jambula customized dialplans
#include /etc/JambulaTV/freepbx/extensions_JAMBULA_DIALPLAN_NAME.conf
#include /etc/JambulaTV/freepbx/extensions_reminders.conf
#include /etc/JambulaTV/freepbx/extensions_calendars.conf
#include /etc/JambulaTV/freepbx/extensions_home_automation.conf
#include /etc/JambulaTV/freepbx/extensions_google_speech.conf
