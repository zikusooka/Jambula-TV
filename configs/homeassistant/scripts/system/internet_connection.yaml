internet_connection_on:
  sequence:

    # a) Run script: If music is playing, pause it
    - service: script.music_pause_if_playing

    # b) Chime alert using house speakers
    - service: shell_command.voice_alerts_and_sound_effects
      data_template:
        sound_alert: '1'
        audio_gain: !secret voice_alert_audio_gain_medium

    # c) Internet on sound effect using house speakers
    #- service: shell_command.

    # d) Voice alert using house speakers
    - service: shell_command.voice_alerts_and_sound_effects
      data_template:
        sound_alert: '24'
        audio_gain: !secret voice_alert_audio_gain_medium

    # e) Run script: If music is paused, unpause player
    - service: script.music_unpause_if_paused

    # f) Restart HASS
    #- service: homeassistant.restart


internet_connection_off:
  sequence:

    # a) Run script: If music is playing, pause it
    - service: script.music_pause_if_playing

    # b) Chime alert using house speakers
    - service: shell_command.voice_alerts_and_sound_effects
      data_template:
        sound_alert: '1'
        audio_gain: !secret voice_alert_audio_gain_medium

    # c) Internet off sound effect using house speakers
    #- service: shell_command.

    # d) Voice alert using house speakers
    - service: shell_command.voice_alerts_and_sound_effects
      data_template:
        sound_alert: '23'
        audio_gain: !secret voice_alert_audio_gain_medium

    # e) Run script: If music is paused, unpause player
    - service: script.music_unpause_if_paused


    # Other actions - Internet off:
    # -----------------------------
    #
    # 1) Kill MPC player if it was running i.e. unselect radio station
    - service_template: >
        {% if not is_state('input_select.internet_radio_station', 'Select station') %}
          shell_command.internet_radio_stop

        {% else %}
          shell_command.internet_radio_stop

        {% endif %}
      entity_id: input_select.internet_radio_station
