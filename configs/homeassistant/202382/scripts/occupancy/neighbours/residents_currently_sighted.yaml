residents_currently_at_home:
  sequence:

  - repeat:
      for_each:
        - "1"
        - "2"
        - "3"
        - "4"
        - "5"

      sequence:

        if:
          - condition: template
            value_template: >
              {% set resident_entity = 'sensor.resident' ~ repeat.item ~ '_presence_status' %} 
              {{ is_state(resident_entity, 'Home') }}
        then:

          # Generate voice files
          # --------------------
          # Merge audio files
          - service: shell_command.ffmpeg_concat_three_mp3
            data_template:
              input_directory: !secret jambulatv_sounds_dir
              input_file1: 'Airplane-ding-sound.mp3'
              input_file2: 'resident_{{repeat.item}}.mp3'
              input_file3: 'is_home_01.mp3'
              output_directory: !secret jambulatv_temp_dir
              output_file: 'sound_effect_resident_{{repeat.item}}_is_home.mp3'

          # Voice Alert: Announce each resident that is at home
          # ------------------------------------------------------------
          # Play merged audio file in temp directory using house speakers
          - service: shell_command.voice_alerts_and_sound_effects
            data_template:
              sound_alert: 'sound_effect_resident_{{repeat.item}}_is_home'
              audio_gain: !secret voice_alert_audio_gain_medium
