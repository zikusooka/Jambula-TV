alias: There is a birthday today
initial_state: False


trigger:

  # Every 1 hour
  - platform: time_pattern
    #hours: '/1'
    minutes: '/20'


condition:
  condition: and
  conditions:

    # Time of day
    - condition: time
      after: '06:00:00'
      before: '20:59:59'


    # If sensor shows 'yes'
    - condition: template
      value_template: "{{ is_state('sensor.there_is_a_birthday_today', 'yes') }}"


action:

  # a) Mute speaker volume if there is already audio playing
  - service: shell_command.speaker_volume_mute
  # Pause for a second - DO NOT REMOVE unless you have a fix!
  - delay: '00:00:01'

  # b) Chime alert using house speakers
  - service: shell_command.voice_alerts_and_sound_effects
    data_template:
      sound_alert: '1'
      audio_gain: !secret voice_alert_audio_gain

  # c) Its time for news sound effect using house speakers
  - service: shell_command.voice_alerts_and_sound_effects
    data_template:
      sound_alert: 'birthday_balloon'
      audio_gain: !secret voice_alert_audio_gain

  # d) Announce its time time for news using house speakers
  - service: shell_command.voice_alerts_and_sound_effects
    data_template:
      sound_alert: '44'
      audio_gain: !secret voice_alert_audio_gain

  # e) Unmute speaker volume 
  - service: shell_command.speaker_volume_unmute
