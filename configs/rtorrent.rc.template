# Maximum and minimum number of peers to connect to per torrent.
#min_peers = 40
#max_peers = 100

# Maximum number of simultanious uploads per torrent.
max_uploads = 1

# Global upload and download rate in KiB. "0" for unlimited.
#download_rate = 0
upload_rate = 1

# Default directory to save the downloaded torrents.
directory = TORRENTS_PENDING_DIRECTORY

#
# Default session directory. Make sure you don't run multiple instance
# of rtorrent using the same session directory. Perhaps using a
# relative path?
#session = RTORRENT_SESSIONS_DIR

# Watch Directories
# -----------------
# TV shows
schedule = watch_directory_1,5,60,"load.start=TORRENTS_WATCH_DIRECTORY/TORRENTS_LABEL_TVSHOWS/*.torrent,d.custom1.set=TORRENTS_LABEL_TVSHOWS"
#
# Movies
schedule = watch_directory_2,5,60,"load.start=TORRENTS_WATCH_DIRECTORY/TORRENTS_LABEL_MOVIES/*.torrent,d.custom1.set=TORRENTS_LABEL_MOVIES"
#
# Music
schedule = watch_directory_3,5,60,"load.start=TORRENTS_WATCH_DIRECTORY/TORRENTS_LABEL_MUSIC/*.torrent,d.custom1.set=TORRENTS_LABEL_MUSIC"
#
# Software
schedule = watch_directory_3,5,60,"load.start=TORRENTS_WATCH_DIRECTORY/TORRENTS_LABEL_SOFTWARE/*.torrent,d.custom1.set=TORRENTS_LABEL_SOFTWARE"

# Add new method to get completed directory
# ------------------------------------------
method.insert = d.get_finished_dir,simple,"cat=TORRENTS_COMPLETED_DIRECTORY/,$d.custom1="

# Move to completed_torrents directory on finish
# -----------------------------------------------
method.set_key = event.download.finished,move_complete,"d.directory.set=$d.get_finished_dir=;execute=mkdir,-p,$d.get_finished_dir=;execute=mv,-u,$d.base_path=,$d.get_finished_dir="

# Remove .torrent file in watch folder
# -------------------------------------
method.set_key = event.download.finished,remove_torrent,"execute=rm,$d.tied_to_file="

# Run post download actions e.g. send email, move torrent
# -------------------------------------------------------
method.set_key=event.download.finished,torrent_processer, "execute = { \"jambulatv-rtorrent-processor\", \"$d.base_path=\", \"$d.name=\", \"$d.custom1=\", \"$convert.date=$system.time=\" }"

# The ip address reported to the tracker.
#ip = rakshasa

# The ip address the listening socket and outgoing connections is
# bound to.
#bind = rakshasa

# Port range to use for listening.
#port_range = 6890-6999

# Start opening ports at a random position within the port range.
#port_random = no

# Check hash for finished torrents. Might be usefull until the bug is
# fixed that causes lack of diskspace not to be properly reported.
#check_hash = no

# Set whetever the client should try to connect to UDP trackers.
#use_udp_trackers = yes

# Alternative calls to bind and ip that should handle dynamic ip's.
#schedule = ip_tick,0,1800,ip=rakshasa
#schedule = bind_tick,0,1800,bind=rakshasa

#
# Do not modify the following parameters unless you know what you're doing.
#

# Hash read-ahead controls how many MB to request the kernel to read
# ahead. If the value is too low the disk may not be fully utilized,
# while if too high the kernel might not be able to keep the read
# pages in memory thus end up trashing.
#hash_read_ahead = 10

# Interval between attempts to check the hash, in milliseconds.
#hash_interval = 100

# Number of attempts to check the hash while using the mincore status,
# before forcing. Overworked systems might need lower values to get a
# decent hash checking rate.
#hash_max_tries = 10

# Max number of files to keep open simultaniously.
#max_open_files = 128

# Number of sockets to simultaneously keep open.
#max_open_sockets = <no default>


# Example of scheduling commands: Switch between two ip's every 5
# seconds.
#schedule = "ip_tick1,5,10,ip=torretta"
#schedule = "ip_tick2,10,10,ip=lampedusa"

# Remove a scheduled event.
#schedule_remove = "ip_tick1"

# DHT
######
# Enable DHT support for trackerless torrents or when all trackers are down.
# May be set to "disable" (completely disable DHT), "off" (do not start DHT),
# "auto" (start and stop DHT as needed), or "on" (start DHT immediately).
# The default is "off". For DHT to work, a session directory must be defined.
# 
dht = auto

# UDP port to use for DHT. 
dht_port = 6881

# Enable peer exchange (for torrents not marked private)
protocol.pex.set = yes

# scgi - xmlrpc
###############
network.scgi.open_local = MY_MULTIMEDIA_USER_HOME_DIR/rpc.socket
schedule = chmod,0,0,"execute=chmod,777,MY_MULTIMEDIA_USER_HOME_DIR/rpc.socket"

# Color / Canvas patch
# ####################
#done_fg_color = 2
#done_bg_color = 3
#active_fg_color = 1
#active_bg_color = 5

# Logging
##########
#   Levels = critical error warn notice info debug
#   Groups = connection_* dht_* peer_* rpc_* storage_* thread_* tracker_* torrent_* 
log.open_file = "rtorrent.log", "RTORRENT_LOG_DIR/rtorrent.log"
# Log external script output and results
log.execute = "RTORRENT_LOG_DIR/execute.log"
