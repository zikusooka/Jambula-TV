/*
 * ######################################################
 * #  jambula services                                  #
 * #  ****************                                  #
 * #  Tip: Use `icinga2 object list --type Service` to  #
 * #  list all service objects after running            # 
 * # configuration validation (`icinga2 daemon -C`).    #
 * #						        #
 * ######################################################
 */

/*
 * *******************
 * Systemd *
 * *******************
 * Used to monitor status of systemd - notify of failed units
 */

object Service "systemd" {
  import "jambula-01-service"

  host_name = "JambulaTV"
  check_command = "systemd"

  vars.osd.enabled = "yes"
  vars.osd.message = "System Services: One or more services failed.  For help, please contact support@jambulatv.com"
  vars.osd.interval = "2h"
}

/*
 * ***********************
 * /JambulaTV Media Disk *
 * ***********************
 * Used to check disk space at /JambulaTV
 */

object Service "Media Disk Space" {
  import "jambula-01-service"

  host_name = "JambulaTV"
  check_command = "disk"

  vars.disk_partitions = "/JambulaTV"
  vars.disk_wfree = "1%"
  vars.disk_cfree = "0.5%"
  display_name = "Media Disk Space"

  vars.osd.enabled = "yes"
  vars.osd.message = "Disk Space: You are running Low on disk space! Please clear the space in /JambulaTV"
  vars.osd.interval = "1h"
}

/*
 * ***********************************
 * /JambulaTV DVB-T Channels Missing *
 * ***********************************
 * Used to check if DVB-T channels are corrupted
 */

object Service "DVB-T2 Network" {
  import "jambula-03-service"

  host_name = "JambulaTV"
  check_command = "dvbt2-network"
  event_command = "dvbt2-network-event"

  vars.osd.enabled = "no"
  vars.osd.message = "Live TV: Your DVB-T2 Channel list is missing or corrupted.  Please add a DVB-T network and map your channels. Visit the link at: http://$host.address$:9981"
  vars.osd.interval = "1m"
}

/*
 * *********************************
 * /JambulaTV DVB-T Tuner Failures *
 * *********************************
 * Used to check if DVB-T tuner has failed
 */

object Service "DVB-T2 Tuner" {
  import "jambula-03-service"

  host_name = "JambulaTV"
  check_command = "dvbt2-tuner"
  event_command = "dvbt2-tuner-event"

  vars.osd.enabled = "yes"
  vars.osd.message = "Error: A problem has been detected with your Live TV tuner.  Please wait while I attempt to fix it.  If error persists, please reboot your JambulaTV"

  vars.osd.interval = "1m"
}

/*
 * *******************
 * WiFi AP Discovery *
 * *******************
 * Used to scan for preferred wireless access point
 */

object Service "Discover Wifi Access Point" {
  import "jambula-01-service"

  host_name = "JambulaTV"
  check_command = "wifi_ap"
  event_command = "wifi-ap-status-event"
}

/*
 * *******************
 * Check for Updates *
 * *******************
 * Used to check for available updates for JambulaTV
 */

object Service "Available Updates" {
  import "jambula-05-service"

  host_name = "JambulaTV"
  check_command = "updates"

  vars.osd.enabled = "yes"
  vars.osd.message = "Software Updates: A new version of JambulaTV software is available. Please update as soon as possible"
  vars.osd.interval = "3h"
}

/*
 * ******************************
 * Ethernet network link status *
 * ******************************
 * Restart network service if ethernet link is detected and no IP address is assigned.
 */

object Service "Ethernet Network Link Status" {
  import "jambula-01-service"

  host_name = "JambulaTV"
  check_command = "ethernet_link"
  event_command = "ethernet-link-status-event"
}

/*
 * *********************
 * MiFi Battery Levels *
 * *********************
 * Used to check MiFi battery levels
 */

object Service "MiFi Battery Level" {
  /*
  import "jambula-02-service"
  */
  import "jambula-disable-service"

  host_name = "JambulaTV"
  check_command = "mifi_battery"
  display_name = "MiFi Battery Level"

  vars.osd.enabled = "yes"
  vars.osd.message = "$service.output$"
  vars.osd.interval = "2m"
}

/*
 * ********************
 * MiFi Data Balances *
 * ********************
 * Used to check MiFi data balances
 */

object Service "MiFi Data Balance" {
  /*
  import "jambula-02-service"
  */
  import "jambula-disable-service"

  host_name = "JambulaTV"
  check_command = "mifi_data"
  display_name = "MiFi Data Balance"

  vars.osd.enabled = "yes"
  vars.osd.message = "$service.output$"
  vars.osd.interval = "1h"
}
