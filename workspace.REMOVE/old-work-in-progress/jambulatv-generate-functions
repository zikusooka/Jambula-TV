#!/bin/sh
ROOT_DIR=/root
PREFIX=/usr
CONFDIR=/etc
STATEDIR=/var
BINARY_PREFIX=/usr/bin

PROJECT_NAME=JambulaTV
PROJECT_BASE_DIR=$ROOT_DIR/$PROJECT_NAME

PROJECT_SYSTEM_CONF_DIR=$CONFDIR/$PROJECT_NAME
PROJECT_SYSTEM_SHARE_DIR=$PREFIX/share/$PROJECT_NAME
PROJECT_SYSTEM_LOG_DIR=$STATEDIR/log/$PROJECT_NAME
PROJECT_SYSTEM_LIB_DIR=$STATEDIR/lib/$PROJECT_NAME
PROJECT_SYSTEM_CACHE_DIR=$STATEDIR/cache/$PROJECT_NAME
PROJECT_SYSTEM_DB_DIR=$PROJECT_SYSTEM_LIB_DIR/db

FREEVO_SYSTEM_CONFIG_DIR=$PROJECT_SYSTEM_CONF_DIR/freevo


# Source functions file
#. $PROJECT_BASE_DIR/functions
TV_MARKET=buwaate
INTERNET=y
USE_REMOTE_BACKEND=n
REMOTE_BACKEND_SERVER=aexbox
REMOTE_BACKEND_SHARE_1=/AExBox2
LOCAL_FRONTEND_SHARE_1=/JambulaTV



TV_CHANNELS_FILE=$PROJECT_SYSTEM_SHARE_DIR/tv/analog/$TV_MARKET-channels
TV_FREQ_TABLE_FILE=$PROJECT_SYSTEM_SHARE_DIR/tv/analog/$TV_MARKET-frequencies
PICTURES_PARTITION=/$PROJECT_NAME
LOCAL_CONF_USER_PREFS=$FREEVO_SYSTEM_CONFIG_DIR/local_conf.py
LOCAL_SETTINGS_DIR=$PICTURES_PARTITION/local_settings

HOLIDAYS_FILE=$LOCAL_SETTINGS_DIR/holidays.txt
WEATHER_LOCATIONS_FILE=$LOCAL_SETTINGS_DIR/weather_stations.txt
HEADLINE_LOCATIONS_FILE=$LOCAL_SETTINGS_DIR/headlines.txt
APODCAST_LOCATIONS_FILE=$LOCAL_SETTINGS_DIR/audio_podcasts.txt
VPODCAST_LOCATIONS_FILE=$LOCAL_SETTINGS_DIR/video_podcasts.txt
RADIO_STATIONS_FILE=$LOCAL_SETTINGS_DIR/radio_stations.txt
EMAIL_ACCOUNTS_FILE=$LOCAL_SETTINGS_DIR/email_accounts.txt
USB_DEVICES_FILE=$LOCAL_SETTINGS_DIR/usb_gadgets.txt
REMINDERS_DIR=$LOCAL_SETTINGS_DIR/reminders
REMINDERS_BIRTHDAYS_FILE=$REMINDERS_DIR/birthdays.rem
REMINDERS_ANNIVERSARIES_FILE=$REMINDERS_DIR/anniversaries.rem
REMINDERS_PUBLIC_HOLIDAYS_FILE=$REMINDERS_DIR/public_holidays.rem
REMINDERS_EASTER_DAYS_FILE=$REMINDERS_DIR/easter_days.rem
REMINDERS_TODO_FILE=$REMINDERS_DIR/TODO.txt
IMAGES_DIR=$LOCAL_SETTINGS_DIR/images
SYSTEM_CLOCK_FILE=/etc/sysconfig/clock

SCREENSAVER_SLIDESHOW_FILE=$PICTURES_PARTITION/pictures/slideshow.fxd
SCREENSAVER_DELAY=300
SCREENSAVER_POLL=300

WEATHER_NOAA_DB_FILE=$PROJECT_SYSTEM_DB_DIR/weather.noaa.txt 

#LOCAL_WEATHER_STATION=`grep ZONE $SYSTEM_CLOCK_FILE | cut -d "/" -f2 | sed 's/"//g'`
LOCAL_WEATHER_STATION=Entebbe

LOCAL_WEATHER_STATION_CODE=`grep -e "$LOCAL_WEATHER_STATION" $WEATHER_NOAA_DB_FILE | cut -d ";" -f3 | head -1`
# Weather URLs
case $INTERNET in
y)
ONECLICK_URL_CURC="http://ff.1click.weather.com/weather/local/%s?cc=*%s"
ONECLICK_URL_DAYF="http://ff.1click.weather.com/weather/local/%s?dayf=5%s"
ONECLICK_URL_ELOC="http://ff.1click.weather.com/weather/local/%s?eloc=st"
ONECLICK_URL_MAP="http://www.weather.com/weather/map/%s?from=LAPmaps&bypassredirect=true"
;;
n)
ONECLICK_URL_CURC="http://jambulaweather:83/%s.current.xml?cc=*%s.current.xml"
ONECLICK_URL_DAYF="http://jambulaweather:83/%s.5day.xml?dayf=5%s.5day.xml"
ONECLICK_URL_ELOC="http://jambulaweather:83/%s.extended.xml?eloc=st"
ONECLICK_URL_MAP="http://jambulaweather:83/maps/images/%s?"
;;
esac

LOCAL_EMAIL_USER=root
MBOX_FILE_PATH=/var/spool/mail/$LOCAL_EMAIL_USER
MAILDIR_FILE_PATH=/$LOCAL_EMAIL_USER/Maildir






############ JAM
clear




echo "
ISP=$ISP_NAME
ISP_USER=$ISP_USER
ISP_PASS=$ISP_PASS
ISP_NET_TYPE=\"$ISP_NET_TYPE\"
ISP_INTERFACE=$ISP_INTERFACE


"

exit

#################

###############
#  FUNCTIONS  #
###############
ping_host () {
ping -w 1 $1 > /dev/null 2>&1
PINGVAL=$?
}

enable_remote_shares () {
# Enable Remote file shares e.g. NFS
ping_host $REMOTE_BACKEND_SERVER
if [ "$USE_REMOTE_BACKEND" = "y" ] && [ "$PINGVAL" = "0" ];
then
# Mount NFS Shares at Remote host
mount $REMOTE_BACKEND_SERVER:$REMOTE_BACKEND_SHARE_1 $LOCAL_FRONTEND_SHARE_1 \
 -o async,intr,nfsvers=3,actimeo=0,udp,rsize=131072,wsize=131072
fi
}

tv_chan_freqs () {
echo "#-------------------------------------------------------------------------
#   TV Channels and Frequencies for the $TV_MARKET TV market area
#-------------------------------------------------------------------------
# Channels
TV_CHANNELS = [ " 
cat $TV_CHANNELS_FILE 
echo "]" 

# Open FREQUENCY_TABLE block
echo "# Frequencies
TV_FREQUENCY_TABLE = {" 
cat $TV_FREQ_TABLE_FILE 
echo "}
" 
}

holidays () {
echo "#-------------------------------------------------------------------------
#  Holidays
#-------------------------------------------------------------------------
#
HOLIDAYS = ["

sed '/^#/d' $HOLIDAYS_FILE | sed '/^ /d'| sed '/^$/d' | while 
read HOLIDAY_LINE
do
# Set variables
HOLIDAY_DATE=`echo $HOLIDAY_LINE | cut -d : -f1 | sed -e 's/^ //' | sed -e 's/ $//'`
HOLIDAY_MENU_NAME=`echo $HOLIDAY_LINE | cut -d : -f2 | sed -e 's/^ //' | sed -e 's/ $//'`
echo "    ('$HOLIDAY_DATE', '$HOLIDAY_MENU_NAME'),"
done
echo "    ('12-31', 'newyear.png')"
echo "]
" 
# Create holidays icons directory if it does not exist
[ -d $IMAGES_DIR/holidays ] || mkdir -p $IMAGES_DIR/holidays
}

weather_stations () {
echo "#-------------------------------------------------------------------------
#  Weather Stations
#-------------------------------------------------------------------------
#
ONECLICK_LOCATIONS = ["

sed '/^#/d' $WEATHER_LOCATIONS_FILE | sed '/^ /d'| sed '/^$/d' | while 
read WEATHER_STATION_LINE
do
# Set variables
WEATHER_STATION_MENU_NAME=`echo $WEATHER_STATION_LINE | cut -d : -f1 | sed -e 's/^ //' | sed -e 's/ $//'`
WEATHER_STATION_CODE=`echo $WEATHER_STATION_LINE | cut -d : -f2 | sed -e 's/^ //' | sed -e 's/ $//'`
WEATHER_STATION_MAP_URL=`echo $WEATHER_STATION_LINE | cut -d : -f3-99 | sed -e 's/^ //' | sed -e 's/ $//'`
echo "    ('$WEATHER_STATION_CODE', 1, '$WEATHER_STATION_MAP_URL', '$WEATHER_STATION_MENU_NAME'),"
done

echo "]
" 

echo "# Weather URLs
# Current Conditions URL
ONECLICK_URL_CURC = '$ONECLICK_URL_CURC'
# Day Forecast URL
ONECLICK_URL_DAYF = '$ONECLICK_URL_DAYF'
# Extended Location URL
ONECLICK_URL_ELOC = '$ONECLICK_URL_ELOC'

# Maps
ONECLICK_URL_MAP = '$ONECLICK_URL_MAP'
"
}

weather_idlebar () {
if [ "$INTERNET" = "y" ] && [ "$LOCAL_WEATHER_STATION_CODE" != "----" ];
then
echo "#-------------------------------------------------------------------------
#  Weather Idlebar 
#-------------------------------------------------------------------------
#
plugin.activate('idlebar.weather', level=45, args=('$LOCAL_WEATHER_STATION_CODE'))
"
fi
}

headlines () {
echo "#-------------------------------------------------------------------------
#  Headlines
#-------------------------------------------------------------------------
#
HEADLINES_LOCATIONS = ["

sed '/^#/d' $HEADLINE_LOCATIONS_FILE | sed '/^ /d'| sed '/^$/d' | while 
read HEADLINES_FEED_LINE
do
# Set variables
HEADLINES_FEED_MENU_NAME=`echo $HEADLINES_FEED_LINE | cut -d : -f1 | sed -e 's/^ //' | sed -e 's/ $//'`
HEADLINES_FEED_URL=`echo $HEADLINES_FEED_LINE | cut -d : -f2-99 | sed -e 's/^ //' | sed -e 's/ $//'`
echo "    ('$HEADLINES_FEED_MENU_NAME', '$HEADLINES_FEED_URL'),"
done

echo "]
" 
}

audio_podcasts () {
echo "#-------------------------------------------------------------------------
#  Audio Podcasts
#-------------------------------------------------------------------------
#
APODCAST_LOCATIONS = ["

sed '/^#/d' $APODCAST_LOCATIONS_FILE | sed '/^ /d'| sed '/^$/d' | while 
read APODCAST_LINE
do
# Set variables
APODCAST_MENU_NAME=`echo $APODCAST_LINE | cut -d : -f1 | sed -e 's/^ //' | sed -e 's/ $//'`
APODCAST_FEED_URL=`echo $APODCAST_LINE | cut -d : -f2-99 | sed -e 's/^ //' | sed -e 's/ $//'`
echo "    ('$APODCAST_MENU_NAME', '$APODCAST_FEED_URL'),"
done

echo "]
" 
}

video_podcasts () {
echo "#-------------------------------------------------------------------------
#  Video Podcasts
#-------------------------------------------------------------------------
#
VPODCAST_LOCATIONS = ["

sed '/^#/d' $VPODCAST_LOCATIONS_FILE | sed '/^ /d'| sed '/^$/d' | while 
read VPODCAST_LINE
do
# Set variables
VPODCAST_MENU_NAME=`echo $VPODCAST_LINE | cut -d : -f1 | sed -e 's/^ //' | sed -e 's/ $//'`
VPODCAST_FEED_URL=`echo $VPODCAST_LINE | cut -d : -f2-99 | sed -e 's/^ //' | sed -e 's/ $//'`
echo "    ('$VPODCAST_MENU_NAME', '$VPODCAST_FEED_URL'),"
done

echo "]
" 
}

radio_stations () {
echo "#-------------------------------------------------------------------------
#  FM Radio Stations
#-------------------------------------------------------------------------
#
RADIO_STATIONS = ["

sed '/^#/d' $RADIO_STATIONS_FILE | sed '/^ /d'| sed '/^$/d' | while 
read RADIO_STATION_LINE
do
# Set variables
RADIO_STATION_MENU_NAME=`echo $RADIO_STATION_LINE | cut -d : -f1 | sed -e 's/^ //' | sed -e 's/ $//'`
RADIO_STATION_FREQ=`echo $RADIO_STATION_LINE | cut -d : -f2 | sed -e 's/^ //' | sed -e 's/ $//'`
echo "    ('$RADIO_STATION_FREQ -  $RADIO_STATION_MENU_NAME', '$RADIO_STATION_FREQ'),"
done

echo "]
" 
}

email_accounts () {
echo "#-------------------------------------------------------------------------
#  Email Accounts - Idlebar
#-------------------------------------------------------------------------
"
sed '/^#/d' $EMAIL_ACCOUNTS_FILE | sed '/^ /d'| sed '/^$/d' | while 
read EMAIL_ACCOUNTS_LINE
do
# Set variables
EMAIL_ACCOUNTS_SERVER_NAME=`echo $EMAIL_ACCOUNTS_LINE | cut -d : -f1 | sed -e 's/^ //' | sed -e 's/ $//'`
EMAIL_ACCOUNTS_SERVER_PORT=`echo $EMAIL_ACCOUNTS_LINE | cut -d : -f2 | sed -e 's/^ //' | sed -e 's/ $//'`
EMAIL_ACCOUNTS_SERVER_USER=`echo $EMAIL_ACCOUNTS_LINE | cut -d : -f3 | sed -e 's/^ //' | sed -e 's/ $//'`
EMAIL_ACCOUNTS_SERVER_PASS=`echo $EMAIL_ACCOUNTS_LINE | cut -d : -f4 | sed -e 's/^ //' | sed -e 's/ $//'`

# Add Internet email accounts - pop3 and imap
if [ "$EMAIL_ACCOUNTS_SERVER_PORT" = "110" ] || [ "$EMAIL_ACCOUNTS_SERVER_PORT" = "995" ];
then
echo "# POP3
plugin.activate('idlebar.MultiMail.Pop3', level=10, args=('$EMAIL_ACCOUNTS_SERVER_USER', '$EMAIL_ACCOUNTS_SERVER_PASS', '$EMAIL_ACCOUNTS_SERVER_NAME', '$EMAIL_ACCOUNTS_SERVER_PORT'))"
else
echo "# IMAP
plugin.activate('idlebar.MultiMail.Imap', level=10, args=('$EMAIL_ACCOUNTS_SERVER_USER', '$EMAIL_ACCOUNTS_SERVER_PASS', '$EMAIL_ACCOUNTS_SERVER_NAME', '$EMAIL_ACCOUNTS_SERVER_PORT', 'INBOX'))"
fi

done

# For all types, add local mail spool directories - mbox and maildir
[ ! -e $MBOX_FILE_PATH ] || \
echo "
# MBOX
plugin.activate('idlebar.MultiMail.Mbox', level=10, args=('$MBOX_FILE_PATH'))
"
[ ! -e $MAILDIR_FILE_PATH ] || \
echo "# MAILDIR
plugin.activate('idlebar.MultiMail.Maildir', level=10, args=('$MAILDIR_FILE_PATH'))"

}

# USB HOTPLUG ITEMS
#-------------------
usb_gadgets () {
echo "#-------------------------------------------------------------------------
#  Personal USB Gadgets
#-------------------------------------------------------------------------
USB_HOTPLUG = ["

sed '/^#/d' $USB_DEVICES_FILE | sed '/^ /d'| sed '/^$/d' | while 
read USB_DEVICE_LINE
do
# Set variables
USB_DEVICE_TYPE=`echo $USB_DEVICE_LINE | cut -d : -f1 | sed -e 's/^ //' | sed -e 's/ $//'`
USB_DEVICE_VENDOR_ID=`echo $USB_DEVICE_LINE | cut -d : -f2 | sed -e 's/^ //' | sed -e 's/ $//'`
USB_DEVICE_PRODUCT_ID=`echo $USB_DEVICE_LINE | cut -d : -f3 | sed -e 's/^ //' | sed -e 's/ $//'`
USB_DEVICE_DEVICE_ID=$USB_DEVICE_VENDOR_ID:$USB_DEVICE_PRODUCT_ID

case $USB_DEVICE_TYPE in
FLASH_DISK)
echo "# Flash
('$USB_DEVICE_DEVICE_ID' , 'Reading Flash Disk', '/diskA/equator/scripts/AExBox/utilities/mount_usb_device.sh &'), "
;;
IPOD_PLAYER)
echo "# iPod
('$USB_DEVICE_DEVICE_ID' , 'Reading iPOD Player', '/diskA/equator/scripts/AExBox/utilities/mount_usb_device.sh &'),"
;;
CAMERA)
echo "# Camera
('$USB_DEVICE_DEVICE_ID' , 'Reading Camera', '/diskA/equator/scripts/AExBox/utilities/mount_usb_device.sh &'),"
;;
HARD_DRIVE)
echo "# Hard Disk
('$USB_DEVICE_DEVICE_ID' , 'Reading Hard Drive', '/diskA/equator/scripts/AExBox/utilities/mount_usb_device.sh &'),"
;;
BACKUP_HARD_DRIVE)
echo "# Backup
('$USB_DEVICE_DEVICE_ID' , 'Starting AExBox Backup', 'sleep 15; /diskA/equator/scripts/AExBox/utilities/backup_2_portable_hdd.sh &'),"
;;
WIFI_ADAPTER)
echo "# AExSPOT
('$USB_DEVICE_DEVICE_ID' , 'Starting AExSPOT Wireless System', 'sleep 9; /diskA/equator/scripts/AExBox/init_scripts/aexspot start'),"
;;
INTERNET_ADAPTER_UTL)
echo "# 3G UTL
('$USB_DEVICE_DEVICE_ID' , 'Starting UTL 3G Internet', 'sleep 9; /diskA/equator/scripts/ppp/utl-3g.sh'),"
;;
DIGITAL_TV_STICK)
echo "# Digital TV Scan
('$USB_DEVICE_DEVICE_ID' , 'Digital TV Scanning ...', 'sleep 9; /diskA/equator/scripts/AExBox/utilities/dvb_scan_ug.sh 1 &'),"
;;
esac

done

echo "]"
}

reminders () {
echo "#-------------------------------------------------------------------------
#  Reminders: Birthdays, Anniversaries, Public Holidays
#-------------------------------------------------------------------------
#

REMINDERS = [ (\"/usr/bin/remind -h $REMINDERS_BIRTHDAYS_FILE\", \"Birthdays\", 47, \"Birthdays for\"), (\"/usr/bin/remind -h $REMINDERS_ANNIVERSARIES_FILE\", \"Anniversaries\", 47, \"Anniversaries for\"), (\"/usr/bin/remind -h $REMINDERS_PUBLIC_HOLIDAYS_FILE\", \"Public Holidays\", 47, \"Public Holidays for\"), (\"/usr/bin/remind -h $REMINDERS_EASTER_DAYS_FILE\", \"Easter Holidays\", 47, \"Easter Holidays\"), (\"cat $REMINDERS_TODO_FILE\", \"To Do\", 47, \"\") ]

REMINDICON_CMD = ('/usr/bin/remind -h $REMINDERS_DIR')
"
}

REMINDICON_CMD=('/usr/bin/remind -h $REMINDERS_BIRTHDAYS_FILE')
REMINDICON_CMD=('/usr/bin/remind -h $REMINDERS_ANNIVERSARIES_FILE')
REMINDICON_CMD=('/usr/bin/remind -h $REMINDERS_PUBLIC_HOLIDAYS_FILE')

screensaver_slideshow () {
echo "#-------------------------------------------------------------------------
#  Screensaver: Slide show of personal pictures
#-------------------------------------------------------------------------
#
# Pictures slideshow as screensaver
plugin.activate('freevoscreensaver', args=('fxd','$SCREENSAVER_SLIDESHOW_FILE','image',))
# Times
SSAVER_DELAY = $SCREENSAVER_DELAY
SSAVER_POLL = $SCREENSAVER_POLL"
}



#################
#  MAIN SCRIPT  #
#################
# Prepare files and directories
# ------------------------------
# Enable Remote file shares e.g. NFS if using alternate backend
enable_remote_shares

# Create local settings directory if non-existent
[ -d $LOCAL_SETTINGS_DIR ] || mkdir -p $LOCAL_SETTINGS_DIR

# Create reminders directory for birthdays, anniversaries, and holidays
[ -d $REMINDERS_DIR ] || mkdir -p $REMINDERS_DIR

# Create images directory for icons and stuff e.g holidays
[ -d $IMAGES_DIR ] || mkdir -p $IMAGES_DIR

# Remove exisiting user preferences file
[ ! -e $LOCAL_CONF_USER_PREFS ] || rm -f $LOCAL_CONF_USER_PREFS



# Generate Local_conf
# -------------------
echo "# ---------------------------------------------------------------------
# JambulaTV Local configuration file
# ---------------------------------------------------------------------" > $LOCAL_CONF_USER_PREFS

# Generate TV Channels and Frequencies
tv_chan_freqs >> $LOCAL_CONF_USER_PREFS

# 1. Generate Holidays
[ ! -e $HOLIDAYS_FILE ] || holidays >> $LOCAL_CONF_USER_PREFS

# 2. a)Generate Weather Feeds
[ ! -e $WEATHER_LOCATIONS_FILE ] || weather_stations >> $LOCAL_CONF_USER_PREFS

# 2. b)Idlebar
[ ! -e $WEATHER_NOAA_DB_FILE ] || weather_idlebar >> $LOCAL_CONF_USER_PREFS

# 3. Generate Headline Feeds
[ ! -e $HEADLINE_LOCATIONS_FILE ] || headlines >> $LOCAL_CONF_USER_PREFS

# 4. Generate Audio Podcasts Feeds
[ ! -e $APODCAST_LOCATIONS_FILE ] || audio_podcasts >> $LOCAL_CONF_USER_PREFS

# 5. Generate Video Podcasts Feeds
[ ! -e $VPODCAST_LOCATIONS_FILE ] || video_podcasts >> $LOCAL_CONF_USER_PREFS

# 6. Generate FM Radio Stations
[ ! -e $RADIO_STATIONS_FILE ] || radio_stations >> $LOCAL_CONF_USER_PREFS

# 7. Generate Idlebar Email Accounts
[ ! -e $EMAIL_ACCOUNTS_FILE ] || email_accounts >> $LOCAL_CONF_USER_PREFS

# 8. Generate Personal USB Gadgets
[ ! -e $USB_DEVICES_FILE ] || usb_gadgets >> $LOCAL_CONF_USER_PREFS

# 9. Generate reminders
reminders >> $LOCAL_CONF_USER_PREFS

#10. Generate slideshow pictures screensaver
screensaver_slideshow >> $LOCAL_CONF_USER_PREFS

# Run this last
# Reminder file permissions
#chmod -R 755 $LOCAL_SETTINGS_DIR/reminders
