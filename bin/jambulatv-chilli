#!/bin/sh
# CoovaChilli init script
PREFIX=/usr
PROJECT_NAME=JambulaTV
PROJECT_SYSTEM_SHARE_DIR=$PREFIX/share/$PROJECT_NAME
COOVA_CONFIG_DIR=/etc/chilli
COOVA_CONFIG_FILE=$COOVA_CONFIG_DIR/config
WWW_HTML_DIR=$PROJECT_SYSTEM_SHARE_DIR/html
COOVA_HTML_DIR=$WWW_HTML_DIR/coova
LOGFILE=/var/log/$PROJECT_NAME/chilli.log
REMOTE_DOMAIN_NAME=google.com
LOCAL_DNS_SERVER=`grep 'HS_UAMLISTEN=' $COOVA_CONFIG_FILE | cut -d '=' -f2 | awk {'print $1'}`

# Source function library.
. /etc/rc.d/init.d/functions

[ -f /usr/sbin/chilli ] || exit 0



# Jambula chilli functions:
# -------------------------
set_default_gateway_device () {
# Find default gateway device
ip route show | grep default | grep ppp > /dev/null 2>&1
if [ "$?" = "0" ];
then
INTERNET_GATEWAY_DEV=`ip link | grep ppp | cut -d : -f2 | head -1 | sed -e 's/ //g'`
else
INTERNET_GATEWAY_DEV=$(ip route | grep default | awk '{print $(NF)}')
fi
# Set previous HS_WANIF variable
PREVIOUS_HS_WANIF=`grep 'HS_WANIF=' $COOVA_CONFIG_FILE | awk {'print $1'}`
#
# Replace previous HS_WANIF with current and active Internet device
sed -i "s:$PREVIOUS_HS_WANIF:HS_WANIF=$INTERNET_GATEWAY_DEV:g" $COOVA_CONFIG_FILE
}

set_dns_nameservers () {
# Set DNS 1
PREVIOUS_HS_DNS1=`grep 'HS_DNS1=' $COOVA_CONFIG_FILE`
# Current DNS 1
CURRENT_DNS1=`sed '/127.0.0.1/d' /etc/resolv.conf | sed 's/^nameserver //g' | sed '/^[a-z]/d' | sed '/^[A-Z]/d' | sed '/^#/d' | sed '/ /d' | uniq | awk 'NR == 1'`
#
CURRENT_HS_DNS1=HS_DNS1=$CURRENT_DNS1

# Set DNS 2
PREVIOUS_HS_DNS2=`grep 'HS_DNS2=' $COOVA_CONFIG_FILE`
#
# Number of DNS settings
NUMBER_OF_DNS=`sed '/127.0.0.1/d' /etc/resolv.conf | sed 's/^nameserver //g' | sed '/^[a-z]/d' | sed '/^[A-Z]/d' | sed '/^#/d' | sed '/ /d' | uniq | wc -l`
#
# Add second DNS if more than 1 setting
if [ "$NUMBER_OF_DNS" -gt "1" ];
then
# Current DNS 2
CURRENT_DNS2=`sed '/127.0.0.1/d' /etc/resolv.conf | sed 's/^nameserver //g' | sed '/^[a-z]/d' | sed '/^[A-Z]/d' | sed '/^#/d' | sed '/ /d' | uniq | awk 'NR == 2'` 
else
CURRENT_DNS2=$CURRENT_DNS1
fi
CURRENT_HS_DNS2=HS_DNS2=$CURRENT_DNS2
#
# Coova-chilli: Set domains local feature
PREVIOUS_HS_DOMAINDNSLOCAL=`grep 'HS_DOMAINDNSLOCAL=' $COOVA_CONFIG_FILE`
host -W 1 $REMOTE_DOMAIN_NAME $CURRENT_DNS1 > /dev/null 2>&1
DNS_STATUS=$?
if [ "$DNS_STATUS" = "0" ];
then
# Set to off since internet on
sed -i "s:$PREVIOUS_HS_DOMAINDNSLOCAL:HS_DOMAINDNSLOCAL=off:g" $COOVA_CONFIG_FILE 
else
# Set to on since internet off
sed -i "s:$PREVIOUS_HS_DOMAINDNSLOCAL:HS_DOMAINDNSLOCAL=on:g" $COOVA_CONFIG_FILE 
fi
}

# Default chilli functions
. /etc/chilli/functions

MULTI=$(ls /etc/chilli/*/chilli.conf 2>/dev/null)
[ -z "$DHCPIF" ] && [ -n "$MULTI" ] && {
    for c in $MULTI; 
    do
	echo "Found configuration $c"
	DHCPIF=$(basename $(echo $c|sed 's#/chilli.conf##'))
	export DHCPIF
	echo "Running DHCPIF=$DHCPIF $0 $*"
	sh $0 $*
    done
    exit
}

if [ -n "$DHCPIF" ]; then
    CONFIG=/etc/chilli/$DHCPIF/chilli.conf
    pidfile=/var/run/chilli.$DHCPIF.pid
else
    CONFIG=/etc/chilli.conf
    pidfile=/var/run/chilli.pid
fi

[ -f $CONFIG ] || {
    echo "$CONFIG Not found"
    exit 0
}

check_required

RETVAL=0
prog="chilli"

case $1 in
    start)
        echo -n "Starting $prog: "
	
	set_default_gateway_device
	set_dns_nameservers

        /sbin/modprobe tun >/dev/null 2>&1
        echo 1 > /proc/sys/net/ipv4/ip_forward

	[ -e /dev/net/tun ] || {
	    (cd /dev; 
		mkdir net; 
		cd net; 
		mknod tun c 10 200)
	}

	writeconfig
        radiusconfig

	test ${HS_ADMINTERVAL:-0} -gt 0 && {	
            (crontab -l 2>&- | grep -v $0
		echo "*/$HS_ADMINTERVAL * * * * $0 radconfig"
		) | crontab - 2>&-
	}
	
	ip addr add 0.0.0.0 dev $HS_LANIF

       	daemon /usr/sbin/chilli --conf=$CONFIG --pidfile=$pidfile

        echo
	;;
    
    radconfig)
	[ -e $MAIN_CONF ] || writeconfig
	radiusconfig
	;;

    reload)
	killall -HUP chilli chilli_opt
	;;
    
    stop)
        echo -n $"Shutting down $prog: "

	crontab -l 2>&- | grep -v $0 | crontab -

        if [ -f $pidfile ];
	then
	daemon kill $(cat $pidfile)
	    RETVAL=$?
	    [ $RETVAL = 0 ] && {
		rm -f $pidfile 2>/dev/null
	    }
	else
	daemon killall chilli chilli_opt
	fi
        echo
	;;
 
    restart)
	$0 stop
	$0 start
	RETVAL=$?
	;;
   
    *)
        echo "Usage: $0 {start|stop|restart|reload|radconfig}"
        exit 1
esac

exit $?
