#!/bin/sh
#
# This script is used to manually enter water meter readings and 
# indicate whether water is flowing today or yesterday
#
#  NOTE: To use this script in a non-interactive mode, Add the
#        arguments WATER_READING and WATER_FLOW to 
#        command e.g:
#
#        ./jambulatv-water-reading [today|yesterday] [67.37] [yes|no]
#  
#        You can also use this script interactively at a remote 
#        PC e.g. located in kitchen, and entry input is guided by
#        GUI interface i.e. interface.  Ensure you can connect to
#        remote PC password-lessly via SSH
#
# Jambula Labs @copyright 2020-2021 All rights reserved

# Variables
WATER_REPORTS_DIR=/var/tmp/water_reports
OPERATOR_USER=jambula

DAY_REQUESTED=$1
WATER_READING=$2
WATER_FLOW=$3



#################
#  MAIN SCRIPT  #
#################

# set variables depending on day requested
case $DAY_REQUESTED in
[Tt]oday)
WATER_REPORTS_FILE=$WATER_REPORTS_DIR/$(date +%Y%m%d).txt
READING_TIMESTAMP="$(date +'%A, %_d %B %Y') - $(date +'%_I:%M %p')"
;;

[Yy]esterday)
WATER_REPORTS_FILE=$WATER_REPORTS_DIR/$(date --date='yesterday' +%Y%m%d).txt
READING_TIMESTAMP="$(date --date='yesterday' +'%A, %_d %B %Y') - $(date +'%_I:%M %p')"
;;

2_days_ago)
WATER_REPORTS_FILE=$WATER_REPORTS_DIR/$(date --date='2 days ago' +%Y%m%d).txt
READING_TIMESTAMP="$(date --date='2 days ago' +'%A, %_d %B %Y') - $(date +'%_I:%M %p')"
;;

3_days_ago)
WATER_REPORTS_FILE=$WATER_REPORTS_DIR/$(date --date='3 days ago' +%Y%m%d).txt
READING_TIMESTAMP="$(date --date='3 days ago' +'%A, %_d %B %Y') - $(date +'%_I:%M %p')"
;;

*)
WATER_REPORTS_FILE=$WATER_REPORTS_DIR/$(date +%Y%m%d).txt
READING_TIMESTAMP="$(date +'%A, %_d %B %Y') - $(date +'%_I:%M %p')"
;;
esac


# Quit if there's already a water report for today
[[ -e $WATER_REPORTS_FILE ]] && . $WATER_REPORTS_FILE
if [[ -e $WATER_REPORTS_FILE ]] && [[ "x$WATER_READING" != "x" ]];
then
clear
cat <<ET
There's already a water report for: $(date +'%A, %_d %B %Y')

ET
exit 1
fi

# Create water reports directory if non-existent
[[ -d $WATER_REPORTS_DIR ]] || mkdir -p $WATER_REPORTS_DIR


# Create report header
cat > $WATER_REPORTS_FILE <<ET
# ==============================================================
# Water report for $READING_TIMESTAMP 
# ==============================================================

ET

# Ask for day of water reading
if [[ "x$DAY_REQUESTED" = "x" ]];
then
DAY_REQUESTED=$(zenity --title "DAY OF READING" --entry --text "Enter the day for the water meter reading (e.g. today, yesterday, 2_days_ago, 3_days_ago)")

else
DAY_REQUESTED=$DAY_REQUESTED
fi

# Ask for water reading
if [[ "x$WATER_READING" = "x" ]];
then
WATER_READING=$(zenity --title "WATER READING" --entry --text "Enter the water meter reading for $DAY_REQUESTED (e.g. 35.40)")

else
WATER_READING=$WATER_READING
fi
#
echo "WATER_READING=$WATER_READING" >> $WATER_REPORTS_FILE

# Water flow status for today
if [[ "x$WATER_FLOW" = "x" ]];
then
	# Ask weather water is flowing
	zenity --title "WATER FLOW" --question --text "Is the water flowing today?"
	WATER_FLOW_STATUS=$?
	if [[ "$WATER_FLOW_STATUS" = "0" ]];
	then
	echo "WATER_FLOWING=y" >> $WATER_REPORTS_FILE

	else
	echo "WATER_FLOWING=n" >> $WATER_REPORTS_FILE
	fi

else
	if [[ "$WATER_FLOW" = "Yes" || "$WATER_FLOW" = "yes" ]];
	then
	echo "WATER_FLOWING=y" >> $WATER_REPORTS_FILE

	elif [[ "$WATER_FLOW" = "No" || "$WATER_FLOW" = "no" ]];
	then
	echo "WATER_FLOWING=n" >> $WATER_REPORTS_FILE

	else
	echo "WATER_FLOWING=n" >> $WATER_REPORTS_FILE
	fi
fi


# Create report footer 
cat >> $WATER_REPORTS_FILE <<ET

ET


# Change ownership of water reports directory
chown -R $OPERATOR_USER:$OPERATOR_USER $WATER_REPORTS_DIR
