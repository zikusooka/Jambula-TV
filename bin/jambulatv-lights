#!/bin/sh

# Domoticz Settings
DOMOTICZ_HOST_IP=127.0.0.1
DOMOTICZ_WWW_PORT=8540

# Time of Day
HOUR=`date +%H`

DOMOTICZ_LAMP_NAME="$1"
DOMOTICZ_LAMP_LIVING_ROOM_NAME="Living Room"
DOMOTICZ_LAMP_ACTION=$2
DOMOTICZ_LOG_NOTICE="[$(basename $0)]%20$DOMOTICZ_LAMP_NAME%20was%20turned"

JAMBULATV_LIVING_ROOM_NAME="JambulaTV (Living Room)"
JAMBULATV_LIVING_ROOM_STATE_ON="Video"

MODE=$3



###############
#  FUNCTIONS  #
###############
usage () {
# Device Name
if [ "x$DOMOTICZ_LAMP_NAME" = "x" ];
then
clear
echo "Usage:  ./`basename $0` [DOMOTICZ_LAMP_NAME (Use Quotes for spaced names] [DOMOTICZ_LAMP_ACTION (on|off|toggle)] [demo (Optional)]
"
exit 1
fi
# Device Action
if [ "x$DOMOTICZ_LAMP_ACTION" = "x" ];
then
clear
echo "Usage:  ./`basename $0` $DOMOTICZ_LAMP_NAME [DOMOTICZ_LAMP_ACTION (on|off|toggle)] [demo (Optional)]

"
exit 1
fi
}

darkness_or_light () {
# Determine weather it is dark or not
if [ "$HOUR" -ge "19" ] || [ "$HOUR" -le "6" ];
then
ITS_DARK=yes
else
ITS_DARK=no
# Test mode option
[ "$MODE" = "demo" ] || \
cat << EOF
You are running this tool during day time.  If you want to overide default 
i.e. run it anytime, add 'demo' to list of CLI arguments

Usage:  ./`basename $0` $DOMOTICZ_LAMP_NAME $DOMOTICZ_LAMP_ACTION demo

EOF
#
fi
}

# TV ID, Status, and Data
get_id_of_tv () {
DOMOTICZ_TV_ID=$(curl -s "http://$DOMOTICZ_HOST_IP:$DOMOTICZ_WWW_PORT/json.htm?type=command&param=getlightswitches" | jq -c ".result[] | select(.Name == \"$JAMBULATV_LIVING_ROOM_NAME\") | .idx" | sed "s:\"::g")
}

status_of_tv () {
get_id_of_tv
DOMOTICZ_TV_STATUS=$(curl -s "http://$DOMOTICZ_HOST_IP:$DOMOTICZ_WWW_PORT/json.htm?type=devices&rid=$DOMOTICZ_TV_ID" | jq '.result' | grep -i status | awk {'print $2'} | sed 's:["|,]::g')
}

data_of_tv () {
get_id_of_tv
DOMOTICZ_TV_DATA=$(curl -s "http://$DOMOTICZ_HOST_IP:$DOMOTICZ_WWW_PORT/json.htm?type=devices&rid=$DOMOTICZ_TV_ID" | jq '.result' | grep -i data | cut -d : -f 2- | sed 's:["|,]::g' | sed 's:^ ::')
}


# Lamp ID, and Status
get_id_of_lamp () {
DOMOTICZ_LAMP_ID=$(curl -s "http://$DOMOTICZ_HOST_IP:$DOMOTICZ_WWW_PORT/json.htm?type=command&param=getlightswitches" | jq -c ".result[] | select(.Type == \"Light/Switch\") | select(.Name == \"$DOMOTICZ_LAMP_NAME\") | .idx" | sed "s:\"::g")
export DOMOTICZ_LAMP_ID
}

type_of_lamp () {
get_id_of_lamp
DOMOTICZ_LAMP_TYPE=$(curl -s "http://$DOMOTICZ_HOST_IP:$DOMOTICZ_WWW_PORT/json.htm?type=devices&rid=$DOMOTICZ_LAMP_ID" | jq '.result' | grep -iw 'SwitchType' | awk {'print $2'} | sed 's:["|,]::g')
}

status_of_lamp () {
get_id_of_lamp
# Check status of security light
DOMOTICZ_LAMP_STATE=$(curl -s "http://$DOMOTICZ_HOST_IP:$DOMOTICZ_WWW_PORT/json.htm?type=devices&rid=$DOMOTICZ_LAMP_ID" | jq '.result' | grep -i status | awk {'print $2'} | sed 's:["|,]::g')
}

turn_on_lamp () {
get_id_of_lamp
type_of_lamp
if [ "$DOMOTICZ_LAMP_TYPE" = "Dimmer" ];
then
# Dimmable
# ---------
# Turn On
curl -s "http://$DOMOTICZ_HOST_IP:$DOMOTICZ_WWW_PORT/json.htm?type=command&param=switchlight&idx=$DOMOTICZ_LAMP_ID&switchcmd=Set%20Level&level=100" > /dev/null 2>&1
# Update DB
curl -s "http://$DOMOTICZ_HOST_IP:$DOMOTICZ_WWW_PORT/json.htm?type=command&param=udevice&idx=$DOMOTICZ_LAMP_ID&nvalue=1&svalue=0" > /dev/null 2>&1
else
# Non-Dimmable
# ------------
curl -s "http://$DOMOTICZ_HOST_IP:$DOMOTICZ_WWW_PORT/json.htm?type=command&param=switchlight&idx=$DOMOTICZ_LAMP_ID&switchcmd=On" > /dev/null 2>&1
fi
}

turn_off_lamp () {
get_id_of_lamp
type_of_lamp
if [ "$DOMOTICZ_LAMP_TYPE" = "Dimmer" ];
then
# Dimmable
# --------
# Turn Off
curl -s "http://$DOMOTICZ_HOST_IP:$DOMOTICZ_WWW_PORT/json.htm?type=command&param=switchlight&idx=$DOMOTICZ_LAMP_ID&switchcmd=Set%20Level&level=0" > /dev/null 2>&1
# Update DB
curl -s "http://$DOMOTICZ_HOST_IP:$DOMOTICZ_WWW_PORT/json.htm?type=command&param=udevice&idx=$DOMOTICZ_LAMP_ID&nvalue=0&svalue=0" > /dev/null 2>&1
else
# Non-Dimmable
# ------------
curl -s "http://$DOMOTICZ_HOST_IP:$DOMOTICZ_WWW_PORT/json.htm?type=command&param=switchlight&idx=$DOMOTICZ_LAMP_ID&switchcmd=Off" > /dev/null 2>&1
fi
}

log_event () {
curl -s "http://$DOMOTICZ_HOST_IP:$DOMOTICZ_WWW_PORT/json.htm?type=command&param=addlogmessage&message=$@" > /dev/null 2>&1
}



#################
#  MAIN SCRIPT  #
#################
usage
# Time of day
darkness_or_light 
# Get status of lamp
status_of_lamp
# Get status of tv
status_of_tv
case $DOMOTICZ_LAMP_ACTION in
[Oo][Nn])
# If in demo mode, continue out of 'if' statement
if [ "$MODE" = "demo" ];
then
continue
# Exit == Don't turn on Light if its in the Living Room and Video is playing
elif [ "$DOMOTICZ_TV_STATUS" = "$JAMBULATV_LIVING_ROOM_STATE_ON" ] && [ "$DOMOTICZ_LAMP_NAME" = "$DOMOTICZ_LAMP_LIVING_ROOM_NAME" ];
then
exit 0
fi
# Turn on security Light if it is not on and its dark or during demo mode

if [ "$ITS_DARK" = "yes" ] || [ "$MODE" = "demo" ];
then
turn_on_lamp
log_event $DOMOTICZ_LOG_NOTICE:%20On
fi
;;

[Oo][Ff][Ff])
# Switch off security Light if its is dark or during demo mode
if [ "$ITS_DARK" = "yes" ] || [ "$MODE" = "demo" ];
then
turn_off_lamp
log_event $DOMOTICZ_LOG_NOTICE:%20Off
fi
;;

[Tt][Oo][Gg][Gg][Ll][Ee])
# Turn on
[ "$DOMOTICZ_LAMP_STATE" = "On" ] || turn_on_lamp
# Turn off
[ "$DOMOTICZ_LAMP_STATE" = "Off" ] || turn_off_lamp
log_event $DOMOTICZ_LOG_NOTICE:%20Toggle
;;

*)
clear
echo "Usage:  ./`basename $0` [DOMOTICZ_LAMP_NAME (Use Quotes for spaced names] [DOMOTICZ_LAMP_ACTION (on|off|toggle)] [demo (Optional)]
"
esac
