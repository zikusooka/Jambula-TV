#!/bin/sh
# This is a wrapper to allow playing web based Camera streams using TVHeadend 
# Jambula Labs @copyright 2017-2018 All rights reserved

# Variables
FFMPEG_CMD=/usr/bin/ffmpeg

CAMERA_IP_ADDRESS=http://127.0.0.1
CAMERA_PORT_NUMBER=8520
CAMERA_MODE=jpeg
CAMERA_SCALE=100
CAMERA_MAX_FPS=5
CAMERA_BUFFER=1000
CAMERA_CONNKEY=652590
CAMERA_RAND=1507501065
CAMERA_ACTION=$1
CAMERA_NUMBER=$2
CAMERA_PLAYER=$3
CAMERA_PIPE_COMMAND_AND_OPTIONS="${@:4}"
CAMERA_PIPE_COMMAND_AND_OPTIONS_TEMP_FILE=/tmp/camplayer-pipe-commandopts
CAMERA_NAME=CAMERA-$CAMERA_NUMBER
CAMERA_STREAM_URL="$CAMERA_IP_ADDRESS:$CAMERA_PORT_NUMBER/zms-inetd?mode=$CAMERA_MODE&scale=$CAMERA_SCALE&maxfps=$CAMERA_MAX_FPS&buffer=$CAMERA_BUFFER&monitor=$CAMERA_NUMBER&connkey=$CAMERA_CONNKEY&rand=$CAMERA_RAND"
CAMERA_SERVICE_PROVIDER=jambulaTV
CAMERA_USER_AGENT="Mozilla/5.0 (X11; Linux x86_64; rv:54.0) Gecko/20100101 Firefox/54.0"



###############
#  FUNCTIONS  #
###############
usage () {
if [[ "x$CAMERA_ACTION" = "x" ]];
then
cat <<EOF
Usage: $(basename $0) [ACTION {play|stop}] [CAMERA NUMBER {1|2|3}] [PLAYER {ffmpeg|ffplay}]
EOF
exit 1
fi

case "$CAMERA_ACTION" in
play)
if [[ "x$CAMERA_NUMBER" = "x" ]];
#
then
cat <<EOF
Usage: $(basename $0) $CAMERA_ACTION [CAMERA NUMBER {1|2|3}] [PLAYER {ffmpeg|ffplay}]
EOF
exit 1
#
elif [[ "x$CAMERA_PLAYER" = "x" ]] || [[ "$CAMERA_PLAYER" != "ffmpeg" && "$CAMERA_PLAYER" != "ffplay" ]];
then
cat <<EOF
Usage: $(basename $0) $CAMERA_ACTION $CAMERA_NUMBER [PLAYER {ffmpeg|ffplay}]
EOF
exit 1
#
elif [[ "$CAMERA_PLAYER" = "ffmpeg" && "$PARENT_COMMAND" != "tvheadend" && "x$CAMERA_PIPE_COMMAND_AND_OPTIONS" = "x" ]];
then
cat <<EOF
Usage: $(basename $0) $CAMERA_ACTION $CAMERA_NUMBER $CAMERA_PLAYER [PIPE COMMAND] [OPTIONS]
EOF
exit 1
#
fi
;;

stop)
continue
;;

*)
cat <<EOF
Usage: $(basename $0) [ACTION {play|stop}] [CAMERA NUMBER {1|2|3}] [PLAYER {ffmpeg|ffplay}]
EOF
exit 1
;;
esac
}

write_pipe_commandopts_temp () {
# Write command and options to temp file - used for stopping player processes
[[ -e $CAMERA_PIPE_COMMAND_AND_OPTIONS_TEMP_FILE ]] && \
	sudo rm -f $CAMERA_PIPE_COMMAND_AND_OPTIONS_TEMP_FILE
echo "$@" | sed "s:cvlc:vlc -I dummy:g" > $CAMERA_PIPE_COMMAND_AND_OPTIONS_TEMP_FILE
}

player_command_ffmpeg () {
if [[ "x$CAMERA_PIPE_COMMAND_AND_OPTIONS" = "x" ]];
then
# FFmpeg NO pipe command
$FFMPEG_CMD -nostats -loglevel fatal -user-agent "$CAMERA_USER_AGENT" -i "$CAMERA_STREAM_URL" -metadata service_provider=$CAMERA_SERVICE_PROVIDER -metadata service_name="$CAMERA_NAME" -tune zerolatency -f $1 pipe:1
else

# FFmpeg with pipe command
$FFMPEG_CMD -nostats -loglevel fatal -user-agent "$CAMERA_USER_AGENT" -i "$CAMERA_STREAM_URL" -metadata service_provider=$CAMERA_SERVICE_PROVIDER -metadata service_name="$CAMERA_NAME" -tune zerolatency -f $1 pipe:1 | $2 - > /dev/null 2>&1 &
#
# Write command and options to temp file - used for stopping player processes
write_pipe_commandopts_temp $2
fi
}

player_command_ffplay () {
# Run stream via Ffplay
export DISPLAY=:0.0 && \
	/usr/bin/ffplay -hide_banner -loglevel quiet -fs -autoexit "$1" > /dev/null 2>&1 &
}

player_stop_command () {
# Notify
logger -s -t $(basename $0) "Stopping viewing of Camera $CAMERA_NUMBER"
# Get current monitor view process ID
PID_WEB_CAM_FFPLAY=$(ps auxw | grep -Ev grep | grep monitor=$1 | awk {'print $2'})
PID_WEB_CAM_CAMPLAYER=$(ps auxw | grep -Ev grep | grep 'jambulatv-camplayer play' | awk {'print $2'})
PID_PIPED_COMMANDOPTS=$(ps auxw | grep -Ev grep | grep "\\$(cat $CAMERA_PIPE_COMMAND_AND_OPTIONS_TEMP_FILE)" | awk {'print $2'})
#
# Kill current monitor view
[[ "x$PID_WEB_CAM_FFPLAY" = "x" ]] || kill $PID_WEB_CAM_FFPLAY
[[ "x$PID_WEB_CAM_CAMPLAYER" = "x" ]] || kill $PID_WEB_CAM_CAMPLAYER
[[ "x$PID_PIPED_COMMANDOPTS" = "x" ]] || kill $PID_PIPED_COMMANDOPTS
}



#################
#  MAIN SCRIPT  #
#################
#
# What process called this script
PARENT_COMMAND="$(ps -o comm= $PPID)"

# Usage
usage

# Play streams
case $CAMERA_ACTION in
play)
# FFplay
# -------
[[ "$CAMERA_PLAYER" = "ffplay" ]] && player_command_ffplay "$CAMERA_STREAM_URL"

# FFmpeg
# --------
# Set demuxer to mpegts if TVeadend called this tool
if [[ "$PARENT_COMMAND" = "tvheadend" ]];
then
# Run stream via Ffmpeg Pipe - mpegts (Slow start, but playable by tvheadend)
CAMERA_DEMUXER=mpegts
# Play using ffmpeg and format chosen above
[[ "$CAMERA_PLAYER" = "ffmpeg" ]] && player_command_ffmpeg $CAMERA_DEMUXER

else
# Run stream via Ffmpeg Pipe - mpjpeg (Fast start, but not playable by tvheadend)
CAMERA_DEMUXER=mpjpeg
[[ "$CAMERA_PLAYER" = "ffmpeg" ]] && player_command_ffmpeg $CAMERA_DEMUXER "$CAMERA_PIPE_COMMAND_AND_OPTIONS"

fi
;;

stop)
# Stop Action
if [[ "$CAMERA_ACTION" = "stop" ]];
then
player_stop_command
fi
;;

esac
