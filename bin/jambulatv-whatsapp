#!/bin/sh
# Use this script to register for whatsapp; and then to send and receive messages
# Fixed Variables
# MCC/MNC table is pulled from http://mcc-mnc.com
MCC_MNC_TABLE_FILE_URL=https://github.com/musalbas/mcc-mnc-table/raw/master/mcc-mnc-table.csv
MCC_MNC_TABLE_FILE=/usr/share/JambulaTV/mobile_providers/mcc-mnc-table.csv
COUNTRY_MCC_MNC_RAW_FILE=/tmp/mcc_mnc_raw.csv

WHATSAPP_SCRIPT=/usr/bin/jambulatv-whatsapp
WHATSAPP_CREDENTIALS_CONFIG=/etc/JambulaTV/messaging-whatsapp.cfg
WHATSAPP_METHOD_NAME=$1
WHATSAPP_TEXT_MESSAGE="$2"
WHATSAPP_PHONE_NUMBER_RECIPIENT=$3
WHATSAPP_REGISTRATION_METHOD=sms

PING_TIMEOUT=3 #9
PING_IP_ADDRESS=8.8.8.8



###############
#  FUNCTIONS  #
###############
usage () {
clear
if [ "x$WHATSAPP_METHOD_NAME" = "x" ];
then
echo "Usage:  ./`basename $0` [register]|[sendmessage]
"
exit 1
fi

case $WHATSAPP_METHOD_NAME in
[Ss][Ee][Nn][Dd][Mm][Ee][Ss][Ss][Aa][Gg][Ee])
# Source settings file
[ -e $WHATSAPP_CREDENTIALS_CONFIG ] && . $WHATSAPP_CREDENTIALS_CONFIG
# Test for blank message or recipient phone number
if [ "x$WHATSAPP_PHONE_NUMBER_RECIPIENT" = "x" ] || [ "x$WHATSAPP_TEXT_MESSAGE" = "x" ];
then
echo "Usage:  ./`basename $0` $WHATSAPP_METHOD_NAME [WHATSAPP_TEXT_MESSAGE] [WHATSAPP_PHONE_NUMBER_RECIPIENT]
"
exit 1
fi
;;
esac
}

check_internet_access () {
# Check for internet connectivity - IMPORTANT: Don't use DNS to ping use actual IP address
ping -w $PING_TIMEOUT $PING_IP_ADDRESS > /dev/null 2>&1
INTERNET_ALIVE=$?
if [ "$INTERNET_ALIVE" != "0" ];
then
#
cat <<EOF
ERROR ($(basename $basename $0)): Unable to connect to WhatsApp. Check your Internet connection"
EOF
exit 0
fi
}

registration_status () {
# Source settings file
[ -e $WHATSAPP_CREDENTIALS_CONFIG ] && . $WHATSAPP_CREDENTIALS_CONFIG
# Check if already registered
if [ "x$WHATSAPP_ENCRYPTED_PASSWORD" != "x" ] && [ "x$WHATSAPP_REGISTRATION_CODE" != "x" ];
then
clear
echo "
Hey there! It looks like you already registered.  If you want to re-register, please remove the following file and run this script again.

[$WHATSAPP_CREDENTIALS_CONFIG]

"
exit 0
fi
}

download_mcc_mnc_file () {
# Check if Internet connection is up
ping -c 1 8.8.8.8 > /dev/null 2>&1
INTERNET_ALIVE=$?
# Download MCC-MNC table file if not present and Internet is up
if [ ! -s $MCC_MNC_TABLE_FILE ] && [ "$INTERNET_ALIVE" = "0" ];
then
wget -c -O $MCC_MNC_TABLE_FILE $MCC_MNC_TABLE_FILE_URL 
fi
}

extract_country_info () {
# Country
clear
DEFAULT_COUNTRY=Uganda
read -p "Please enter the name of your country [$DEFAULT_COUNTRY]
" COUNTRY
# If empty set to default
if [ "x$COUNTRY" = "x" ];
then
COUNTRY=$DEFAULT_COUNTRY
fi
#
# Create raw file containing user's country, MCC, MNC, etc
grep -i $COUNTRY $MCC_MNC_TABLE_FILE > $COUNTRY_MCC_MNC_RAW_FILE
}

extract_network_info () {
# Network
clear
DEFAULT_NETWORK_NUMBER=1
read -p "Please select the mobile network in $COUNTRY that you will use for WhatsApp [$DEFAULT_NETWORK_NUMBER]

$(cut -d , -f8 $COUNTRY_MCC_MNC_RAW_FILE | cat -n )

" NETWORK_NUMBER
# If empty set to default
if [ "x$NETWORK_NUMBER" = "x" ];
then
NETWORK_NUMBER=$DEFAULT_NETWORK_NUMBER
fi
#
# Extract codes
# Network
NETWORK_NAME=$(awk "NR==$NETWORK_NUMBER" $COUNTRY_MCC_MNC_RAW_FILE | cut -d , -f8)
# Telephone Country Code
TELEPHONE_COUNTRY_CODE=$(awk "NR==$NETWORK_NUMBER" $COUNTRY_MCC_MNC_RAW_FILE | cut -d , -f7)
# MCC
MOBILE_COUNTRY_CODE=$(awk "NR==$NETWORK_NUMBER" $COUNTRY_MCC_MNC_RAW_FILE | cut -d , -f1)
# MNC
MOBILE_NETWORK_CODE=$(awk "NR==$NETWORK_NUMBER" $COUNTRY_MCC_MNC_RAW_FILE | cut -d , -f3)
}

registration_request_code () {
# Check if registered before
registration_status 

# Download mcc_mnc file
download_mcc_mnc_file

# Extract country information
extract_country_info

# Extract network information
extract_network_info

# Source settings file
. $WHATSAPP_CREDENTIALS_CONFIG
#
# Ask for receiving phone number
clear
DEFAULT_WHATSAPP_PHONE_NUMBER_RECIPIENT=$WHATSAPP_PHONE_NUMBER_RECIPIENT
read -p "Please enter the phone number you will use to receive WhatsApp messages (Include country code [$DEFAULT_WHATSAPP_PHONE_NUMBER_RECIPIENT])
" WHATSAPP_PHONE_NUMBER_RECIPIENT

# If empty set to default
if [ "x$WHATSAPP_PHONE_NUMBER_RECIPIENT" = "x" ];
then
WHATSAPP_PHONE_NUMBER_RECIPIENT=$DEFAULT_WHATSAPP_PHONE_NUMBER_RECIPIENT
fi
#
# Ask for sending phone number
clear
DEFAULT_WHATSAPP_PHONE_NUMBER_SENDER=$WHATSAPP_PHONE_NUMBER_SENDER
read -p "Please enter the phone number you will use to send WhatsApp messages (Include country code [$DEFAULT_WHATSAPP_PHONE_NUMBER_SENDER])
" WHATSAPP_PHONE_NUMBER_SENDER
# If empty set to default
if [ "x$WHATSAPP_PHONE_NUMBER_SENDER" = "x" ];
then
WHATSAPP_PHONE_NUMBER_SENDER=$DEFAULT_WHATSAPP_PHONE_NUMBER_SENDER
fi
#
#
# Print summary of info collected
clear
cat <<EOF
You have chosen the following mobile network as your carrier for WhatsApp:

===============================================================================

Phone Number used for receiving:	$WHATSAPP_PHONE_NUMBER_RECIPIENT
Phone Number used for sending:		$WHATSAPP_PHONE_NUMBER_SENDER

Mobile Network:				$NETWORK_NAME
Country:  				$COUNTRY
Country Telephone Code:  		$TELEPHONE_COUNTRY_CODE
Mobile Country Code (MCC):		$MOBILE_COUNTRY_CODE
Mobile Network Code (MNC):		$MOBILE_NETWORK_CODE

===============================================================================

EOF

# Write variables to whatsapp settings file i.e. Overwrite in case previous registrations existed
cat > $WHATSAPP_CREDENTIALS_CONFIG << EOF
# Generated using jambulatv-whatsapp on $(date)
WHATSAPP_SCRIPT=$WHATSAPP_SCRIPT
WHATSAPP_PHONE_NUMBER_SENDER=$WHATSAPP_PHONE_NUMBER_SENDER
WHATSAPP_PHONE_NUMBER_RECIPIENT=$WHATSAPP_PHONE_NUMBER_RECIPIENT
TELEPHONE_COUNTRY_CODE=$TELEPHONE_COUNTRY_CODE
MOBILE_COUNTRY_CODE=$MOBILE_COUNTRY_CODE
MOBILE_NETWORK_CODE=$MOBILE_NETWORK_CODE
EOF
# Request for PIN code using SMS
yowsup-cli registration -d -E android -m $MOBILE_COUNTRY_CODE -n $MOBILE_NETWORK_CODE -p $WHATSAPP_PHONE_NUMBER_SENDER -C $TELEPHONE_COUNTRY_CODE -r $WHATSAPP_REGISTRATION_METHOD
}

registration_confirm () {
# Source settings file
. $WHATSAPP_CREDENTIALS_CONFIG
#
# Check if request for PIN Code was made
if [ "x$WHATSAPP_REGISTRATION_CODE" = "x" ];
then
clear;
echo "Error:  Please register this device for whatsapp first before you can confirm"
exit 1
fi
# Confirm using sent PIN code
yowsup-cli registration -d -E android -p $WHATSAPP_PHONE_NUMBER_SENDER -C $TELEPHONE_COUNTRY_CODE -R $WHATSAPP_REGISTRATION_CODE
}

send_message () {
# Source settings file
. $WHATSAPP_CREDENTIALS_CONFIG

# Where applicable, use recipient phone number specified on command line
[ "x$2" = "x" ] || WHATSAPP_PHONE_NUMBER_RECIPIENT=$2

# Check if registration was done
if [ "x$WHATSAPP_ENCRYPTED_PASSWORD" = "x" ];
then
clear;
echo "Error:  Please register this device for whatsapp first before you can send"
exit 1
fi

# Send message to Whatsapp recipient
yowsup-cli demos -d -l "$WHATSAPP_PHONE_NUMBER_SENDER:$WHATSAPP_ENCRYPTED_PASSWORD" -s $WHATSAPP_PHONE_NUMBER_RECIPIENT "$WHATSAPP_TEXT_MESSAGE"
}

register_4_whatsapp  () {
registration_request_code
# Ask for PIN Code
clear
read -p "An SMS message with a PIN Code has been sent to your phone number $WHATSAPP_PHONE_NUMBER_SENDER.  Please Enter it here now:
" PIN_CODE
# Copy PIN code to settings file
cat >> $WHATSAPP_CREDENTIALS_CONFIG << EOF
WHATSAPP_REGISTRATION_CODE=$PIN_CODE
EOF
#
registration_confirm
#
# Ask for Password received
echo
echo ----------------------------------------------------------------
echo
read -p "Your password is shown above (the part that starts with 'pw:'), please Copy/Enter it here now:

" PASSWORD
# Copy password to settings file
cat >> $WHATSAPP_CREDENTIALS_CONFIG << EOF
WHATSAPP_ENCRYPTED_PASSWORD="$PASSWORD"
EOF
}



#################
#  MAIN SCRIPT  #
#################
usage

check_internet_access

case $WHATSAPP_METHOD_NAME in
[Rr][Ee][Gg][Ii][Ss][Tt][Ee][Rr])
register_4_whatsapp 
;;

[Ss][Ee][Nn][Dd][Mm][Ee][Ss][Ss][Aa][Gg][Ee])
send_message "$2" "$3"
;;

*)
echo "Usage:  ./`basename $0` [register]|[sendmessage]
"
exit 1
;;
esac
