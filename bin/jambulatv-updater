#!/bin/sh
# This script will check for new updates on line. If updates exist,
# download and install them
#
# Jambula Labs @copyright 2022-2023 All rights reserved

# Variables
PROJECT_NAME=JambulaTV
PROJECT_SYSTEM_CONF_DIR=/etc/$PROJECT_NAME
PROJECT_FUNCTIONS_FILE=$PROJECT_SYSTEM_CONF_DIR/functions

# Source install functions
. $PROJECT_FUNCTIONS_FILE

# Source Updates FTP server information i.e. variables
. $JAMBULATV_UPDATES_FTP_SERVER_INFO_FILE



###############
#  FUNCTIONS  #
###############

calc(){ 
awk "BEGIN{ print $* }" ;
}

logging_osd_notice_started () {
# Source notification strings
set_notifications
# Print notifciation to stdout and systemd journal 
print_notification "$JAMBULATV_UPDATES_IN_PROGRESS_NOTIFICATION_MESSAGE" text
# Print notification using OSD tool
print_notification "$JAMBULATV_UPDATES_IN_PROGRESS_NOTIFICATION_MESSAGE" osd
}

logging_osd_notice_failed () {
# Source notification strings
set_notifications
# Print notifciation to stdout and systemd journal 
print_notification "$JAMBULATV_UPDATES_FAILED_NOTIFICATION_MESSAGE" text
# Print notification using OSD tool
print_notification "$JAMBULATV_UPDATES_FAILED_NOTIFICATION_MESSAGE" osd
}

logging_osd_notice_completed () {
# Source notification strings
set_notifications
# Print notifciation to stdout and systemd journal 
print_notification "$JAMBULATV_UPDATES_COMPLETED_NOTIFICATION_MESSAGE" text
# Print notification using OSD tool
print_notification "$JAMBULATV_UPDATES_COMPLETED_NOTIFICATION_MESSAGE" osd
}

create_updates_directories () {
# Create updates directory if it does not exist
for DIRECTORY in $JAMBULATV_UPDATES_DOWNLOAD_DIR $JAMBULATV_UPDATES_TEMP_DIR $JAMBULATV_UPDATES_LOG_DIR
do
[[ -d $DIRECTORY ]] || sudo mkdir -p $DIRECTORY
# Give running user the access to updates directories
RUNNING_USER=$(whoami)
sudo chown -R $RUNNING_USER $DIRECTORY
done
}

query_and_set_versions () {
# Set current version file
JAMBULATV_UPDATE_CURRENT_VERSION_FILE=$(basename $JAMBULATV_FTP_SERVER_VERSION_FILE)
# Download latest update version info file
$WGET_CMD $WGET_OPTS --ftp-user=$JAMBULATV_FTP_USER --ftp-password=$JAMBULATV_FTP_PASS -O \
	$JAMBULATV_UPDATES_TEMP_DIR/$JAMBULATV_UPDATE_CURRENT_VERSION_FILE \
	ftp://$JAMBULATV_FTP_SERVER/$JAMBULATV_FTP_SERVER_VERSION_FILE > /dev/null 2>&1
#
# Log and exit updater if FTP login fails
if [[ "$?" = "0" ]];
then
# Set latest update revision
JAMBULATV_LATEST_UPDATE_VERSION=$(cat $JAMBULATV_UPDATES_TEMP_DIR/$JAMBULATV_UPDATE_CURRENT_VERSION_FILE)
# Lookup current version
JAMBULATV_INSTALLED_VERSION=$(grep -i Version $PROJECT_RELEASE_FILE | cut -d : -f2 | sed 's:v::g')
# See if some update versions were skipped
VERSION_DIFF=$(calc $JAMBULATV_LATEST_UPDATE_VERSION-$JAMBULATV_INSTALLED_VERSION)

else

# Log failure
echo "$(date +%Y-%m-%d) $(date +%T) > Failed to update $PROJECT_NAME because connection to FTP server failed" >> $JAMBULATV_UPDATES_LOG_DIR/errors 2>&1

# Alert
logging_osd_notice_failed

# Quit
exit 0
fi
}

download_updates () {
# Download tar.gz package
wget_download_file \
	$JAMBULATV_UPDATES_TEMP_DIR/update-$JAMBULATV_LATEST_UPDATE_VERSION.tar.gz \
	ftp://$JAMBULATV_FTP_SERVER/$JAMBULATV_FTP_SERVER_UPDATES_DIR/update-$JAMBULATV_LATEST_UPDATE_VERSION.tar.gz \
	--ftp-user=$JAMBULATV_FTP_USER --ftp-password=$JAMBULATV_FTP_PASS

# Download Checksum file 
wget_download_file \
	$JAMBULATV_UPDATES_TEMP_DIR/update-$JAMBULATV_LATEST_UPDATE_VERSION.checksum.txt \
	ftp://$JAMBULATV_FTP_SERVER/$JAMBULATV_FTP_SERVER_UPDATES_DIR/update-$JAMBULATV_LATEST_UPDATE_VERSION.checksum.txt \
	--ftp-user=$JAMBULATV_FTP_USER --ftp-password=$JAMBULATV_FTP_PASS

# Ensure files were downloaded 
if [[ ! -e $JAMBULATV_UPDATES_TEMP_DIR/update-$JAMBULATV_LATEST_UPDATE_VERSION.tar.gz ]] || [[ ! -e $JAMBULATV_UPDATES_TEMP_DIR/update-$JAMBULATV_LATEST_UPDATE_VERSION.checksum.txt ]];
then

# Log and quit if any of the above files is missing
echo "$(date +%Y-%m-%d) $(date +%T) > Failed to update $PROJECT_NAME because a required file was not downloaded from the FTP server" >> $JAMBULATV_UPDATES_LOG_DIR/errors 2>&1

# Alert
logging_osd_notice_failed

# Quit
exit 0
fi
}

checksum_compare () {
# Check sum of downloaded package file i.e. update-$VERSION.tar.gz
UPDATE_PACKAGE_CHECKSUM_NOW=`openssl dgst -md5 $JAMBULATV_UPDATES_TEMP_DIR/update-$JAMBULATV_LATEST_UPDATE_VERSION.tar.gz | cut -d "=" -f2 | sed -e 's/ //'`
UPDATE_PACKAGE_CHECKSUM_ORIG=$(cat $JAMBULATV_UPDATES_TEMP_DIR/update-$JAMBULATV_LATEST_UPDATE_VERSION.checksum.txt)
# Check checksums
if [[ "$UPDATE_PACKAGE_CHECKSUM_NOW" != "$UPDATE_PACKAGE_CHECKSUM_ORIG" ]];
then

# Log tampered with message
echo "$(date +%Y-%m-%d) $(date +%T) > Failed to update $PROJECT_NAME because the package 'update-$JAMBULATV_LATEST_UPDATE_VERSION.tar.gz' was tampared with" >> $JAMBULATV_UPDATES_LOG_DIR/errors

# Alert
logging_osd_notice_failed

# Quit
exit 0
fi
}

update_install () {
# untar package
tar zxvf $JAMBULATV_UPDATES_TEMP_DIR/update-$JAMBULATV_LATEST_UPDATE_VERSION.tar.gz -C $JAMBULATV_UPDATES_DOWNLOAD_DIR

# Run update install file
. $JAMBULATV_UPDATES_DOWNLOAD_DIR/update-$JAMBULATV_LATEST_UPDATE_VERSION/install.sh

# Update version based after last install
sudo sed -i "s/Version:v${JAMBULATV_INSTALLED_VERSION}/Version:v${JAMBULATV_LATEST_UPDATE_VERSION}/" $PROJECT_RELEASE_FILE
}

run_update () {
# Quit if product is upto update. Leave exit status at 0 so systemd service works
if [[ $(echo "$JAMBULATV_LATEST_UPDATE_VERSION <= $JAMBULATV_INSTALLED_VERSION" | bc -l) = 1 || "x$JAMBULATV_LATEST_UPDATE_VERSION" = "x" ]];
then
exit 0

# Continue, check difference in versions
elif [[ $(echo "$VERSION_DIFF > 0" | bc -l) = 1 ]];
then

# Log on OSD
logging_osd_notice_started

# Cycle through all available updates
while [[ $(echo "$JAMBULATV_INSTALLED_VERSION < $JAMBULATV_LATEST_UPDATE_VERSION" | bc -l) = 1 ]];
do

download_updates
checksum_compare
update_install

# Query current version
JAMBULATV_INSTALLED_VERSION=$(grep -i Version $PROJECT_RELEASE_FILE | cut -d : -f2 | sed 's:v::g')
done
fi

# Add completion message to log file
echo "$(date +%Y-%m-%d) $(date +%T) > $PROJECT_NAME update-$JAMBULATV_LATEST_UPDATE_VERSION.tar.gz was successfully installed" >> $JAMBULATV_UPDATES_LOG_DIR/messages

# Alert
logging_osd_notice_completed
}



#################
#  MAIN SCRIPT  #
#################

# Check Internet connectivity
check_internet_connectivity_ping 0
create_updates_directories
query_and_set_versions

# Run update
run_update
