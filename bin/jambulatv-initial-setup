#!/bin/sh
#
# Variables
QRCODE_PLAYER_CMD="/usr/bin/cvlc"
QRCODE_WIDTH=320
QRCODE_HEIGHT=240
QRCODE_PLAYER_OPTIONS="--daemon -I dummy --quiet --no-audio --width $QRCODE_WIDTH --height $QRCODE_HEIGHT --loop --no-video-title-show"

JAMBULATV_USER=jambula
JAMBULATV_USER_HOME_DIR=/JambulaTV
JAMBULTAV_CONFIG_DIR=/etc/JambulaTV
JAMBULTAV_SHARE_DIR=/usr/share/JambulaTV
JAMBULTAV_LOG_DIR=/var/log/JambulaTV

OSDRUNFILE=/tmp/osd_process_running

FLEXGET_CONFIG_DIR=$JAMBULTAV_CONFIG_DIR/flexget
ASTERISK_AGI_BIN_DIR=/var/lib/asterisk/agi-bin

QRCODE_DIR=$JAMBULTAV_SHARE_DIR/images/qrcodes
QRCODE_FILE=setup_url.png

SETUP_INTERNET_CONFIG_FILE=$JAMBULTAV_SHARE_DIR/html/setup/.internet-settings.txt
SETUP_MAC_ADDRESSES_FILE=$JAMBULTAV_SHARE_DIR/html/setup/.wifi_devices.txt
SETUP_COMPLETED_FILE=$JAMBULTAV_SHARE_DIR/html/setup/.initial-setup-completed

SETUP_LAN_DEVICE=$(ip link | grep '2: ' | cut -d : -f2 | head -1 | sed -e 's/ //g')
SETUP_3_4G_DONGLE_FILE=$JAMBULTAV_CONFIG_DIR/internet-mobile-usb.cfg
SETUP_MIFI_ROUTER_FILE=$JAMBULTAV_CONFIG_DIR/internet-mobile-wifi.cfg
SETUP_WIFI_DEVICES_FILE=$JAMBULTAV_CONFIG_DIR/my-wifi-devices.cfg

EMAIL_CREDENTIALS_CONFIG=$JAMBULTAV_CONFIG_DIR/messaging-email.cfg
EMAIL_GMAIL_CONFIG=$JAMBULTAV_CONFIG_DIR/email-gmail.cfg
TELEGRAM_CREDENTIALS_CONFIG=$JAMBULTAV_CONFIG_DIR/messaging-telegram.cfg
WHATSAPP_CREDENTIALS_CONFIG=$JAMBULTAV_CONFIG_DIR/messaging-whatsapp.cfg
WHATSAPP_SCRIPT=/usr/bin/jambulatv-whatsapp

SETUP_LAN_SYSCONFIG_FILE=/etc/sysconfig/network-scripts/ifcfg-${SETUP_LAN_DEVICE}

JAMBULATV_SSID=$(grep ^ssid= /etc/hostapd/hostapd.conf | cut -d '=' -f2)

QRCODE_OSD_MSG="Please connect to this ($JAMBULATV_SSID) Hotspot using the credentials you received at time of purchase.  Then, use a Barcode scanner app on your phone to scan this code.  This QR code will only be removed once setup has been completed."

ICINGA2_JAMBULATV_HOSTS_FILE=/etc/icinga2/conf.d/JambulaTV/hosts.conf

JAMBULATV_SETUP_DB_NAME=jambulatv
JAMBULATV_SETUP_DB_USER=jambula_setup
JAMBULATV_SETUP_DB_PASS=eng8Na
JAMBULATV_SETUP_DB_TABLE=setup



###############
#  FUNCTIONS  #
###############

check_if_setup_completed () {
# Quit if setup completed
[ -e $SETUP_COMPLETED_FILE ] && exit 0
}

clear_logfile () {
# Remove nginx setup log file
sudo rm -f $JAMBULTAV_LOG_DIR/setup-nginx.log
# Restart nginx
sudo systemctl restart nginx.service
}

remove_previous_qrcode () {
# Kill existing QR Code/VLC process
QRCODE_VLC_PID=$(ps auxw | grep vlc | grep qrcodes/setup_url.png | awk {'print $2'})
[ "x$QRCODE_VLC_PID" != "x" ] && kill $QRCODE_VLC_PID
}

display_qrcode () {
# Display QR Code since setup not yet done
$QRCODE_PLAYER_CMD $QRCODE_PLAYER_OPTIONS $QRCODE_DIR/$QRCODE_FILE 
}

display_osd_message () {
# Check to see if setup web server has been accessed, so we can display OSD
grep form_01.php $JAMBULTAV_LOG_DIR/setup-nginx.log > /dev/null 2>&1
SERVER_ACCESSED=$?
while [ "$SERVER_ACCESSED" != "0" ];
do
# Remove OSD Message
[ -e $OSDRUNFILE ] && rm -f $OSDRUNFILE
# Display OSD Message
jambulatv-osd -m "$QRCODE_OSD_MSG"
# Wait
sleep 15
# Check again
grep form_01.php $JAMBULTAV_LOG_DIR/setup-nginx.log > /dev/null 2>&1
SERVER_ACCESSED=$?
done
# Remove OSD Message
rm -f $OSDRUNFILE
}

configure_internet_connection () {
# Check for Internet settings file
while [ ! -e $SETUP_INTERNET_CONFIG_FILE ];
do
# Wait
sleep 1
done
# Source variables file
. $SETUP_INTERNET_CONFIG_FILE
# Configure internet based on device type selected
case $TYPE in
3_4g_dongle)
sudo chown $JAMBULATV_USER $SETUP_3_4G_DONGLE_FILE
cat > $SETUP_3_4G_DONGLE_FILE <<EOF
TYPE='3_4g_dongle'
ISP_NAME=$ISP_NAME
USERNAME=$USERNAME
PASSWORD=$PASSWORD
APN=$APN
EOF
# Trigger 3/4G Internet connect
sudo jambulatv-ppp-dialer $ISP_NAME $USERNAME $PASSWORD 1 &
;;
mifi_router)
sudo chown $JAMBULATV_USER $SETUP_MIFI_ROUTER_FILE
cat > $SETUP_MIFI_ROUTER_FILE <<EOF
ISP_NAME=$ISP_NAME
SSID="$WIFI_SSID"
SECURITY_KEY="$WIFI_SECURITY_KEY"
EOF
# Trigger MiFi Internet connect
sudo jambulatv-connect-2-wifi-ap UP &
;;
lan_dhcp)
sudo chown $JAMBULATV_USER $SETUP_LAN_SYSCONFIG_FILE
cat > $SETUP_LAN_SYSCONFIG_FILE <<EOF
# IP/DNS settings for ${SETUP_LAN_DEVICE}
DEVICE="${SETUP_LAN_DEVICE}"
TYPE="Ethernet"
BOOTPROTO="dhcp"
ONBOOT="yes"
NM_CONTROLLED="no"
EOF
# Restart network
sudo systemctl restart network.service
;;
lan_static)
sudo chown $JAMBULATV_USER $SETUP_LAN_SYSCONFIG_FILE
cat > $SETUP_LAN_SYSCONFIG_FILE <<EOF
# IP/DNS settings for ${SETUP_LAN_DEVICE}
DEVICE="${SETUP_LAN_DEVICE}"
TYPE="Ethernet"
BOOTPROTO="static"
ONBOOT="yes"
NM_CONTROLLED="no"
IPADDR0="$NETWORK_IP_ADDRESS"
PREFIX0="24"
GATEWAY="$NETWORK_GATEWAY_ADDRESS"
DNS1="$NETWORK_DNS_1"
DNS2="$NETWORK_DNS_2"
DNS3=8.8.4.4
DNS4=208.67.222.222
EOF
# Restart network
sudo systemctl restart network.service
;;
esac
# Remove Internet configure file
sudo rm -f $SETUP_INTERNET_CONFIG_FILE
}

configure_wifi_mac_addresses () {
# MAC Addresses
while [ ! -e $SETUP_MAC_ADDRESSES_FILE ];
do
# Wait
sleep 1
done
# Change permissions so we can write to My WiFi devices file
sudo chown $JAMBULATV_USER $SETUP_WIFI_DEVICES_FILE
# Copy MAC Addresses to JambulaTV WiFi devices file
cat $SETUP_MAC_ADDRESSES_FILE | while read LINE 
do
NICKNAME=$(echo $LINE | cut -d ',' -f1)
MAC_DASHED=$(echo $LINE | cut -d ',' -f2 | sed 's/:/-/g')
MAC_DOTTED=$(echo $LINE | cut -d ',' -f2 )
if [ "x$MAC_DASHED" != "x" ];
then
# Add to My-WiFi devices file
echo "$MAC_DASHED | $NICKNAME | no" >> $SETUP_WIFI_DEVICES_FILE
#
# Change permissions so we can write to icinga2 hosts file
sudo chown $JAMBULATV_USER $ICINGA2_JAMBULATV_HOSTS_FILE
# Add to icinga2 hosts file
cat >> $ICINGA2_JAMBULATV_HOSTS_FILE <<EOF

/** 
* Detect presence of $NICKNAME
*/
object Host "$NICKNAME" {
  import "jambula-01-wifi-device"
  vars.macaddress="$MAC_DOTTED"
}
EOF
# Restart icinga2 service
sudo systemctl restart icinga2.service
# 
else
break
fi
done
# Remove MAC set up file
sudo rm -f $SETUP_MAC_ADDRESSES_FILE
}

remove_current_qrcode () {
# Wait for setup to complete successfully
while [ ! -e $SETUP_COMPLETED_FILE ];
do
sleep 1
echo "Waiting for Setup to complete"
done
# Remove QR Code since setup completed
QRCODE_PID=$(ps auxw | grep $QRCODE_FILE | awk {'print $2'})
kill -15 $QRCODE_PID || kill -9 $QRCODE_PID
}

query_mysql_db () {
mysql -s -u ${JAMBULATV_SETUP_DB_USER} -p${JAMBULATV_SETUP_DB_PASS} << EOF
USE ${JAMBULATV_SETUP_DB_NAME};
SELECT $@ FROM ${JAMBULATV_SETUP_DB_TABLE} WHERE id = (SELECT MAX(id) FROM ${JAMBULATV_SETUP_DB_TABLE});
EOF
}

extract_setup_variables () {
# Set All variables
CONTACT_NAME=$(query_mysql_db contact_name)
CONTACT_EMAIL=$(query_mysql_db contact_email)
CONTACT_PHONE=$(query_mysql_db contact_phone)
CONTACT_BIRTHDAY=$(query_mysql_db contact_birthday)
CONTACT_ADDRESS1=$(query_mysql_db contact_address1)
CONTACT_ADDRESS2=$(query_mysql_db contact_address2)
CONTACT_CITY=$(query_mysql_db contact_city)
CONTACT_COUNTRY=$(query_mysql_db contact_country)
ISP_NAME=$(query_mysql_db isp_name)
INTERNET_DEVICE=$(query_mysql_db internet_device)
WIFI_NICKNAME_1=$(query_mysql_db wifi_nickname_1)
WIFI_MAC_1=$(query_mysql_db wifi_mac_1)
WIFI_NICKNAME_2=$(query_mysql_db wifi_nickname_2)
WIFI_MAC_2=$(query_mysql_db wifi_mac_2)
WIFI_NICKNAME_3=$(query_mysql_db wifi_nickname_3)
WIFI_MAC_3=$(query_mysql_db wifi_mac_3)
WIFI_NICKNAME_4=$(query_mysql_db wifi_nickname_4)
WIFI_MAC_4=$(query_mysql_db wifi_mac_4)
WIFI_NICKNAME_5=$(query_mysql_db wifi_nickname_5)
WIFI_MAC_5=$(query_mysql_db wifi_mac_5)
NETWORK_APN=$(query_mysql_db network_apn)
MIFI_SSID=$(query_mysql_db mifi_ssid)
MIFI_PASS=$(query_mysql_db mifi_pass)
LAN_IP_ADDR=$(query_mysql_db lan_ip_addr)
LAN_IP_GATE=$(query_mysql_db lan_ip_gate)
LAN_DNS_1=$(query_mysql_db lan_dns_1)
LAN_DNS_2=$(query_mysql_db lan_dns_2)
SCHEDULE_TVSERIES=$(query_mysql_db schedule_tvseries)
SCHEDULE_PODCASTS=$(query_mysql_db schedule_podcasts)
SCHEDULE_MOVIES=$(query_mysql_db schedule_movies)
TRAKTV_USERNAME=$(query_mysql_db traktv_username)
TRAKTV_WATCHLIST=$(query_mysql_db traktv_watchlist)
TELEGRAM_BOT_ID=$(query_mysql_db telegram_bot_id)
TELEGRAM_CHAT_ID=$(query_mysql_db telegram_chat_id)
TELEGRAM_USERNAME=$(query_mysql_db telegram_username)
WHATSAPP_NO_RECIPIENT=$(query_mysql_db whatsapp_no_recipient)
WHATSAPP_NO_SENDER=$(query_mysql_db whatsapp_no_sender)
NOTIFICATION_EMAIL_ADDRESS=$(query_mysql_db notification_email_address)
GMAIL_ADDRESS=$(query_mysql_db gmail_address)
GMAIL_PASSWORD=$(query_mysql_db gmail_password)
}

gmail_smtp_setup () {
# Add usernames, passwords credentials to Gmail config
cat >> $EMAIL_GMAIL_CONFIG << EOF
# GMail username and password
EMAIL_SMTP_AUTH_USERNAME="$GMAIL_ADDRESS"
EMAIL_SMTP_AUTH_ENCRYPT="$(echo $GMAIL_PASSWORD | openssl enc -base64 -e)"
EOF
}

email_messaging_setup () {
cat > $EMAIL_CREDENTIALS_CONFIG << EOF
EMAIL_TO_ADDRESS="$NOTIFICATION_EMAIL_ADDRESS"
EMAIL_CC_ADDRESS=""
EOF
}

telegram_messaging_setup () {
cat >> $TELEGRAM_CREDENTIALS_CONFIG << EOF
TELEGRAM_API_BOT="$TELEGRAM_BOT_ID"
TELEGRAM_CHAT_ID="$TELEGRAM_CHAT_ID"
TELEGRAM_USERNAME="$TELEGRAM_USERNAME"
EOF
}

whatsapp_messaging_setup () {
cat > $WHATSAPP_CREDENTIALS_CONFIG << EOF
# TIP: Run the script $WHATSAPP_SCRIPT to generate the rest of whatsapp settings
WHATSAPP_SCRIPT=$WHATSAPP_SCRIPT
WHATSAPP_PHONE_NUMBER_SENDER=$WHATSAPP_NO_SENDER
WHATSAPP_PHONE_NUMBER_RECIPIENT=$WHATSAPP_NO_RECIPIENT
EOF
}

messaging_services_setup () {
# Extract variables from mysql
extract_setup_variables
# GMail smtp setup
gmail_smtp_setup
# Regular email
email_messaging_setup
# Telegram
telegram_messaging_setup
# WhatsApp
whatsapp_messaging_setup
}

flexget_secrets_setup () {
# Extract variables from mysql
extract_setup_variables
# Split into Hour, Minute
FLEXGET_SCHEDULE_TVSHOWS_HR=$(echo $SCHEDULE_TVSERIES | cut -d : -f1 | sed 's:^0::g')
FLEXGET_SCHEDULE_TVSHOWS_MIN=$(echo $SCHEDULE_TVSERIES | cut -d : -f2 | sed 's:^0::g')
FLEXGET_SCHEDULE_PODCASTS_HR=$(echo $SCHEDULE_PODCASTS | cut -d : -f1 | sed 's:^0::g')
FLEXGET_SCHEDULE_PODCASTS_MIN=$(echo $SCHEDULE_PODCASTS | cut -d : -f2 | sed 's:^0::g')
FLEXGET_SCHEDULE_MOVIES_HR=$(echo $SCHEDULE_MOVIES | cut -d : -f1 | sed 's:^0::g')
FLEXGET_SCHEDULE_MOVIES_MIN=$(echo $SCHEDULE_MOVIES | cut -d : -f2 | sed 's:^0::g')
#
# Copy original flexget secrets file
cp -v $FLEXGET_CONFIG_DIR/variables.yml $FLEXGET_CONFIG_DIR/variables.yml.b4.setup
# Replace variables
cat $FLEXGET_CONFIG_DIR/variables.yml.b4.setup | \
   sed -e "s:EMAIL_TO_ADDRESS:$NOTIFICATION_EMAIL_ADDRESS:g" | \
   sed -e "s:TRAKT_USERNAME:$TRAKTV_USERNAME:g" | \
   sed -e "s:TRAKT_WATCHLIST:$TRAKTV_WATCHLIST:g" | \
   sed -e "s:GOOGLE_SERVICES_USERNAME:$GMAIL_ADDRESS:g" | \
   sed -e "s:GOOGLE_SERVICES_PASSWORD:$GMAIL_PASSWORD:g" | \
   sed -e "s/TELEGRAM_API_BOT/$TELEGRAM_BOT_ID/g" | \
   sed -e "s:TELEGRAM_USERNAME:$TELEGRAM_USERNAME:g" | \
   sed -e "s:FLEXGET_SCHEDULE_TVSHOWS_HR:$FLEXGET_SCHEDULE_TVSHOWS_HR:g" | \
   sed -e "s:FLEXGET_SCHEDULE_TVSHOWS_MIN:$FLEXGET_SCHEDULE_TVSHOWS_MIN:g" | \
   sed -e "s:FLEXGET_SCHEDULE_PODCASTS_HR:$FLEXGET_SCHEDULE_PODCASTS_HR:g" | \
   sed -e "s:FLEXGET_SCHEDULE_PODCASTS_MIN:$FLEXGET_SCHEDULE_PODCASTS_MIN:g" | \
   sed -e "s:FLEXGET_SCHEDULE_MOVIES_HR:$FLEXGET_SCHEDULE_MOVIES_HR:g" | \
   sed -e "s:FLEXGET_SCHEDULE_MOVIES_MIN:$FLEXGET_SCHEDULE_MOVIES_MIN:g" \
	> $FLEXGET_CONFIG_DIR/variables.yml
}

rtorrent_event_setup () {
# Extract variables from mysql
extract_setup_variables
# rTorrent event.download.finished notify_via_email address
sed -i "s:RTORRENT_NOTIFICATION_EMAIL:$NOTIFICATION_EMAIL_ADDRESS:g" $JAMBULATV_USER_HOME_DIR/.rtorrent.rc
}

asterisk_google_xmpp_setup() {
# Extract variables from mysql
extract_setup_variables
# Backup original xmpp_providers.sh script
cp -v $ASTERISK_AGI_BIN_DIR/include_xmpp_providers.sh $ASTERISK_AGI_BIN_DIR/include_xmpp_providers.sh.b4.setup
# Add google credentials
cat $ASTERISK_AGI_BIN_DIR/include_xmpp_providers.sh.b4.setup | \
	sed -e "s:GOOGLE_SERVICES_USERNAME:$GMAIL_ADDRESS:g" | \
	sed -e "s:GOOGLE_SERVICES_PASSWORD:$GMAIL_PASSWORD:g" \
		> $ASTERISK_AGI_BIN_DIR/include_xmpp_providers.sh
}

create_video_music_db () {
sudo jambulatv-library create
}



#################
#  MAIN SCRIPT  #
#################
check_if_setup_completed
clear_logfile
remove_previous_qrcode
display_qrcode
display_osd_message

configure_internet_connection
configure_wifi_mac_addresses
remove_current_qrcode

messaging_services_setup
flexget_secrets_setup
rtorrent_event_setup
asterisk_google_xmpp_setup

create_video_music_db
