#!/bin/sh
# This is the text-to-speech tool used for JambulaTV services.
# Use it to read time, weather, etc
# Jambula Labs @copyright 2017-2018 All rights reserved

# Variables
# API(s)
# 0=pico(No Internet) 1=acapella 2=watson 3=google 
API=1

TTS_PLAY_CMD="/usr/bin/ffplay"
TTS_QUIT_CMD=""
TTS_PLAY_CMD_OPTS="-loglevel quiet -vn -nodisp -autoexit"

TTS_OUTPUT_FILE=/tmp/tts_output.wav
TTS_ACTION=$1

PING_TIMEOUT=2 #9
PING_IP_ADDRESS=8.8.8.8

JAMBULATV_SOUNDS_DIR="/usr/share/JambulaTV/sounds"
SOUND_EFFECTS_WAITING="$JAMBULATV_SOUNDS_DIR/text2speech/beep-waiting-01.wav"
SOUND_EFFECTS_TEMP_SCRIPT=/tmp/sound_effects.sh
SOUND_EFFECTS_TEMP_SCRIPT_PID=$(ps auxw | grep $SOUND_EFFECTS_WAITING | awk {'print $2'})



###############
#  FUNCTIONS  #
###############
usage () {
# TTS Action
if [ "x$TTS_ACTION" = "x" ];
then
clear
echo "Usage:  ./`basename $0` [time|weather|custom]
"
exit 1
fi
}

check_internet_access () {
# Check for internet connectivity - IMPORTANT: Don't use DNS to ping use actual IP address
ping -w $PING_TIMEOUT $PING_IP_ADDRESS > /dev/null 2>&1
INTERNET_ALIVE=$?
export INTERNET_ALIVE
#
# Add bogus sound effects file to stop beep if there's No Internet 
[ "$INTERNET_ALIVE" = "0" ] || touch $TTS_OUTPUT_FILE
}

tts_waiting_sound_effects () {
# Add bogus sound effects file to stop beep if No action specified
[ "x$TTS_ACTION" = "x" ] && touch $TTS_OUTPUT_FILE
cat > $SOUND_EFFECTS_TEMP_SCRIPT <<EOF
#!/bin/sh
while [ ! -e $TTS_OUTPUT_FILE ];
do
/usr/bin/mplayer -novideo $SOUND_EFFECTS_WAITING
sleep 2
done
EOF
# Make script executables
chmod 755 $SOUND_EFFECTS_TEMP_SCRIPT
# Run script
at -f $SOUND_EFFECTS_TEMP_SCRIPT now
}

text2speech_pico () {
# Run pico2wave command
/usr/bin/pico2wave --lang=en-US --wave=$TTS_OUTPUT_FILE "$@"
}

text2speech_acapela () {
/usr/bin/curl -s $(/usr/bin/curl -sS -m 60 -X POST -A "Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)" \
	-d MyLanguages=sonid10 \
	-d MySelectedVoice=Sharon \
	-d MyTextForTTS="$(echo "$@" | sed -e "s: :%20:g" | sed -e "s:'::g")" \
	-d t=1 \
	-d SendToVaaS="" "http://www.acapela-group.com/demo-tts/DemoHTML5Form_V2.php" | \
		grep -o "http.*mp3") > $TTS_OUTPUT_FILE
}

text2speech_watson () {
/usr/bin/curl -sS -m 60 -X POST -A "Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)" \
	-u "6aa3bbba-a513-42fe-954a-f6c23b7a5f8e":"DNAjnRVn5btV" \
	-H "Content-Type: application/json" \
	-H "Accept: audio/wav" \
	-d "{\"text\":\"$@\"}" \
	-o $TTS_OUTPUT_FILE \
"https://stream.watsonplatform.net/text-to-speech/api/v1/synthesize?voice=en-US_AllisonVoice"
}

text2speech_google () {
/usr/bin/curl -sS -m 60 -A "Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)" -o $TTS_OUTPUT_FILE "http://translate.google.com/translate_tts?ie=UTF-8&client=tw-ob&q="$(echo "$@" | sed -e "s: :%20:g" | sed -e "s:'::g")"&tl=En-us"
}

query_text2speech_engine () {
# Use PicoTTS or local TTS service if there is NO Internet 
if [ "$INTERNET_ALIVE" != "0" ];
then
text2speech_pico "$TTS_TEXT_MESSAGE"

else

# Use Internet TTS services
case $API in
1)
# TTS using acapela
text2speech_acapela "$TTS_TEXT_MESSAGE"
;;

2)
# TTS using watson
text2speech_watson "$TTS_TEXT_MESSAGE"
;;

3)
# TTS using google
text2speech_google "$TTS_TEXT_MESSAGE"
;;

*)
;;
esac

fi
}


# --------------
# Tell-the-Time
# --------------
say_time() {
# Get current hour and min
TIME_HOUR=$(date +%-I)
TIME_MIN=$(date +%M)

# Manipulate time format depending on availability of Internet
if [ "$INTERNET_ALIVE" = "0" ];
then
# Time AM/PM format when using cloud TTS service e.g. google
TIME_AMPM="$(date +%p | cut -c 1)+$(date +%p | cut -c 2)"
else
# Time AM/PM format when using - Use local TTS service i.e. PicoTTS
TIME_AMPM="$(date +%p | cut -c 1) $(date +%p | cut -c 2)"
fi

# TTS text message
TTS_TEXT_MESSAGE="The time now is $TIME_HOUR $TIME_MIN $TIME_AMPM"

# convert text to audio speech
query_text2speech_engine
}

# ----------------
# Tell-the-Weather
# ----------------
say_weather() {
# Source weather functions
. /usr/bin/jambulatv-weather-api

# TTS text message
TTS_TEXT_MESSAGE="In $CITY, the current temperature is $CURRENT_TEMPERATURE degrees celcius with $CURRENT_SUMMARY conditions. $TIME_OF_DAY_CALL,  expect  $HOURLY_SUMMARY with a temperature of $HOURLY_TEMPERATURE degrees.  Theres a $HOURLY_PRECIP_PROBABILITY percent chance of rain with $HOURLY_WIND_DIRECTION winds blowing at $HOURLY_WIND_SPEED miles per hour"

# convert text to audio speech
query_text2speech_engine
}

# -----------------------
# Tell-the-Custom-message
# -----------------------
say_custom() {
TTS_TEXT_MESSAGE="$@"
query_text2speech_engine
}



#################
#  MAIN SCRIPT  #
#################

# Remove previously saved TTS audio
rm -f $TTS_OUTPUT_FILE

# Add sound effects while waiting script
tts_waiting_sound_effects

# Check for Internet connectivity
check_internet_access

# Run selected action
case $TTS_ACTION in 
time)
say_time
;;
weather)
say_weather
;;
custom)
say_custom "$2"
;;
*)
echo
usage
;;
esac 


# Kill waiting sound effects 
[ "x$SOUND_EFFECTS_TEMP_SCRIPT_PID" = "x" ] || kill $SOUND_EFFECTS_TEMP_SCRIPT_PID

# Play saved TTS audio
$TTS_PLAY_CMD $TTS_PLAY_CMD_OPTS $TTS_OUTPUT_FILE
