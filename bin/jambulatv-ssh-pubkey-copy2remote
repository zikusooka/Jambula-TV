#!/bin/sh
# Use this script to set up SSH keys at remote server (jlabs)
# Variables
TIMEOUT=60
PING_COUNT=4
PING_TIMEOUT=5



#############
# Functions #
#############
ping_host () {
if [ -x /usr/sbin/fping ];
then
fping -q -C $PING_COUNT $REMOTE_SSH_SERVER > /dev/null 2>&1
else
ping -c $PING_COUNT -W $PING_TIMEOUT $REMOTE_SSH_SERVER > /dev/null 2>&1
fi
STATUS=$?
}



#################
#  MAIN SCRIPT  #
#################
# Remote SSH Server
clear
DEFAULT_REMOTE_SSH_SERVER=192.81.220.150
read -p "Enter the remote SSH server [$DEFAULT_REMOTE_SSH_SERVER]
" REMOTE_SSH_SERVER
# If empty set to default
if [ "x$REMOTE_SSH_SERVER" = "x" ];
then
REMOTE_SSH_SERVER=$DEFAULT_REMOTE_SSH_SERVER
fi


# Check to see if remote server is accessible
ping_host
while [ "$STATUS" != "0" ];
do
ping_host
clear
echo "ERROR: Unable to contact the remote server: [$REMOTE_SSH_SERVER]
Please check your Internet connectivity.
"
exit 1
done

# Remote SSH User
clear
DEFAULT_REMOTE_SSH_SERVER_USER=root
read -p "Enter the username for connecting to remote SSH server [$DEFAULT_REMOTE_SSH_SERVER_USER]
" REMOTE_SSH_SERVER_USER
# If empty set to default
if [ "x$REMOTE_SSH_SERVER_USER" = "x" ];
then
REMOTE_SSH_SERVER_USER=$DEFAULT_REMOTE_SSH_SERVER_USER
fi

# Remote SSH Pass
clear
DEFAULT_REMOTE_SSH_USER_PASS=XXXXXXXX
read -sp "Enter $REMOTE_SSH_SERVER_USER's password for connecting to remote SSH server [$DEFAULT_REMOTE_SSH_USER_PASS]
" REMOTE_SSH_USER_PASS
# If empty set to default
if [ "x$REMOTE_SSH_USER_PASS" = "x" ];
then
REMOTE_SSH_USER_PASS=$DEFAULT_REMOTE_SSH_USER_PASS
fi

# Remote SSH Port
clear
DEFAULT_REMOTE_SSH_SERVER_PORT=222
read -p "Enter the remote SSH server Port[$DEFAULT_REMOTE_SSH_SERVER_PORT]
" REMOTE_SSH_SERVER_PORT
# If empty set to default
if [ "x$REMOTE_SSH_SERVER_PORT" = "x" ];
then
REMOTE_SSH_SERVER_PORT=$DEFAULT_REMOTE_SSH_SERVER_PORT
fi



#################
#  MAIN SCRIPT  #
#################
# Check for public keys i.e. id_rsa.pub
[ -e $HOME/.ssh/id_rsa.pub ] || ssh-keygen -t rsa -f $HOME/.ssh/id_rsa -N ""

# Copy Keys over
clear
# Script to copy public ssh keys to remote server for automatic logon
# --------------------------------------------------------------------------
expect -c "set timeout $TIMEOUT; spawn ssh-copy-id \"-p $REMOTE_SSH_SERVER_PORT $REMOTE_SSH_SERVER_USER@$REMOTE_SSH_SERVER\" ; expect ? ; send yes\n ; expect assword ; send $REMOTE_SSH_USER_PASS\n ; interact"


# Confirm 
echo
echo
echo
echo "Checking to see if we can login using public key authentication"
echo "-----"
ssh -p $REMOTE_SSH_SERVER_PORT $REMOTE_SSH_SERVER_USER@$REMOTE_SSH_SERVER "/bin/echo OK"
echo
echo
echo "Checking to see if GatewayPorts is set on $REMOTE_SSH_SERVER"
echo "-----"
ssh -p $REMOTE_SSH_SERVER_PORT $REMOTE_SSH_SERVER_USER@$REMOTE_SSH_SERVER "/bin/cat /etc/ssh/sshd_config | grep 'GatewayPorts yes'"
echo 
