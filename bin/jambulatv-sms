#!/bin/sh
# Send SMS message using any of the following methods:
# 1. Mifi Router
# 2. 3g Modem e.g. chan_dongle
# 3. GSM network gateway - WebSMS
# 4. Chan_mobile 
# 5. Kannel
#
# Copyright (C) 2018-2019 Jambula Labs

PROJECT_NAME=JambulaTV
PROJECT_SYSTEM_CONF_DIR=/etc/$PROJECT_NAME
PROJECT_FUNCTIONS_FILE=$PROJECT_SYSTEM_CONF_DIR/functions

# Source install functions
. $PROJECT_FUNCTIONS_FILE


# Variables
# ----------
# Possible SMS sending methods
SETUP_INTERNET_DEVICE=$(query_mysql_db internet_device)
MOBILE_3G_MODEM_NODE=ttyUSB-3G-Mobile

# Message
SMS_MESSAGE="$1"

# Recipient number
SMS_PHONE_NUMBER=$2
[[ "x$SMS_PHONE_NUMBER" = "x" ]] && \
SMS_PHONE_NUMBER=$(query_mysql_db contact_phone)



###############
#  FUNCTIONS  #
###############

# Usage
usage () {
if [[ "x$SMS_MESSAGE" = "x" ]];
then
cat <<EOT
Usage: $(basename $0) [SMS_MESSAGE] [SMS_PHONE_NUMBER]
EOT
# Quit
exit 1
fi
}

set_sms_send_method () {
# MiFi router
# -----------
if [[ "x$SMS_METHOD" = "x" && "$SETUP_INTERNET_DEVICE" = "mifi_router" ]];
then

# Check if MiFi router is alive
MIFI_WIFI_IP_ADDRESS=$(query_mysql_db mifi_ip_address)
ping -c 1 -W 1 $MIFI_WIFI_IP_ADDRESS > /dev/null 2>&1
MIFI_REACHEABLE=$?
if [[ "$MIFI_REACHEABLE" = "0" ]];
then
SMS_METHOD=mifi_router #asterisk_chan_dongle
# source mifi router login credentials
MIFI_WIFI_ADMIN_USER=$(query_mysql_db mifi_admin_user)
MIFI_WIFI_ADMIN_PASS=$(query_mysql_db mifi_admin_pass)
fi

fi

# 3G modem 
# --------
if [[ "x$SMS_METHOD" = "x" && -c /dev/$MOBILE_3G_MODEM_NODE ]];
then
SMS_METHOD=3g_modem
fi
}

send_sms_using_chan_dongle () {
asterisk -rx "dongle sms dongle0 $SMS_PHONE_NUMBER \"$SMS_MESSAGE\""
}

send_sms_using_mifi () {
$MIFI_QUERY_TOOL $MIFI_WIFI_IP_ADDRESS $MIFI_WIFI_ADMIN_USER $MIFI_WIFI_ADMIN_PASS sms_send $SMS_PHONE_NUMBER "$SMS_MESSAGE"
}



#################
#  MAIN SCRIPT  #
#################

usage

set_sms_send_method

case $SMS_METHOD in

mifi_router)
send_sms_using_mifi
;;

3g_modem)
send_sms_using_chan_dongle
;;

*)
# Source notification strings
set_notifications
# Print notifciation to stdout and systemd journal 
print_notification "$SMS_UNKNOWN_SEND_METHOD_MESSAGE" text
# Print notification using OSD tool
print_notification "$SMS_UNKNOWN_SEND_METHOD_MESSAGE" osd
exit 1
;;
esac
