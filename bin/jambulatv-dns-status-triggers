#!/bin/sh

# Variables
NETWORK_ETHERNET_DEVICE=$(ip link | grep '2: ' | cut -d : -f2 | head -1 | sed -e 's/ //g')
NETWORK_IP_ADDRESS=$(ip -4 addr show dev $NETWORK_ETHERNET_DEVICE | grep brd | awk {'print $2'} | cut -d / -f1)
COOVA_SERVER_IP=`grep 'HS_UAMLISTEN=' /etc/chilli/config | cut -d = -f2 | awk {'print $1'}`
COOVA_CONFIG_DIR=/etc/chilli
COOVA_CONFIG_FILE=$COOVA_CONFIG_DIR/config
COOVA_MAIN_CONFIG_FILE=$COOVA_CONFIG_DIR/main.conf
CHRONYC_CMD=/usr/bin/chronyc
CHRONY_KEYS_FILE=/etc/chrony.keys
CHRONYC_PASSWD=`awk {'print $2'} $CHRONY_KEYS_FILE`

BEEP_SOUNDS_SCRIPT=/usr/bin/jambulatv-sounds

DEBUG_FILE=/root/host_status.log
DNS_STATUS=$1
LAST_DNS_STATUS=$2



###################################################################
# Run commands/processes depending on availability of DNS servers #
###################################################################

# DNS on: Internet is UP
# -----------------------
if [ "$DNS_STATUS" = "UP" ] && [ "$LAST_DNS_STATUS" = "DOWN" ];
then
# Debug
echo "$(date): New State = Up | Old State = Down" >> $DEBUG_FILE  
#
# Remove dnsmasq entries for local resolution
[ ! -e /etc/dnsmasq.d/dns_off.conf ] || rm -f /etc/dnsmasq.d/dns_off.conf
# Restart dnsmasq.service
systemctl restart dnsmasq.service

# Since Internet is now up - Do other stuff that requires connectivity
# --------------------------------------------------------------------
# Take chrony on-line: Update clock time
$CHRONYC_CMD <<EOF
password $CHRONYC_PASSWD
online
EOF

# Configure CoovaChilli DomainDNSlocal
# ------------------------------------
# Get previous domains dns local value
PREVIOUS_HS_DOMAINDNSLOCAL=`grep 'HS_DOMAINDNSLOCAL=' $COOVA_CONFIG_FILE | awk {'print $1'}`
# Set chilli domain DNS locals to 'off' since internet on
sed -i "s:$PREVIOUS_HS_DOMAINDNSLOCAL:HS_DOMAINDNSLOCAL=off:g" $COOVA_CONFIG_FILE 

# Sound alert beep
# ----------------
[ -x $BEEP_SOUNDS_SCRIPT ] && $BEEP_SOUNDS_SCRIPT online


elif [ "$DNS_STATUS" = "DOWN" ] && [ "$LAST_DNS_STATUS" = "UP" ];
then
# Debug
echo "$(date): New State = Down | Old State = Up" >> $DEBUG_FILE
#
# DNS off: Internet is DOWN
# --------------------------
#
# Add entries to dnsmasq for local resolution
echo "address=/#/$COOVA_SERVER_IP
address=/#/$NETWORK_IP_ADDRESS" > /etc/dnsmasq.d/dns_off.conf
# Restart dnsmasq.service
systemctl restart dnsmasq.service

# Since Internet is now down - Stop stuff that requires connectivity
# ------------------------------------------------------------------
# Take chrony off-line
$CHRONYC_CMD <<EOF
password $CHRONYC_PASSWD
offline
EOF

# Configure CoovaChilli DomainDNSlocal
# ------------------------------------
# Get previous domains dns local value
PREVIOUS_HS_DOMAINDNSLOCAL=`grep 'HS_DOMAINDNSLOCAL=' $COOVA_CONFIG_FILE | awk {'print $1'}`
# Set chilli domain DNS locals to 'on' since internet off
sed -i "s:$PREVIOUS_HS_DOMAINDNSLOCAL:HS_DOMAINDNSLOCAL=on:g" $COOVA_CONFIG_FILE 

# Sound alert beep
# ----------------
[ -x $BEEP_SOUNDS_SCRIPT ] && $BEEP_SOUNDS_SCRIPT offline

else
# Debug
echo "$(date): Unknown - New State = [$DNS_STATUS] | Old State = [$LAST_DNS_STATUS]" >> $DEBUG_FILE
# Quit
exit

fi


# Run processes whenever there's a change in status i.e. UP or DOWN
###################################################################
# 1) Reload configs for captive portal: coova-chilli
/usr/bin/jambulatv-chilli reload
#systemctl restart coova-chilli
#
# 2) Restart wireless access point: hostapd
#systemctl restart hostapd
#
# Reload WiFi driver for buggy chipsets
#/usr/bin/lsusb | grep -i RTL8188CUS > /dev/null 2>&1 && /usr/sbin/rmmod rtl8192cu && /usr/sbin/modprobe rtl8192cu debug=5 && /usr/bin/systemctl restart hostapd.service
