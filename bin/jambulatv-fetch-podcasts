#!/bin/sh
#
# Jambula Labs @copyright 2020-2021 All rights reserved
#
# Variables
ARIA2_CMD=/usr/bin/aria2c 
ARIA2_OPTIONS="-c -D -q --log-level=notice"
#
YOUTUBE_DL_CMD="/usr/bin/youtube-dl"
YOUTUBE_DL_OPTS="-q -4 -i --ignore-config --prefer-insecure --no-check-certificate --geo-bypass --hls-prefer-ffmpeg"
YOUTUBE_VIDEO_FORMAT="best"
#
FETCH_LOG_FILE=/var/log/JambulaTV/$(basename $0).log
#
# Email
EMAIL_VIA_GMAIL_TOOL=/usr/bin/jambulatv-email
EMAIL_CREDENTIALS_CONFIG=/etc/JambulaTV/messaging-email.cfg
# Telegram
TELEGRAM_CREDENTIALS_CONFIG=/etc/JambulaTV/messaging-telegram.cfg
# WhatsApp
WHATSAPP_CREDENTIALS_CONFIG=/etc/JambulaTV/messaging-whatsapp.cfg
WHATSAPP_PHONE_NUMBER_RECIPIENT=$(grep WHATSAPP_PHONE_NUMBER_RECIPIENT $WHATSAPP_CREDENTIALS_CONFIG | cut -d = -f2)

SCRIPT_ARGUMENT_1=$1
PODCASTS_COMPLETED_DIRECTORY=$2
PODCASTS_SPOOL_DIRECTORY=$3
EMAIL_TO_ADDRESS=$4

# What process called this script
PARENT_COMMAND="$(ps -o comm= $PPID)"

# Default variables if no args 
[ "x$PODCASTS_COMPLETED_DIRECTORY" = "x" ] && PODCASTS_COMPLETED_DIRECTORY=/JambulaTV/Podcasts
[ "x$PODCASTS_SPOOL_DIRECTORY" = "x" ] && PODCASTS_SPOOL_DIRECTORY=$PODCASTS_COMPLETED_DIRECTORY/spool

# Quit if no arguments specified i.e. help
if [ "x$SCRIPT_ARGUMENT_1" = "x" ];
then
clear
echo "Usage: $(basename $0) [PODCAST_META_FILE(required)|all] [COMPLETED_DIRECTORY] [SPOOL_DIRECTORY] [EMAIL_TO_ADDRESS]"
exit 1
fi

# If selected podcast meta file is 'all', choose all
if [ "$SCRIPT_ARGUMENT_1" = "all" ] || [ "$SCRIPT_ARGUMENT_1" = "ALL" ];
then
SELECTED_PODCAST_META_FILES=$(for FILE in `ls -x $PODCASTS_SPOOL_DIRECTORY/.*meta`; do echo -n "$(basename $FILE) "; done)
else
SELECTED_PODCAST_META_FILES=$SCRIPT_ARGUMENT_1
fi

# Source Email credentials if non specified
[ "x$EMAIL_TO_ADDRESS" = "x" ] && \
. $EMAIL_CREDENTIALS_CONFIG


###############
#  FUNCTIONS  #
###############

send_podcast_queued_notices  () {
# Get podcasts info files
SELECTED_PODCAST_INFO_FILES=$(for FILE in `ls -x $PODCASTS_SPOOL_DIRECTORY/.*info`; do echo -n "$(basename $FILE) "; done)
# Queued: Send podcast queued notices if this script was called automatically by flexget  
for PODCAST_INFO_FILE in $SELECTED_PODCAST_INFO_FILES
do 

# Set path to podcast info file
PODCAST_INFO_FILE_PATH=$PODCASTS_SPOOL_DIRECTORY/$PODCAST_INFO_FILE
#
# Quit if no Podcast info file not found
if [ ! -e "$PODCAST_INFO_FILE_PATH" ];
then
clear
echo "Error: The file [$PODCAST_INFO_FILE_PATH] was not found."
exit 1
fi

# Send a podcast queued notice if process that called this script is flexget
if [ "$PARENT_COMMAND" = "flexget" ]
then
# Telegram
MESSAGE=$(cat $PODCAST_INFO_FILE_PATH); /usr/bin/jambulatv-telegram sendmessage "$MESSAGE" &
# WhatsApp
MESSAGE=$(cat $PODCAST_INFO_FILE_PATH); /usr/bin/jambulatv-whatsapp sendmessage "$MESSAGE" $WHATSAPP_PHONE_NUMBER_RECIPIENT &
fi

# Remove podcast info file after sending notice
[ -f $PODCAST_INFO_FILE_PATH ] && rm -f $PODCAST_INFO_FILE_PATH

done
}

create_complete_script_and_fetch_podcast () {
for PODCAST_META_FILE in $SELECTED_PODCAST_META_FILES
do 

# Set path to podcast meta file
PODCAST_META_FILE_PATH=$PODCASTS_SPOOL_DIRECTORY/$PODCAST_META_FILE

# Quit if no Podcast meta file not found
if [ ! -e "$PODCAST_META_FILE_PATH" ];
then
clear
echo "Error: The file [$PODCAST_META_FILE_PATH] was not found."
exit 1
fi

# Set on download completed script
ON_DOWNLOAD_COMPLETE_SCRIPT=/tmp/${PODCAST_META_FILE}_send_notification.sh

# Get information about podcast
URL=$(grep '\[URL\]' $PODCAST_META_FILE_PATH | sed 's:\[URL\]|*::')
TITLE=$(grep '\[TITLE\]' $PODCAST_META_FILE_PATH | sed 's:\[TITLE\]|*::')
DESCRIPTION=$(grep '\[DESCRIPTION\]' $PODCAST_META_FILE_PATH | sed 's:\[DESCRIPTION\]|*::')
DURATION=$(grep '\[DURATION\]' $PODCAST_META_FILE_PATH | sed 's:\[DURATION\]|*::')
IMAGE=$(grep '\[IMAGE\]' $PODCAST_META_FILE_PATH | sed 's:\[IMAGE\]|*::')
#
PODCAST_FILE=$(basename $URL)

# Remove existing Aria2c download script
[ -f $ON_DOWNLOAD_COMPLETE_SCRIPT ] && sudo rm -f $ON_DOWNLOAD_COMPLETE_SCRIPT

# Generate 'On-Download-completed' Scripts
# ----------------------------------------
cat > $ON_DOWNLOAD_COMPLETE_SCRIPT << EOF
#!/bin/sh
# Perform the following after aria2 download is completed
#
# Source Telegram credentials
. $TELEGRAM_CREDENTIALS_CONFIG

# Source WhatsApp credentials
. $WHATSAPP_CREDENTIALS_CONFIG

# Email
$EMAIL_VIA_GMAIL_TOOL $EMAIL_TO_ADDRESS "*[JambulaTV] New Podcast(s) Added*" "The following podcast was successfully downloaded. You may find it under 'Videos >> Files >> Podcasts' on your JambulaTV or in the folder $PODCASTS_COMPLETED_DIRECTORY. Enjoy!

*$TITLE*
$DESCRIPTION
$DURATION
$IMAGE"


# Telegram if API Bot and Chat ID exist
if [ "x\$TELEGRAM_API_BOT" != "x" ] && [ "x\$TELEGRAM_CHAT_ID" != "x" ];
then
/usr/bin/jambulatv-telegram sendmessage "*[JambulaTV] New Podcast(s) Added*
The following podcast was successfully downloaded. You may find it under 'Videos >> Files >> Podcasts' on your JambulaTV or in the folder ${PODCASTS_COMPLETED_DIRECTORY}. Enjoy!

*$TITLE*
$DESCRIPTION
$DURATION
$IMAGE"

else
echo "WARNING: No telegram message sent as it was not configured"
fi


# WhatsApp
if [ "x\$WHATSAPP_PHONE_NUMBER_RECIPIENT" != "x" ];
then

sudo /usr/bin/jambulatv-whatsapp sendmessage $WHATSAPP_PHONE_NUMBER_RECIPIENT "*[JambulaTV] New Podcast(s) Added*
The following podcast was successfully downloaded. You may find it under 'Videos >> Files >> Podcasts' on your JambulaTV or in the folder ${PODCASTS_COMPLETED_DIRECTORY}. Enjoy!

*$TITLE*
$DESCRIPTION
$DURATION
$IMAGE"

else
echo "WARNING: No WhatsApp message sent as it was not configured"
fi


# Check for unfinished downloads
ls $PODCASTS_COMPLETED_DIRECTORY/$PODCAST_FILE.aria2 > /dev/null 2>&1
UNFINISH_EXISTS=\$?
# Remove podcast meta and info files if download completed successfully
[ \$UNFINISH_EXISTS != 0 ] && rm -f $PODCAST_META_FILE_PATH
[ \$UNFINISH_EXISTS != 0 ] && rm -f $PODCAST_INFO_FILE_PATH


# Self Destruct this script
rm -- \$0

EOF
#
# Make script executable
chmod 755 $ON_DOWNLOAD_COMPLETE_SCRIPT

# Start/Resume Downloads
# ----------------------
# Test to see if URL is a youtube link
echo "$URL" | grep -i "youtube.com/watch" > /dev/null 2>&1
IS_YOUTUBE_URL=$?
#
if [[ "$IS_YOUTUBE_URL" = "0" ]];
then
# Use youtube-dl 
$YOUTUBE_DL_CMD $YOUTUBE_DL_OPTS -f $YOUTUBE_VIDEO_FORMAT -o "$PODCASTS_COMPLETED_DIRECTORY/%(uploader)s.%(title)s.%(upload_date)s.%(ext)s" --restrict-filenames --exec "$ON_DOWNLOAD_COMPLETE_SCRIPT" $URL > $FETCH_LOG_FILE 2>&1

else
# Use aria2c
$ARIA2_CMD $ARIA2_OPTIONS -d $PODCASTS_COMPLETED_DIRECTORY -l $FETCH_LOG_FILE --on-download-complete=$ON_DOWNLOAD_COMPLETE_SCRIPT $URL
fi
done
}



#################
#  MAIN SCRIPT  #
#################

# Queued: Send podcast queued notices if this script was called automatically by flexget 
[ "$PARENT_COMMAND" = "flexget" ] && send_podcast_queued_notices 

# Create Aria2 complete script and fetch fodcasts
create_complete_script_and_fetch_podcast
