#!/bin/sh
# This script is used to extract manifest URLs from youtube videos using CLI. Use it to for example:
# - Play videos using kodi youtube addon
# - Add TV channels in IPTV m3u8 playlists
#
# Jambula Labs @copyright 2017-2018 All rights reserved

# Variables
YOUTUBE_USER_URL="https://www.youtube.com/user"
YOUTUBE_CHANNEL_URL="https://www.youtube.com/channel"
YOUTUBE_WATCH_URL="https://www.youtube.com/watch?v"
YOUTUBE_DL_CMD="/usr/bin/youtube-dl"
YOUTUBE_DL_OPTS="-q -4 --prefer-insecure --no-check-certificate --geo-bypass"
YOUTUBE_VARIABLES_TEMP_FILE="/tmp/youtube_variables"
YOUTUBE_FETCH_IN_PROGRESS_FILE="/tmp/youtube_fetch_in_progress"

# Video Format to use depending on connection
YOUTUBE_VIDEO_FORMAT=93
# Video Quality definitions according to format selected 
case $YOUTUBE_VIDEO_FORMAT in
91)
YOUTUBE_VIDEO_QUALITY="mp4   256x144   HLS   197k    avc1.4d400c   mp4a.40.5@ 48k   (91)"
;;
92)
YOUTUBE_VIDEO_QUALITY="mp4   426x240   HLS   338k    avc1.4d4015   mp4a.40.5@ 48k   (92)"
;;
93)
YOUTUBE_VIDEO_QUALITY="mp4   640x360   HLS   829k    avc1.4d401e   mp4a.40.2@128k   (93)"
;;
94)
YOUTUBE_VIDEO_QUALITY="mp4   854x480   HLS   1380k   avc1.4d401f   mp4a.40.2@128k   (94)"
;;
esac

CURL_CMD="/usr/bin/curl"
CURL_OPTS="-s -S -G -L -m 60"

HTTP_BROWSER_USERAGENT="MY_USER_AGENT"
HTTP_BROWSER_COMMAND="$CURL_CMD $CURL_OPTS"

STREAM_NAME=$(echo $@ | sed 's:"::g')

JAMBULATV_SETUP_DB_NAME=MY_JAMBULATV_SETUP_DB_NAME
JAMBULATV_SETUP_DB_USER=MY_JAMBULATV_SETUP_DB_USER
JAMBULATV_SETUP_DB_PASS=MY_JAMBULATV_SETUP_DB_PASS
JAMBULATV_SETUP_DB_TABLE=MY_JAMBULATV_SETUP_DB_TABLE



###############
#  FUNCTIONS  #
###############
# Usage
usage () {
if [ "x$STREAM_NAME" = "x" ];
then
clear
cat <<EOF
Usage:  $(basename $0) [STREAM NAME] 

Supported Youtube streams:
--------------------------
ntv uganda
sparktv uganda
bukeddetv uganda
citizentv kenya 
ktn news kenya
ktn home kenya
ntv kenya
tvc news nigeria
ann7 south africa
africanews
cnbc africa
bloomberg
fox news
cnn

EOF
exit 1
fi
}

search_waiting_sound_effects () {
# Play waiting for search results sound effects
jambulatv-sounds api $YOUTUBE_FETCH_IN_PROGRESS_FILE 
}

query_mysql_db () {
mysql -s -u ${JAMBULATV_SETUP_DB_USER} -p${JAMBULATV_SETUP_DB_PASS} << EOF
USE ${JAMBULATV_SETUP_DB_NAME};
SELECT $@ FROM ${JAMBULATV_SETUP_DB_TABLE} WHERE id = (SELECT MAX(id) FROM ${JAMBULATV_SETUP_DB_TABLE});
EOF
}

query_db_4_youtube_api () {
# Query DB for custom variables
GOOGLE_YOUTUBE_API_KEY=$(query_mysql_db youtube_api_key)
GOOGLE_YOUTUBE_CLIENT_ID=$(query_mysql_db youtube_client_id)
GOOGLE_YOUTUBE_CLIENT_SECRET=$(query_mysql_db youtube_client_secret)
}

set_youtube_search_method () {
query_db_4_youtube_api 
#
# Method of search depending on availability of Youtube API Key
if [ "x$GOOGLE_YOUTUBE_API_KEY" != "x" ];
then
# API available
youtube_search_method=youtube_search_video_id_via_api
else
# No API
youtube_search_method=youtube_search_video_id_via_scraper
fi
}

youtube_search_video_id_via_api () {
# Youtube search variables
YOUTUBE_SEARCH_URL=https://www.googleapis.com/youtube/v3/search
YOUTUBE_API_KEY="$GOOGLE_YOUTUBE_API_KEY"
YOUTUBE_SEARCH_PHRASE="$@"
YOUTUBE_SEARCH_TEXT="$(echo "$YOUTUBE_SEARCH_PHRASE" | sed -s "s: :+:g")"
YOUTUBE_MAX_RESULTS=3
YOUTUBE_SEARCH_OUTPUT_FILE=/tmp/youtube_search_results
YOUTUBE_PLAYLIST_FILE=/tmp/youtube_video_ids_found
#
# Remove previous youtube search results
[ -e $YOUTUBE_SEARCH_OUTPUT_FILE ] && sudo rm -f $YOUTUBE_SEARCH_OUTPUT_FILE
# Remove previous youtube playlist file
[ -e $YOUTUBE_PLAYLIST_FILE ] && sudo rm -f $YOUTUBE_PLAYLIST_FILE
#
# Search for Youtube IDs using API
$HTTP_BROWSER_COMMAND -A "$HTTP_BROWSER_USERAGENT" -o $YOUTUBE_SEARCH_OUTPUT_FILE ${YOUTUBE_SEARCH_URL} \
	-d part="snippet" -d sp="$YOUTUBE_SEARCH_FILTER" -d key="$YOUTUBE_API_KEY" \
	-d type="video" -d maxResults=$YOUTUBE_MAX_RESULTS \
	-d q="$YOUTUBE_SEARCH_TEXT"
#
# Generate Youtube playlist containing video Ids
cat $YOUTUBE_SEARCH_OUTPUT_FILE | jq -r '.items[]' | grep videoId | awk {'print $2'} | sed 's:["|,]::g' > $YOUTUBE_PLAYLIST_FILE
#
# Filter out HTML tags from search output. Strip out Youtube links
YOUTUBE_VIDEO_ID=$(head -1 $YOUTUBE_PLAYLIST_FILE)
#
# Export Youtube ID
export YOUTUBE_VIDEO_ID
}

youtube_search_video_id_via_scraper () {
# Youtube search variables
YOUTUBE_SEARCH_URL=https://www.youtube.com/results
YOUTUBE_SEARCH_PHRASE="$@"
YOUTUBE_SEARCH_TEXT="$(echo "$YOUTUBE_SEARCH_PHRASE" | sed -s "s: :+:g")"
YOUTUBE_SEARCH_FILTER="CAMSBAgCQAFQFA%253D%253D"
YOUTUBE_SEARCH_OUTPUT_FILE=/tmp/youtube_search_results
YOUTUBE_SEARCH_SITE_LINKS_FILE=/tmp/youtube_links_found
#
# Remove previous youtube search results
[ -e $YOUTUBE_SEARCH_OUTPUT_FILE ] && sudo rm -f $YOUTUBE_SEARCH_OUTPUT_FILE
#
# Search for Youtube IDs using scraped data with filters: Live, Today, View Count
$HTTP_BROWSER_COMMAND -A "$HTTP_BROWSER_USERAGENT" -o $YOUTUBE_SEARCH_OUTPUT_FILE \
	${YOUTUBE_SEARCH_URL}?q=$YOUTUBE_SEARCH_TEXT -d sp="$YOUTUBE_SEARCH_FILTER"
#
# Filter out HTML tags from search output. Strip out Youtube links
YOUTUBE_VIDEO_ID=$(grep -i "$YOUTUBE_SEARCH_PHRASE" $YOUTUBE_SEARCH_OUTPUT_FILE | grep -oP '(?<=href="/watch\?v=).+?(?=")' | uniq | head -1)
#
# Export Youtube ID
export YOUTUBE_VIDEO_ID
}

# Youtube Video IDs
youtube_video_id_ntv_uganda () {
YOUTUBE_VIDEO_ID=$($HTTP_BROWSER_COMMAND $YOUTUBE_USER_URL/ntvuganda | grep -i "NTV Uganda Livestream" | grep -oP '(?<=href="/watch\?v=).+?(?=")' | uniq | head -1)
}

youtube_video_id_sparktv_uganda () {
YOUTUBE_VIDEO_ID=$($HTTP_BROWSER_COMMAND $YOUTUBE_USER_URL/ntvuganda | grep -i "Spark TV Live Stream" | grep -oP '(?<=href="/watch\?v=).+?(?=")' | uniq | head -1)
}

youtube_video_id_bukeddetv_uganda () {
YOUTUBE_VIDEO_ID=$($HTTP_BROWSER_COMMAND $YOUTUBE_USER_URL/bukeddetv | grep -i "Bukedde TV Live Stream" | grep -oP '(?<=href="/watch\?v=).+?(?=")' | uniq | head -1)
}

youtube_video_id_citizentv_kenya () {
YOUTUBE_VIDEO_ID=$($HTTP_BROWSER_COMMAND $YOUTUBE_USER_URL/kenyacitizentv | grep -i "Citizen TV Live" | grep -oP '(?<=href="/watch\?v=).+?(?=")' | uniq | head -1)
}

youtube_video_id_ktn_news_kenya () {
YOUTUBE_VIDEO_ID=$($HTTP_BROWSER_COMMAND $YOUTUBE_USER_URL/standardgroupkenya | grep -i "KTN News Live Stream" | grep -oP '(?<=href="/watch\?v=).+?(?=")' | uniq | head -1)
}

youtube_video_id_ktn_home_kenya () {
YOUTUBE_VIDEO_ID=$($HTTP_BROWSER_COMMAND $YOUTUBE_USER_URL/KTNClassics | grep -i "KTN Home Live Stream" | grep -oP '(?<=href="/watch\?v=).+?(?=")' | uniq | head -1)
}

youtube_video_id_ntv_kenya () {
YOUTUBE_LIVE_CHANNEL_PAGE_ID=$($HTTP_BROWSER_COMMAND $YOUTUBE_USER_URL/qtvkenya/channels | awk -F: '/title="Live"/ { print $0 }' | grep -oP '(?<=href="/channel/).+?(?=">Live)' | uniq)
YOUTUBE_VIDEO_ID=$($HTTP_BROWSER_COMMAND $YOUTUBE_CHANNEL_URL/$YOUTUBE_LIVE_CHANNEL_PAGE_ID | grep "NTV Kenya Live Stream" | grep -oP '(?<=href="/watch\?v=).+?(?=")' | uniq | head -1)
}

youtube_video_id_tvc_news_nigeria () {
YOUTUBE_VIDEO_ID=$($HTTP_BROWSER_COMMAND $YOUTUBE_CHANNEL_URL/UCgp4A6I8LCWrhUzn-5SbKvA | awk -F: '/title="TVC News Nigeria Live"/ { print $0 }' | grep -oP '(?<=href="/watch\?v=).+?(?=")' | uniq | head -1)
}

youtube_video_id_ann7_south_africa () {
YOUTUBE_LIVE_CHANNEL_PAGE_ID=UC6gciFMFztxlRrO5f4K1xbQ
YOUTUBE_VIDEO_ID=$($HTTP_BROWSER_COMMAND $YOUTUBE_CHANNEL_URL/$YOUTUBE_LIVE_CHANNEL_PAGE_ID | grep -B20 -i "LIVE NOW" | grep -i "ANN7 TV Live Stream" | grep -oP '(?<=href="/watch\?v=).+?(?=")' | uniq | head -1)
}

youtube_video_id_africanews () {
YOUTUBE_VIDEO_ID=$($HTTP_BROWSER_COMMAND $YOUTUBE_CHANNEL_URL/UC1_E8NeF5QHY2dtdLRBCCLA | grep "africanews Live" | grep -oP '(?<=href="/watch\?v=).+?(?=")' | uniq | head -1)
}

youtube_video_id_cnbc_africa () {
YOUTUBE_VIDEO_ID=$($HTTP_BROWSER_COMMAND $YOUTUBE_USER_URL/ABNDigital | grep -i "Africa Business News - Live" | grep -oP '(?<=href="/watch\?v=).+?(?=")' | uniq | head -1)
}

youtube_video_id_bloomberg () {
YOUTUBE_VIDEO_ID=$($HTTP_BROWSER_COMMAND $YOUTUBE_USER_URL/Bloomberg | grep -i "Bloomberg TV LIVE" | grep -oP '(?<=href="/watch\?v=).+?(?=")' | uniq | head -1)
}

youtube_video_id_fox_news () {
$youtube_search_method "Fox News Live Stream"
YOUTUBE_VIDEO_ID=$YOUTUBE_VIDEO_ID
}

youtube_video_id_cnn () {
$youtube_search_method "CNN Live Stream"
YOUTUBE_VIDEO_ID=$YOUTUBE_VIDEO_ID
}



#################
#  MAIN SCRIPT  #
#################
# Usage
usage

# Play waiting sound effects i.e. beeps 
search_waiting_sound_effects 

# Set search method
set_youtube_search_method

# Set Youtube Video ID
case "$STREAM_NAME" in
# NTV Uganda
[Nn][Tt][Vv]*[Uu][Gg][Aa][Nn][Dd][Aa])
youtube_video_id_ntv_uganda
;;
# SparkTV Uganda
[Ss][Pp][Aa][Rr][Kk][Tt][Vv]*[Uu][Gg][Aa][Nn][Dd][Aa])
youtube_video_id_sparktv_uganda
;;
# BukeddeTV Uganda
[Bb][Uu][Kk][Ee][Dd][Dd][Ee][Tt][Vv]*[Uu][Gg][Aa][Nn][Dd][Aa])
youtube_video_id_bukeddetv_uganda
;;
# CitizenTV Kenya 
[Cc][Ii][Tt][Ii][Zz][Ee][Nn][Tt][Vv]*[Kk][Ee][Nn][Yy][Aa])
youtube_video_id_citizentv_kenya
;;
# KTN News Kenya 
[Kk][Tt][Nn]*[Nn][Ee][Ww][Ss]*[Kk][Ee][Nn][Yy][Aa])
youtube_video_id_ktn_news_kenya
;;
# KTN Home Kenya 
[Kk][Tt][Nn]*[Hh][Oo][Mm][Ee]*[Kk][Ee][Nn][Yy][Aa])
youtube_video_id_ktn_home_kenya
;;
# NTV Kenya 
[Nn][Tt][Vv]*[Kk][Ee][Nn][Yy][Aa])
youtube_video_id_ntv_kenya
;;
# TVC News Nigeria
[Tt][Vv][Cc]*[Nn][Ee][Ww][Ss]*[Nn][Ii][Gg][Ee][Rr][Ii][Aa])
youtube_video_id_tvc_news_nigeria
;;
# ANN7 South Africa
[Aa][Nn][Nn][7]*[Ss][Oo][Uu][Tt][Hh]*[Aa][Ff][Rr][Ii][Cc][Aa])
youtube_video_id_ann7_south_africa
;;
# Africanews
[Aa][Ff][Rr][Ii][Cc][Aa][Nn][Ee][Ww][Ss])
youtube_video_id_africanews 
;;
# CNBC Africa
[Cc][Nn][Bb][Cc]*[Aa][Ff][Rr][Ii][Cc][Aa])
youtube_video_id_cnbc_africa
;;
# Bloomberg
[Bb][Ll][Oo][Oo][Mm][Bb][Ee][Rr][Gg])
youtube_video_id_bloomberg
;;
# Fox News
[Ff][Oo][Xx]*[Nn][Ee][Ww][Ss])
youtube_video_id_fox_news
;;
# CNN
[Cc][Nn][Nn])
youtube_video_id_cnn
;;
# Other search phrases
*)
$youtube_search_method "$@"
YOUTUBE_VIDEO_ID=$YOUTUBE_VIDEO_ID
;;
esac

# Quit if no Youtube ID is found 
if [ "x$YOUTUBE_VIDEO_ID" = "x" ];
then
logger -s -t $(basename $0) "Error: No Youtube ID was found for $STREAM_NAME, quitting ..."
exit 1
fi

# Get Youtube Manifest URL
YOUTUBE_MANIFEST_URL=$($YOUTUBE_DL_CMD $YOUTUBE_DL_OPTS -f $YOUTUBE_VIDEO_FORMAT -g --youtube-skip-dash-manifest $YOUTUBE_VIDEO_ID | grep http | head -1)

# Add Youtube fetch-in-progress temp file - Stop waiting sounds effect
touch $YOUTUBE_FETCH_IN_PROGRESS_FILE

# Remove Youtube variables temp file if it exists
[ -e $YOUTUBE_VARIABLES_TEMP_FILE ] && sudo rm -f $YOUTUBE_VARIABLES_TEMP_FILE

# Create a Youtube variables temp file for other tools to use
cat > $YOUTUBE_VARIABLES_TEMP_FILE <<EOF
YOUTUBE_VIDEO_ID=${YOUTUBE_VIDEO_ID}
YOUTUBE_VIDEO_URL=${YOUTUBE_WATCH_URL}=${YOUTUBE_VIDEO_ID}
YOUTUBE_VIDEO_QUALITY=${YOUTUBE_VIDEO_QUALITY}
YOUTUBE_MANIFEST_URL=${YOUTUBE_MANIFEST_URL}
EOF

# Export set Youtube variables
export YOUTUBE_VIDEO_ID YOUTUBE_VIDEO_URL YOUTUBE_VIDEO_QUALITY YOUTUBE_MANIFEST_URL 
