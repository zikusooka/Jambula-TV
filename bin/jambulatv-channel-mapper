#!/bin/sh
# This script is used to create DVB-T and IPTV channels in TVHeadend using CLI.
# Use it after services for both have been generated
# Jambula Labs @copyright 2016-2017 All rights reserved

# Variables
TVHEADEND_HTTP_IP=MY_TVHEADEND_HTTP_IP
TVHEADEND_HTTP_PORT=MY_TVHEADEND_HTTP_PORT
TVHEADEND_CONFIG_DIR=MY_TVHEADEND_CONFIG_DIR
TVHEADEND_CHANNELS_CONFIG_DIR=$TVHEADEND_CONFIG_DIR/channel/config
TVHEADEND_IPTV_NETWORK_NAME=MY_TVHEADEND_IPTV_NETWORK_NAME
TVHEADEND_IPTV_SERVICE_UUIDS_RAW_FILE=MY_TMPDIR/iptv_service_uuid.txt
TVHEADEND_LAST_CHANNEL_NUMBER=$(curl -s http://${TVHEADEND_HTTP_IP}:${TVHEADEND_HTTP_PORT}/api/channel/grid | jq '.entries[] | .number' | sort -n | tail -1)
let "TVHEADEND_IPTV_FIRST_CHANNEL_NUMBER = $TVHEADEND_LAST_CHANNEL_NUMBER + 1"

PLAYLISTS_DIRECTORY=MY_PLAYLISTS_DIRECTORY
PLAYLISTS_IPTV_WORLD_M3U_FILE=MY_PLAYLISTS_IPTV_WORLD_M3U_FILE
PROJECT_SYSTEM_ICONS_DIR=MY_PROJECT_SYSTEM_ICONS_DIR
DVBT_NETWORK_NAME=MY_DVBT_NETWORK_NAME
MULTIMEDIA_USER=MY_MULTIMEDIA_USER

INTERNET_GATEWAY_IP=$(ip route list | grep default | sed -n 's/^.*via //p' | awk '{print $1}')

TV_TYPE=$@



###############
#  FUNCTIONS  #
###############
usage () {
# Device Name
if [ "x$TV_TYPE" = "x" ];
then
clear
echo "Usage:  ./`basename $0` [TV_TYPE (dvbt|iptv)]
"
exit 1
fi
}

map_dvbt_channels () {
DIGIT=1
curl -s http://${TVHEADEND_HTTP_IP}:${TVHEADEND_HTTP_PORT}/api/service/list | jq .entries[] | grep "text\": \"$DVBT_NETWORK_NAME" | cut -d '/' -f3 | sed 's:["|,]::g' | sed 's:---::g' | grep -wEv TEST | grep -wEv '{PMT:0}' | sort -u | while read LINE
do
CHANNEL_NUMBER=$DIGIT
CHANNEL_NAME=$LINE
CHANNEL_LOGO=$(echo $CHANNEL_NAME | tr [:lower:] [:upper:]| sed 's: :_:g').png
CHANNEL_UUID=$(uuidgen -t | sed 's:-::g')
#
SERVICE_UUID=$(curl -s http://${TVHEADEND_HTTP_IP}:${TVHEADEND_HTTP_PORT}/api/service/list | jq .entries[] | grep -A2 "text\": \"$DVBT_NETWORK_NAME" | grep -w -A2 "$CHANNEL_NAME" | grep uuid | awk {'print $2'} | head -1 | sed 's:"::g')
#
# Create channel config file
cat > $TVHEADEND_CHANNELS_CONFIG_DIR/$CHANNEL_UUID <<EOF
{
	"enabled": true,
	"number": $CHANNEL_NUMBER,
	"icon": "file://$PROJECT_SYSTEM_SHARE_DIR/picons/$TV_MARKET/$CHANNEL_LOGO",
	"epgauto": true,
	"dvr_pre_time": 0,
	"dvr_pst_time": 0,
	"epg_running": -1,
	"services": [
		"$SERVICE_UUID"
	],
	"tags": [
		"",
		""
	],
	"bouquet": ""
}
EOF
#
let "DIGIT = $CHANNEL_NUMBER + 1"
done

# Give multimedia user permission to access tvheadend directories
chown -R $MULTIMEDIA_USER:video $TVHEADEND_CONFIG_DIR
#
# Restart tvheadend
systemctl restart tvheadend.service
}

map_iptv_channels () {
curl -s http://${TVHEADEND_HTTP_IP}:${TVHEADEND_HTTP_PORT}/api/service/list | jq '.entries[] | select(.text | contains("'${TVHEADEND_IPTV_NETWORK_NAME}'")).uuid' | sed 's:"::g' > $TVHEADEND_IPTV_SERVICE_UUIDS_RAW_FILE

DIGIT=$TVHEADEND_IPTV_FIRST_CHANNEL_NUMBER
cat $TVHEADEND_IPTV_SERVICE_UUIDS_RAW_FILE | while read SERVICE_UUID
do
CHANNEL_NUMBER=$DIGIT
CHANNEL_NAME=$(curl -s http://${TVHEADEND_HTTP_IP}:${TVHEADEND_HTTP_PORT}/api/service/list | jq '.entries[] | select(.uuid=="'$SERVICE_UUID'") | .text' | sed "s:$TVHEADEND_IPTV_NETWORK_NAME/$PLAYLISTS_IPTV_WORLD_M3U_FILE - ::g"| cut -d / -f2- | sed 's:"::g')
CHANNEL_LOGO=$(echo $CHANNEL_NAME | tr [:upper:] [:lower:]| sed 's: :_:g').png
CHANNEL_UUID=$(uuidgen -t | sed 's:-::g')
CHANNEL_CATEGORY=$(grep -Ew "${CHANNEL_NAME}$" ${PLAYLISTS_DIRECTORY}/${PLAYLISTS_IPTV_WORLD_M3U_FILE} | grep '#EXTINF' | cut -d , -f1 | awk {'print $NF'} | cut -d = -f2 | sed 's:"::g' | head -1)
CHANNEL_TAG=$(curl -s http://${TVHEADEND_HTTP_IP}:${TVHEADEND_HTTP_PORT}/api/channeltag/list | jq '.entries[] | select(.val=="'${CHANNEL_CATEGORY}'") | .key' | sed 's:"::g')
#
# Create channel config file
cat > $TVHEADEND_CHANNELS_CONFIG_DIR/$CHANNEL_UUID <<EOF
{
	"enabled": true,
	"number": $CHANNEL_NUMBER,
	"icon": "file://$PROJECT_SYSTEM_ICONS_DIR/IPTV/$CHANNEL_LOGO",
	"epgauto": true,
	"dvr_pre_time": 0,
	"dvr_pst_time": 0,
	"epg_running": -1,
	"services": [
		"$SERVICE_UUID"
	],
	"tags": [
		"$CHANNEL_TAG"
	],
	"bouquet": ""
}
EOF
#
let "DIGIT = $CHANNEL_NUMBER + 1"
done
}

pre_config () {
# Kill default Internet route
ip route del default
# Create directory, if non-existent
[ -d $TVHEADEND_CHANNELS_CONFIG_DIR ] || mkdir -p $TVHEADEND_CHANNELS_CONFIG_DIR
}

post_config () {
# Change directory ownership
chown -R $MULTIMEDIA_USER:video $TVHEADEND_CHANNELS_CONFIG_DIR
# Delete Internet default route - Save IP first
GATEWAY=$INTERNET_GATEWAY_IP
ip route del default
# Restart TVHeadend
systemctl restart tvheadend.service
# Restore Internet default route
ip route add default via $GATEWAY
}



#################
#  MAIN SCRIPT  #
#################
pre_config

case $TV_TYPE in
dvbt)
map_dvbt_channels
;;
iptv)
map_iptv_channels
;;
*)
usage
;;
esac

post_config
