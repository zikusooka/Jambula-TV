#!/bin/sh
# This is used to alert when a preset WiFi device has been sighted i.e. presence
# presence detection using jambulatv-mifi-query tool 
# Credit Joseph Zikusooka: https://github.com/zikusooka/query_huawei_wifi_router
# Jambula Labs @copyright 2018-2019 All rights reserved

PROJECT_NAME=JambulaTV
PROJECT_SYSTEM_CONF_DIR=/etc/$PROJECT_NAME
PROJECT_FUNCTIONS_FILE=$PROJECT_SYSTEM_CONF_DIR/functions

# Source install functions
. $PROJECT_FUNCTIONS_FILE

# source mifi router login credentials
MIFI_WIFI_IP_ADDRESS=$(query_mysql_db mifi_ip_address)
MIFI_WIFI_ADMIN_USER=$(query_mysql_db mifi_admin_user)
MIFI_WIFI_ADMIN_PASS=$(query_mysql_db mifi_admin_pass)



###############
#  FUNCTIONS  #
###############

check_connectivity_2_mifi () {
ping -c 1 -W 1 $MIFI_WIFI_IP_ADDRESS > /dev/null 2>&1
MIFI_REACHEABLE=$?
if [[ "$MIFI_REACHEABLE" != "0" ]];
then
# Quit since MiFi router is unreacheable
clear
logger -s -t $(basename $0) "The WiFi router at $MIFI_IP_ADDRESS is not reacheable.
Please check that it is powered on and that you are using the correct IP address"
exit 255
fi
}

mqtt_publish_home () {
# Source notification strings
set_notifications
# Publish to MQTT topic 
$MQTT_PUBLISH_CMD $MQTT_PUBLISH_OPTS -t "$MQTT_TOPIC_PRESENCE_FAMILY/$MAC_ADDRESS" -m "$SMARTHOME_PRESENCE_IN_MESSAGE"
}

mqtt_publish_away () {
# Source notification strings
set_notifications
# Publish to MQTT topic
$MQTT_PUBLISH_CMD $MQTT_PUBLISH_OPTS -t "$MQTT_TOPIC_PRESENCE_FAMILY/$MAC_ADDRESS" -m "$SMARTHOME_PRESENCE_OUT_MESSAGE"
}

notify_via_logger_osd_home () {
# Source notification strings
set_notifications
# Print notifciation to stdout and systemd journal
print_notification "$WIFI_USER_NAME ($WIFI_USER_MAC) $CONNECTED_TO_MIFI_NOTIFICATION_MESSAGE" text
}

notify_via_logger_osd_away () {
# Source notification strings
set_notifications
# Print notifciation to stdout and systemd journal 
print_notification "$WIFI_USER_NAME ($WIFI_USER_MAC) $DISCONNECTED_FROM_MIFI_NOTIFICATION_MESSAGE" text
}

check_presence_for_selected_users () {
# Select only users with monitor flag set to 'yes'
awk '$5 == "yes" {print $0}' $PROJECT_SYSTEM_CONF_DIR/my-wifi-devices.cfg | grep -Ev '(#.*$)|(^$)' | while read LINE
do

# Set user's WiFi MAC Address and Name
WIFI_USER_MAC=$(echo $LINE | cut -d '|' -f1 | sed 's/-/:/g'| sed 's:^ ::' | sed 's: *$::g' | tr [A-Z] [a-z])
WIFI_USER_NAME="$(echo $LINE | cut -d '|' -f2 | sed 's:^ ::' | sed 's: *$::g')"

# Log into Mifi and check for users - Add argument 'by MAC ID' i.e. 2
$MIFI_QUERY_TOOL $MIFI_WIFI_IP_ADDRESS $MIFI_WIFI_ADMIN_USER $MIFI_WIFI_ADMIN_PASS users 2 | grep -i "$WIFI_USER_MAC" > /dev/null 2>&1
USER_SIGHTED=$?

# Get last presence status
LAST_USER_SIGHTED=$([[ -e $PRESENCE_VIA_MIFI_TEMP_FILE ]] && grep -i "$WIFI_USER_MAC" $PRESENCE_VIA_MIFI_TEMP_FILE | tail -1 | awk -F, {'print $2'})

# Check to see if status changed since last run, if NOT skip
[[ $USER_SIGHTED = $LAST_USER_SIGHTED ]] && continue

# Home
# ----
if [[ $USER_SIGHTED = 0 ]];
then
# Notify via MQTT - Implement case transformations 
for MAC_ADDRESS in ${WIFI_USER_MAC,,} ${WIFI_USER_MAC^^};
do
mqtt_publish_home
done
# Notify via logger and OSD
notify_via_logger_osd_home

# Away
# ----
else
# Notify via MQTT - Implement case transformations 
for MAC_ADDRESS in ${WIFI_USER_MAC,,} ${WIFI_USER_MAC^^};
do
mqtt_publish_away
done
# Notify via logger and OSD
notify_via_logger_osd_away
fi

# Add current presence status to temp file
cat >> $PRESENCE_VIA_MIFI_TEMP_FILE <<EOT
$WIFI_USER_MAC,$USER_SIGHTED,$(date +%Y%m%d%H%M)
EOT

done
}



#################
#  MAIN SCRIPT  #
#################

# Check if MiFi router is alive
check_connectivity_2_mifi

# Remove previous temp file if it exists
[[ -f $PRESENCE_VIA_MIFI_TEMP_FILE ]] && rm -f $PRESENCE_VIA_MIFI_TEMP_FILE

while true
do

check_presence_for_selected_users

# Pause a bit i.e. PRESENCE_VIA_MIFI_CHECK_INTERVAL_SECS
sleep $PRESENCE_VIA_MIFI_CHECK_INTERVAL_SECS

done
